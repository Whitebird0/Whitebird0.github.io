<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Android逆向学习笔记——使用Python库调用Frida</title>
      <link href="//post/Frida%E7%9A%84Python%E5%BA%93%E4%BD%BF%E7%94%A8.html"/>
      <url>//post/Frida%E7%9A%84Python%E5%BA%93%E4%BD%BF%E7%94%A8.html</url>
      
        <content type="html"><![CDATA[<h1 id="1、为什么使用frida的Python库"><a href="#1、为什么使用frida的Python库" class="headerlink" title="1、为什么使用frida的Python库"></a>1、为什么使用frida的Python库</h1><p>1、之前学习的frida更多是用于手工调试阶段，如果要用代码自动化处理，还需要其他语言接入，比如Python</p><p>2、 后续学习的frida算法转发方案和frida的rpc也需要用到Python，算法转发和rpc能给逆向带来无比便捷的体验</p><p>3、frida可以实时与python进行数据交互，可以把数据发送给python，等待python处理完后，接收返回值，frida再接着往下执行代码。Python提供的各种库，让代码编写更为简单</p><h1 id="2、API学习"><a href="#2、API学习" class="headerlink" title="2、API学习"></a>2、API学习</h1><h2 id="2-1、包名附加"><a href="#2-1、包名附加" class="headerlink" title="2.1、包名附加"></a>2.1、包名附加</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> frida<span class="token punctuation">,</span> sysjsCode <span class="token operator">=</span> <span class="token triple-quoted-string string">""" ...... """</span>process <span class="token operator">=</span> frida<span class="token punctuation">.</span>get_usb_device<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>attach<span class="token punctuation">(</span><span class="token string">'进程名'</span><span class="token punctuation">)</span><span class="token comment">#老版本frida用包名，新版本frida用进程名</span>script <span class="token operator">=</span> process<span class="token punctuation">.</span>create_script<span class="token punctuation">(</span>jsCode<span class="token punctuation">)</span>script<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span>sys<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我这里以嘟嘟牛在线为例</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: UTF-8 -*-</span><span class="token keyword">import</span> frida<span class="token punctuation">,</span>sysjscode<span class="token operator">=</span><span class="token triple-quoted-string string">"""   Java.perform(function()&#123;        var RequestUtil = Java.use('com.dodonew.online.http.RequestUtil');        RequestUtil.encodeDesMap.overload('java.lang.String', 'java.lang.String', 'java.lang.String').implementation = function(a, b, c)&#123;            console.log('data: ', a);            console.log('desKey: ', b);            console.log('desIV: ', c);            var retval = this.encodeDesMap(a, b, c);            console.log('retval: ', retval);            return retval;        &#125;        var Utils = Java.use('com.dodonew.online.util.Utils');        Utils.md5.implementation = function(a)&#123;            console.log('MD5 string: ', a);            var retval = this.md5(a);            console.log(retval);            return retval;        &#125;    &#125;);"""</span>process <span class="token operator">=</span> frida<span class="token punctuation">.</span>get_usb_device<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>attach<span class="token punctuation">(</span><span class="token string">'嘟嘟牛在线'</span><span class="token punctuation">)</span>script<span class="token operator">=</span>process<span class="token punctuation">.</span>create_script<span class="token punctuation">(</span>jscode<span class="token punctuation">)</span><span class="token punctuation">;</span>script<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>sys<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202306032354518.png"></p><p>在pycharm的控制台中已经打印出数据了</p><h2 id="2-2、PID附加"><a href="#2-2、PID附加" class="headerlink" title="2.2、PID附加"></a>2.2、PID附加</h2><p>先通过ps -A｜grep dodo，获取PID</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202306040024334.png"></p><p>由于有的应用是双进程，这个时候使用包名附加就会冲突，因此可以使用PID附加</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">process <span class="token operator">=</span> frida<span class="token punctuation">.</span>get_usb_device<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>attach<span class="token punctuation">(</span><span class="token number">11518</span><span class="token punctuation">)</span>script<span class="token operator">=</span>process<span class="token punctuation">.</span>create_script<span class="token punctuation">(</span>jscode<span class="token punctuation">)</span><span class="token punctuation">;</span>script<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>sys<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>很简单，只需要把attach里的包名&#x2F;应用名改为PID进行了</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202306040026720.png"></p><h2 id="2-3、spawn方式附加"><a href="#2-3、spawn方式附加" class="headerlink" title="2.3、spawn方式附加"></a>2.3、spawn方式附加</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: UTF-8 -*-</span><span class="token keyword">import</span> frida<span class="token punctuation">,</span>sysjscode<span class="token operator">=</span><span class="token triple-quoted-string string">"""   Java.perform(function()&#123;        var RequestUtil = Java.use('com.dodonew.online.http.RequestUtil');        RequestUtil.encodeDesMap.overload('java.lang.String', 'java.lang.String', 'java.lang.String').implementation = function(a, b, c)&#123;            console.log('data: ', a);            console.log('desKey: ', b);            console.log('desIV: ', c);            var retval = this.encodeDesMap(a, b, c);            console.log('retval: ', retval);            return retval;        &#125;        var Utils = Java.use('com.dodonew.online.util.Utils');        Utils.md5.implementation = function(a)&#123;            console.log('MD5 string: ', a);            var retval = this.md5(a);            console.log(retval);            return retval;        &#125;    &#125;);"""</span><span class="token comment">#get_remote_device</span>device <span class="token operator">=</span> frida<span class="token punctuation">.</span>get_usb_device<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"device:"</span><span class="token punctuation">,</span>device<span class="token punctuation">)</span><span class="token punctuation">;</span>pid <span class="token operator">=</span> device<span class="token punctuation">.</span>spawn<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"com.dodonew.online"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#以挂起的方式创建进程</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"pid:"</span><span class="token punctuation">,</span>pid<span class="token punctuation">)</span><span class="token punctuation">;</span>process <span class="token operator">=</span> device<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>pid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"process:"</span><span class="token punctuation">,</span>process<span class="token punctuation">)</span><span class="token punctuation">;</span>script <span class="token operator">=</span> process<span class="token punctuation">.</span>create_script<span class="token punctuation">(</span>jscode<span class="token punctuation">)</span>script<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span>device<span class="token punctuation">.</span>resume<span class="token punctuation">(</span>pid<span class="token punctuation">)</span><span class="token comment">#加载完脚本，恢复进程运行</span>sys<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>先创建device，然后通过device.spawn挂起进程，通过device.attach(pid)附加到进程，加载脚本后通过resume恢复进程运行</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202306040043381.png"></p><h2 id="2-4、连接非标准端口"><a href="#2-4、连接非标准端口" class="headerlink" title="2.4、连接非标准端口"></a>2.4、连接非标准端口</h2><p>先查看手机的ip</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202306041653905.png"></p><p>然后frida-server用指定端口的方法启动</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202306041645013.png"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">process <span class="token operator">=</span> frida<span class="token punctuation">.</span>get_device_manager<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>add_remote_device<span class="token punctuation">(</span><span class="token string">'192.168.0.104:8888'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>attach<span class="token punctuation">(</span><span class="token string">'嘟嘟牛在线'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>script <span class="token operator">=</span> process<span class="token punctuation">.</span>create_script<span class="token punctuation">(</span>jscode<span class="token punctuation">)</span><span class="token punctuation">;</span>script<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"开始hook"</span><span class="token punctuation">)</span>sys<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202306041653933.png"></p><h2 id="2-5、frida与Python的交互-send"><a href="#2-5、frida与Python的交互-send" class="headerlink" title="2.5、frida与Python的交互(send)"></a>2.5、frida与Python的交互(send)</h2><p>我们用frida去做hook的时候，js代码中通过console.log打印出想要的值，但是这个值无法交给python继续使用，因此需要用到send函数来将值传递给python中，具体操作如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: UTF-8 -*-</span><span class="token keyword">import</span> frida<span class="token punctuation">,</span>sysjscode<span class="token operator">=</span><span class="token triple-quoted-string string">"""   Java.perform(function()&#123;        var RequestUtil = Java.use('com.dodonew.online.http.RequestUtil');        RequestUtil.encodeDesMap.overload('java.lang.String', 'java.lang.String', 'java.lang.String').implementation = function(a, b, c)&#123;            console.log('data: ', a);            console.log('desKey: ', b);            console.log('desIV: ', c);            var retval = this.encodeDesMap(a, b, c);            console.log('retval: ', retval);            return retval;        &#125;        var Utils = Java.use('com.dodonew.online.util.Utils');        Utils.md5.implementation = function(a)&#123;            console.log('MD5 string: ', a);            var retval = this.md5(a);            send(retval);            return retval;        &#125;    &#125;);"""</span><span class="token keyword">def</span> <span class="token function">messageFunc</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>    <span class="token keyword">if</span> message<span class="token punctuation">[</span><span class="token string">"type"</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'send'</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">u"[*] &#123;0&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>message<span class="token punctuation">[</span><span class="token string">'payload'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>process <span class="token operator">=</span> frida<span class="token punctuation">.</span>get_usb_device<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>attach<span class="token punctuation">(</span><span class="token string">'嘟嘟牛在线'</span><span class="token punctuation">)</span>script <span class="token operator">=</span> process<span class="token punctuation">.</span>create_script<span class="token punctuation">(</span>jscode<span class="token punctuation">)</span>script<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span>script<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">'message'</span><span class="token punctuation">,</span> messageFunc<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"开始hook"</span><span class="token punctuation">)</span>sys<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们通过script.on(‘message’, messageFunc)接受js里发来的消息，类似监听，然后messageFunc是回调函数，对message进行处理</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202306041831576.png"></p><p>我们打印出message，格式是key+value，通过判断key为send，打印出payload</p><h2 id="2-6、frida与Python的交互-recv"><a href="#2-6、frida与Python的交互-recv" class="headerlink" title="2.6、frida与Python的交互(recv)"></a>2.6、frida与Python的交互(recv)</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: UTF-8 -*-</span><span class="token keyword">import</span> time<span class="token keyword">import</span> frida<span class="token punctuation">,</span>sysjscode<span class="token operator">=</span><span class="token triple-quoted-string string">"""   Java.perform(function()&#123;        var RequestUtil = Java.use('com.dodonew.online.http.RequestUtil');        RequestUtil.encodeDesMap.overload('java.lang.String', 'java.lang.String', 'java.lang.String').implementation = function(a, b, c)&#123;            console.log('data: ', a);            console.log('desKey: ', b);            console.log('desIV: ', c);            var retval = this.encodeDesMap(a, b, c);            console.log('retval: ', retval);            return retval;        &#125;        var Utils = Java.use('com.dodonew.online.util.Utils');        Utils.md5.implementation = function(a)&#123;            console.log('MD5 string: ', a);            var retval = this.md5(a);            send(retval);            recv(            function(obj)&#123;                console.log(obj.data)                retval=obj.data            &#125;            ).wait();            return retval;        &#125;    &#125;);"""</span><span class="token keyword">def</span> <span class="token function">messageFunc</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>    <span class="token keyword">if</span> message<span class="token punctuation">[</span><span class="token string">"type"</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'send'</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">u"[*] &#123;0&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>message<span class="token punctuation">[</span><span class="token string">'payload'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>process <span class="token operator">=</span> frida<span class="token punctuation">.</span>get_usb_device<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>attach<span class="token punctuation">(</span><span class="token string">'嘟嘟牛在线'</span><span class="token punctuation">)</span>script <span class="token operator">=</span> process<span class="token punctuation">.</span>create_script<span class="token punctuation">(</span>jscode<span class="token punctuation">)</span>script<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span>script<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">'message'</span><span class="token punctuation">,</span> messageFunc<span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>script<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">'data'</span><span class="token punctuation">:</span> <span class="token string">'12345678123456781234567812345678'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"开始hook"</span><span class="token punctuation">)</span>sys<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们在接收到message时，通过messageFunc处理，打印出了现在的md5加密后的结果，然后通过time.sleep(10)暂停10秒后再发送数据给js，发送的值为12345678123456781234567812345678。js中通过recv函数接受python发来的数据并作处理。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">recv</span><span class="token punctuation">(</span>           <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>               console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>data<span class="token punctuation">)</span>               retval<span class="token operator">=</span>obj<span class="token punctuation">.</span>data           <span class="token punctuation">&#125;</span>           <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>recv的参数是一个回调函数，里面先打印了传来的数据，然后又把这个数据赋值给retval</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202306041856204.png"></p><h2 id="2-7、frida的rpc"><a href="#2-7、frida的rpc" class="headerlink" title="2.7、frida的rpc"></a>2.7、frida的rpc</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: UTF-8 -*-</span><span class="token keyword">import</span> time<span class="token keyword">import</span> frida<span class="token punctuation">,</span>sysjscode<span class="token operator">=</span><span class="token triple-quoted-string string">"""  Java.perform(function()&#123;        var RequestUtil = Java.use('com.dodonew.online.http.RequestUtil');        RequestUtil.encodeDesMap.overload('java.lang.String', 'java.lang.String', 'java.lang.String').implementation = function(a, b, c)&#123;            console.log('data: ', a);            console.log('desKey: ', b);            console.log('desIV: ', c);            var retval = this.encodeDesMap(a, b, c);            console.log('retval: ', retval);            return retval;        &#125;        var Utils = Java.use('com.dodonew.online.util.Utils');        Utils.md5.implementation = function(a)&#123;            console.log('MD5 string: ', a);            var retval = this.md5(a);            console.log('retval: ', retval);            return retval;        &#125;    &#125;);     function test(data) &#123;        return new Promise(function(resolve, reject) &#123;             Java.perform(function() &#123;                       var result = Java.use('com.dodonew.online.util.Utils').md5(data);                    console.log('result1: ', result);                    resolve(result);                 &#125;);         &#125;).then(function(result) &#123;                console.log('result2: ', result);                return result;  &#125;);&#125;         rpc.exports = &#123;        rpcfunc: test    &#125;;    """</span>device <span class="token operator">=</span> frida<span class="token punctuation">.</span>get_usb_device<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"device:"</span><span class="token punctuation">,</span>device<span class="token punctuation">)</span><span class="token punctuation">;</span>pid <span class="token operator">=</span> device<span class="token punctuation">.</span>spawn<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"com.dodonew.online"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#以挂起的方式创建进程</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"pid:"</span><span class="token punctuation">,</span>pid<span class="token punctuation">)</span><span class="token punctuation">;</span>process <span class="token operator">=</span> device<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>pid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"process:"</span><span class="token punctuation">,</span>process<span class="token punctuation">)</span><span class="token punctuation">;</span>script <span class="token operator">=</span> process<span class="token punctuation">.</span>create_script<span class="token punctuation">(</span>jscode<span class="token punctuation">)</span>script<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span>device<span class="token punctuation">.</span>resume<span class="token punctuation">(</span>pid<span class="token punctuation">)</span><span class="token comment">#加载完脚本，恢复进程运行</span>result <span class="token operator">=</span> script<span class="token punctuation">.</span>exports_sync<span class="token punctuation">.</span>rpcfunc<span class="token punctuation">(</span><span class="token string">'equtype=ANDROID&amp;loginImei=Androidnull&amp;timeStamp=1626790668522&amp;userPwd=a12345678&amp;username=15968079477&amp;key=sdlkjsdljf0j2fsjk'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"开始hook"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"result3："</span><span class="token operator">+</span>result<span class="token punctuation">)</span>sys<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过rpc.exports导出函数，然后通过script.exports_sync.rpcfunc调用函数。这里要注意个问题，我们在js中定义函数test时，原本的代码如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>       Java<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>              result <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'com.dodonew.online.util.Utils'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">md5</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>           console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'result1: '</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'result2: '</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">return</span> result<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里有个问题，test被执行时，并不是顺序执行的， Java.perform会异步操作，因此，在 Java.perform()调用之后，代码会立即执行 console.log(‘result2: ‘, result)，然后执行 return result;。这意味着 Java.use(‘com.dodonew.online.util.Utils’).md5(data)的执行尚未完成，因此 result 变量的值仍然为空字符串，而不是预期的 MD5 值。利用chatgpt对代码进行了修改后就可以正常打印了</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202306042207129.png"></p><h2 id="2-8、frida算法转发"><a href="#2-8、frida算法转发" class="headerlink" title="2.8、frida算法转发"></a>2.8、frida算法转发</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> requests<span class="token punctuation">,</span> json<span class="token keyword">import</span> fridajsCode <span class="token operator">=</span> <span class="token string">""</span>"    <span class="token keyword">function</span> <span class="token function">hookTest</span><span class="token punctuation">(</span><span class="token parameter">username<span class="token punctuation">,</span> passward</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> result<span class="token punctuation">;</span>        Java<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> time <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> signData <span class="token operator">=</span> <span class="token string">'equtype=ANDROID&amp;loginImei=Android352689082129358&amp;timeStamp='</span> <span class="token operator">+</span>             time <span class="token operator">+</span> <span class="token string">'&amp;userPwd='</span> <span class="token operator">+</span> passward <span class="token operator">+</span> <span class="token string">'&amp;username='</span> <span class="token operator">+</span> username <span class="token operator">+</span> <span class="token string">'&amp;key=sdlkjsdljf0j2fsjk'</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> Utils <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'com.dodonew.online.util.Utils'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> sign <span class="token operator">=</span> Utils<span class="token punctuation">.</span><span class="token function">md5</span><span class="token punctuation">(</span>signData<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'sign: '</span><span class="token punctuation">,</span> sign<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> encryptData <span class="token operator">=</span> <span class="token string">'&#123;"equtype":"ANDROID","loginImei":"Android352689082129358","sign":"'</span><span class="token operator">+</span>             sign <span class="token operator">+</span><span class="token string">'","timeStamp":"'</span><span class="token operator">+</span> time <span class="token operator">+</span><span class="token string">'","userPwd":"'</span> <span class="token operator">+</span> passward <span class="token operator">+</span> <span class="token string">'","username":"'</span> <span class="token operator">+</span> username <span class="token operator">+</span> <span class="token string">'"&#125;'</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> RequestUtil <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'com.dodonew.online.http.RequestUtil'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> Encrypt <span class="token operator">=</span> RequestUtil<span class="token punctuation">.</span><span class="token function">encodeDesMap</span><span class="token punctuation">(</span>encryptData<span class="token punctuation">,</span> <span class="token string">'65102933'</span><span class="token punctuation">,</span> <span class="token string">'32028092'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Encrypt: '</span><span class="token punctuation">,</span> Encrypt<span class="token punctuation">)</span><span class="token punctuation">;</span>            result <span class="token operator">=</span> Encrypt<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    rpc<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">rpcfunc</span><span class="token operator">:</span> hookTest    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token string">""</span>"# 调用frida脚本process <span class="token operator">=</span> frida<span class="token punctuation">.</span><span class="token function">get_device_manager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add_remote_device</span><span class="token punctuation">(</span><span class="token string">'192.168.1.106:8888'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span><span class="token string">"嘟嘟牛在线"</span><span class="token punctuation">)</span>script <span class="token operator">=</span> process<span class="token punctuation">.</span><span class="token function">create_script</span><span class="token punctuation">(</span>jsCode<span class="token punctuation">)</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">'[*] Running Whitebird'</span><span class="token punctuation">)</span>script<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span>cipherText <span class="token operator">=</span> script<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function">rpcfunc</span><span class="token punctuation">(</span><span class="token string">'18075042220'</span><span class="token punctuation">,</span> <span class="token string">'a12345678'</span><span class="token punctuation">)</span><span class="token function">print</span><span class="token punctuation">(</span>cipherText<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其实就是调用app中的加密算法</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202307040646286.png"></p><h2 id="2-9、将python作为服务端转发"><a href="#2-9、将python作为服务端转发" class="headerlink" title="2.9、将python作为服务端转发"></a>2.9、将python作为服务端转发</h2><p>我们上面的测试代码都是用python写的，有的时候我们可能想用其他语言去实现，但是其他语言不一定有frida的rpc库，所以我们可以把python作为中间层，将python开启一个服务，这样就可以让别的语言访问，类似于函数的封装，然后提供一个接口。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">pip3 install fastapipip3 install uvicorn<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>代码如下</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token punctuation">,</span> json<span class="token keyword">import</span> frida<span class="token keyword">import</span> uvicorn<span class="token keyword">import</span> fastapijsCode <span class="token operator">=</span> <span class="token triple-quoted-string string">"""    function hookTest(username, passward)&#123;        var result;        Java.perform(function()&#123;            var time = new Date().getTime();            var signData = 'equtype=ANDROID&amp;loginImei=Android352689082129358&amp;timeStamp=' +             time + '&amp;userPwd=' + passward + '&amp;username=' + username + '&amp;key=sdlkjsdljf0j2fsjk';            var Utils = Java.use('com.dodonew.online.util.Utils');            var sign = Utils.md5(signData).toUpperCase();            console.log('sign: ', sign);            var encryptData = '&#123;"equtype":"ANDROID","loginImei":"Android352689082129358","sign":"'+             sign +'","timeStamp":"'+ time +'","userPwd":"' + passward + '","username":"' + username + '"&#125;';            var RequestUtil = Java.use('com.dodonew.online.http.RequestUtil');            var Encrypt = RequestUtil.encodeDesMap(encryptData, '65102933', '32028092');            console.log('Encrypt: ', Encrypt);            result = Encrypt;        &#125;);        return result;    &#125;    rpc.exports = &#123;        rpcfunc: hookTest    &#125;;"""</span><span class="token comment"># 调用frida脚本</span>process <span class="token operator">=</span> frida<span class="token punctuation">.</span>get_device_manager<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>add_remote_device<span class="token punctuation">(</span><span class="token string">'192.168.1.106:8888'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>attach<span class="token punctuation">(</span><span class="token string">"嘟嘟牛在线"</span><span class="token punctuation">)</span>script <span class="token operator">=</span> process<span class="token punctuation">.</span>create_script<span class="token punctuation">(</span>jsCode<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[*] Running Whitebird'</span><span class="token punctuation">)</span>script<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span>cipherText <span class="token operator">=</span> script<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>rpcfunc<span class="token punctuation">(</span><span class="token string">'18075042220'</span><span class="token punctuation">,</span> <span class="token string">'a12345678'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>cipherText<span class="token punctuation">)</span>app <span class="token operator">=</span> fastapi<span class="token punctuation">.</span>FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">"/get"</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">getEchoApi</span><span class="token punctuation">(</span>item_id<span class="token punctuation">,</span> item_user<span class="token punctuation">,</span> item_pass<span class="token punctuation">)</span><span class="token punctuation">:</span>    result <span class="token operator">=</span> script<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>rpcfunc<span class="token punctuation">(</span>item_user<span class="token punctuation">,</span> item_pass<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">"item_id"</span><span class="token punctuation">:</span> item_id<span class="token punctuation">,</span> <span class="token string">"item_retval"</span><span class="token punctuation">:</span> result<span class="token punctuation">&#125;</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    uvicorn<span class="token punctuation">.</span>run<span class="token punctuation">(</span>app<span class="token punctuation">,</span> port <span class="token operator">=</span> <span class="token number">8080</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202307040734160.png"></p><p>构造访问的url：<a href="http://127.0.0.1:8080/get?item_id=100&item_user=18075042220&item_pass=a12345678">http://127.0.0.1:8080/get?item_id=100&amp;item_user=18075042220&amp;item_pass=a12345678</a></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202307040735058.png"></p><p>现在我们可以用其他语言直接发起get请求，传入对应的参数就可以得到加密后的结果</p><p>我们还可以写一个post请求</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> curses <span class="token keyword">import</span> A_ALTCHARSET<span class="token keyword">import</span> requests<span class="token punctuation">,</span> json<span class="token keyword">import</span> frida<span class="token keyword">import</span> uvicorn<span class="token keyword">import</span> fastapi<span class="token keyword">from</span> pydantic <span class="token keyword">import</span> BaseModeljsCode <span class="token operator">=</span> <span class="token triple-quoted-string string">"""    function hookTest(username, passward)&#123;        var result;        Java.perform(function()&#123;            var time = new Date().getTime();            var signData = 'equtype=ANDROID&amp;loginImei=Android352689082129358&amp;timeStamp=' +             time + '&amp;userPwd=' + passward + '&amp;username=' + username + '&amp;key=sdlkjsdljf0j2fsjk';            var Utils = Java.use('com.dodonew.online.util.Utils');            var sign = Utils.md5(signData).toUpperCase();            console.log('sign: ', sign);            var encryptData = '&#123;"equtype":"ANDROID","loginImei":"Android352689082129358","sign":"'+             sign +'","timeStamp":"'+ time +'","userPwd":"' + passward + '","username":"' + username + '"&#125;';            var RequestUtil = Java.use('com.dodonew.online.http.RequestUtil');            var Encrypt = RequestUtil.encodeDesMap(encryptData, '65102933', '32028092');            console.log('Encrypt: ', Encrypt);            result = Encrypt;        &#125;);        return result;    &#125;    rpc.exports = &#123;        rpcfunc: hookTest    &#125;;"""</span><span class="token comment"># 调用frida脚本</span>process <span class="token operator">=</span> frida<span class="token punctuation">.</span>get_device_manager<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>add_remote_device<span class="token punctuation">(</span><span class="token string">'192.168.1.106:8888'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>attach<span class="token punctuation">(</span><span class="token string">"嘟嘟牛在线"</span><span class="token punctuation">)</span>script <span class="token operator">=</span> process<span class="token punctuation">.</span>create_script<span class="token punctuation">(</span>jsCode<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[*] Running Whitebird'</span><span class="token punctuation">)</span>script<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span>cipherText <span class="token operator">=</span> script<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>rpcfunc<span class="token punctuation">(</span><span class="token string">'18075042220'</span><span class="token punctuation">,</span> <span class="token string">'a12345678'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>cipherText<span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Item</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>    item_id<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token boolean">None</span>    item_user<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token boolean">None</span>    item_pass<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token boolean">None</span>app <span class="token operator">=</span> fastapi<span class="token punctuation">.</span>FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">"/post"</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">getEchoApi</span><span class="token punctuation">(</span>postData<span class="token punctuation">:</span> Item<span class="token punctuation">)</span><span class="token punctuation">:</span>    result <span class="token operator">=</span> script<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>rpcfunc<span class="token punctuation">(</span>postData<span class="token punctuation">.</span>item_user<span class="token punctuation">,</span> postData<span class="token punctuation">.</span>item_pass<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">"item_id"</span><span class="token punctuation">:</span> postData<span class="token punctuation">.</span>item_id<span class="token punctuation">,</span> <span class="token string">"item_retval"</span><span class="token punctuation">:</span> result<span class="token punctuation">&#125;</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    uvicorn<span class="token punctuation">.</span>run<span class="token punctuation">(</span>app<span class="token punctuation">,</span> port <span class="token operator">=</span> <span class="token number">8080</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202307040751119.png"></p>]]></content>
      
      
      <categories>
          
          <category> Android逆向 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android开发学习笔记——NDK开发</title>
      <link href="//post/NDK%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/NDK%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="1、NDK介绍"><a href="#1、NDK介绍" class="headerlink" title="1、NDK介绍"></a>1、NDK介绍</h1><h2 id="1-1、app为什么把代码放到so中"><a href="#1-1、app为什么把代码放到so中" class="headerlink" title="1.1、app为什么把代码放到so中"></a>1.1、app为什么把代码放到so中</h2><p>a) C语言历史悠久，有很多现成的代码可用</p><p>b) C代码执行效率比Java高</p><p>c) Java代码很容易被反编译，而且反编译以后的逻辑很清晰</p><h2 id="1-2、为什么要学习NDK开发"><a href="#1-2、为什么要学习NDK开发" class="headerlink" title="1.2、为什么要学习NDK开发"></a>1.2、为什么要学习NDK开发</h2><p>在安卓的so开发中，基本与C&#x2F;C++开发一致，而与Java交互需要用到JNI</p><p>在本部分的NDK开发讲解中，主要就是介绍JNI相关内容，so中会接触的：系统库函数、jni调用、加密算法、魔改算法、系统调用、自定义算法</p><h2 id="1-3、什么是JNI"><a href="#1-3、什么是JNI" class="headerlink" title="1.3、什么是JNI"></a>1.3、什么是JNI</h2><p>JNI是Java Native Interface的缩写。从Java1.1开始，JNI标准成为Java平台的一部分，允许Java代码和其他语言写的代码进行交互</p><h2 id="1-4、什么是NDK"><a href="#1-4、什么是NDK" class="headerlink" title="1.4、什么是NDK"></a>1.4、什么是NDK</h2><p>NDK是一套工具，使我们能够在 Android 应用中使用 C 和 C++ 代码</p><p>交叉编译工具链</p><p>NDK的配置</p><p>NDK、CMake、LLDB的作用 <a href="https://developer.android.com/ndk/guides">https://developer.android.com/ndk/guides</a></p><h2 id="1-5、ABI与指令集"><a href="#1-5、ABI与指令集" class="headerlink" title="1.5、ABI与指令集"></a>1.5、ABI与指令集</h2><p>不同的 Android 设备使用不同的 CPU，而不同的 CPU 支持不同的指令集。CPU 与指令集的每种组合都有专属的应用二进制接口 (ABI)。</p><p><a href="https://developer.android.com/ndk/guides/abis">https://developer.android.com/ndk/guides/abis</a></p><h1 id="2、NDK与Java工程的区别"><a href="#2、NDK与Java工程的区别" class="headerlink" title="2、NDK与Java工程的区别"></a>2、NDK与Java工程的区别</h1><p>1、Java代码中多了加载so和声明所需使用的so中的函数代码</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305041152608.png"></p><p>2、编写CMakeLists.txt和C文件</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305041153075.png"></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305041154553.png"></p><p>3、build.gradle中添加一些代码</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305041157191.png"></p><h1 id="3、第一个NDK工程"><a href="#3、第一个NDK工程" class="headerlink" title="3、第一个NDK工程"></a>3、第一个NDK工程</h1><p>1、CMakeLists介绍</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305041329093.png"></p><p>2、so的加载</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">static</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">loadLibrary</span><span class="token punctuation">(</span><span class="token string">"javaandso"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>3、native函数的声明</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">native</span> <span class="token class-name">String</span> <span class="token function">stringFromJNI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4、JNI函数的静态注册规则</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;jni.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string></span></span><span class="token keyword">extern</span> <span class="token string">"C"</span> JNIEXPORT jstring JNICALL<span class="token function">Java_com_example_javaandso_MainActivity_stringFromJNI</span><span class="token punctuation">(</span>        JNIEnv<span class="token operator">*</span> env<span class="token punctuation">,</span>        jobject <span class="token comment">/* this */</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    std<span class="token double-colon punctuation">::</span>string hello <span class="token operator">=</span> <span class="token string">"Hello from C++"</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> env<span class="token operator">-></span><span class="token function">NewStringUTF</span><span class="token punctuation">(</span>hello<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Java_包名_类_方法名</p><p>5、JNIEnv、jobject&#x2F;jclass</p><p>jobject 在native函数的声明改为static时，使用jclass，因为静态方法可以通过类直接调用</p><p> 6、NewstringUTF</p><p>Java的数据和so的数据不互通，如果so的数据最后要转到java层处理就需要NewstringUTF，因此NewstringUTF可以成为一个hook点。</p><p>7、在NDK开发中，一定要注意哪些是Java的类型，哪些是C&#x2F;C++的类型，在适当的时候需要转换</p><p>hello.c_str()获取C字符串的类型，jstring是JAVA字符串类型</p><p>8、extern “C” JNIEXPORT jstring JNICALL</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305041341116.png"></p><p>JNICALL是空的，JNIEXPORT代表把函数导出，给函数添加了默认的可见属性</p><ol start="9"><li><p>指定只编译arm64的so</p><pre class="line-numbers language-none"><code class="language-none">ndk &#123;    abiFilters &#39;arm64-v8a&#39;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305041349414.png"></p></li><li><p>指定编译后的so名字<img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305041402972.png"></p></li></ol><p>修改地方如下</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305041403397.png"></p><h1 id="4、so中常用的Log输出"><a href="#4、so中常用的Log输出" class="headerlink" title="4、so中常用的Log输出"></a>4、so中常用的Log输出</h1><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;jni.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;android/log.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">TAG</span> <span class="token string">"whitebird"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">LOGD</span><span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token function">__android_log_print</span><span class="token punctuation">(</span>ANDROID_LOG_DEBUG<span class="token punctuation">,</span> TAG<span class="token punctuation">,</span> __VA_ARGS__<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">LOGI</span><span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token function">__android_log_print</span><span class="token punctuation">(</span>ANDROID_LOG_INFO <span class="token punctuation">,</span> TAG<span class="token punctuation">,</span> __VA_ARGS__<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">LOGE</span><span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token function">__android_log_print</span><span class="token punctuation">(</span>ANDROID_LOG_ERROR<span class="token punctuation">,</span> TAG<span class="token punctuation">,</span> __VA_ARGS__<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token keyword">extern</span> <span class="token string">"C"</span> JNIEXPORT jstring JNICALL<span class="token function">Java_com_example_javaandso_MainActivity_stringFromJNI</span><span class="token punctuation">(</span>        JNIEnv<span class="token operator">*</span> env<span class="token punctuation">,</span>        jobject <span class="token comment">/* this */</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    std<span class="token double-colon punctuation">::</span>string hello <span class="token operator">=</span> <span class="token string">"Hello from C++"</span><span class="token punctuation">;</span>    <span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"LOGD test%d"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">LOGI</span><span class="token punctuation">(</span><span class="token string">"LOGI test%d,%d"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">LOGE</span><span class="token punctuation">(</span><span class="token string">"LOGE test%d,%d,%d"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> env<span class="token operator">-></span><span class="token function">NewStringUTF</span><span class="token punctuation">(</span>hello<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305041815166.png"></p><h1 id="5、NDK多线程"><a href="#5、NDK多线程" class="headerlink" title="5、NDK多线程"></a>5、NDK多线程</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> <span class="token function">pthread_create</span><span class="token punctuation">(</span>pthread_t<span class="token operator">*</span> __pthread_ptr<span class="token punctuation">,</span> pthread_attr_t <span class="token keyword">const</span><span class="token operator">*</span> __attr<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token operator">*</span>__start_routine<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第一个是指向pthread的指针，也是线程id，第二个是线程属性，第三个是线程执行的函数，第四个是函数参数</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;jni.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;android/log.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">TAG</span> <span class="token string">"whitebird"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">LOGD</span><span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token function">__android_log_print</span><span class="token punctuation">(</span>ANDROID_LOG_DEBUG<span class="token punctuation">,</span> TAG<span class="token punctuation">,</span> __VA_ARGS__<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">LOGI</span><span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token function">__android_log_print</span><span class="token punctuation">(</span>ANDROID_LOG_INFO <span class="token punctuation">,</span> TAG<span class="token punctuation">,</span> __VA_ARGS__<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">LOGE</span><span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token function">__android_log_print</span><span class="token punctuation">(</span>ANDROID_LOG_ERROR<span class="token punctuation">,</span> TAG<span class="token punctuation">,</span> __VA_ARGS__<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token keyword">void</span> <span class="token function">myThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    std<span class="token double-colon punctuation">::</span>string test<span class="token operator">=</span><span class="token string">"this is a thread function"</span><span class="token punctuation">;</span>    <span class="token function">LOGD</span><span class="token punctuation">(</span>test<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">extern</span> <span class="token string">"C"</span> JNIEXPORT jstring JNICALL<span class="token function">Java_com_example_javaandso_MainActivity_stringFromJNI</span><span class="token punctuation">(</span>        JNIEnv<span class="token operator">*</span> env<span class="token punctuation">,</span>        jobject <span class="token comment">/* this */</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    std<span class="token double-colon punctuation">::</span>string hello <span class="token operator">=</span> <span class="token string">"Hello from C++"</span><span class="token punctuation">;</span>    pthread_t pthread<span class="token punctuation">;</span>    <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>pthread<span class="token punctuation">,</span> <span class="token keyword">nullptr</span><span class="token punctuation">,</span> <span class="token generic-function"><span class="token function">reinterpret_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>myThread<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> env<span class="token operator">-></span><span class="token function">NewStringUTF</span><span class="token punctuation">(</span>hello<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305041852040.png"></p><p>默认的线程属性是joinable 随着主线程结束而结束</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;jni.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;android/log.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">TAG</span> <span class="token string">"whitebird"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">LOGD</span><span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token function">__android_log_print</span><span class="token punctuation">(</span>ANDROID_LOG_DEBUG<span class="token punctuation">,</span> TAG<span class="token punctuation">,</span> __VA_ARGS__<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">LOGI</span><span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token function">__android_log_print</span><span class="token punctuation">(</span>ANDROID_LOG_INFO <span class="token punctuation">,</span> TAG<span class="token punctuation">,</span> __VA_ARGS__<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">LOGE</span><span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token function">__android_log_print</span><span class="token punctuation">(</span>ANDROID_LOG_ERROR<span class="token punctuation">,</span> TAG<span class="token punctuation">,</span> __VA_ARGS__<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token keyword">void</span> <span class="token function">myThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    std<span class="token double-colon punctuation">::</span>string test<span class="token operator">=</span><span class="token string">"this is a thread function"</span><span class="token punctuation">;</span>    <span class="token function">LOGD</span><span class="token punctuation">(</span>test<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//子线程中使用它来退出线程</span>    <span class="token function">pthread_exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">extern</span> <span class="token string">"C"</span> JNIEXPORT jstring JNICALL<span class="token function">Java_com_example_javaandso_MainActivity_stringFromJNI</span><span class="token punctuation">(</span>        JNIEnv<span class="token operator">*</span> env<span class="token punctuation">,</span>        jobject <span class="token comment">/* this */</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    pthread_t pthread<span class="token punctuation">;</span>    <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>pthread<span class="token punctuation">,</span> <span class="token keyword">nullptr</span><span class="token punctuation">,</span> <span class="token generic-function"><span class="token function">reinterpret_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>myThread<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//线程属性是dettach，可以分离执行</span>    <span class="token function">pthread_join</span><span class="token punctuation">(</span>pthread<span class="token punctuation">,</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> env<span class="token operator">-></span><span class="token function">NewStringUTF</span><span class="token punctuation">(</span>hello<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305041855663.png"></p><h1 id="6、JNI-OnLoad"><a href="#6、JNI-OnLoad" class="headerlink" title="6、JNI_OnLoad"></a>6、JNI_OnLoad</h1><p>在使用native方法前都会先加载该native方法的so文件，通常在一个类的静态代码块中进行加载，当然也可以在构造函数，或者调用前加载。jvm在加载so时都会先调用so中的JNI_OnLoad函数，如果你没有重写该方法，那么系统会给你自动生成一个。我们先来测试一下JNI_OnLoad的调用时机</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305041932381.png"></p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">JNIEXPORT jint <span class="token function">JNI_OnLoad</span><span class="token punctuation">(</span>JavaVM <span class="token operator">*</span>vm<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>reserved<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    JNIEnv <span class="token operator">*</span>env <span class="token operator">=</span> <span class="token keyword">nullptr</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token operator">-></span><span class="token function">GetEnv</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>env<span class="token punctuation">,</span> JNI_VERSION_1_6<span class="token punctuation">)</span> <span class="token operator">!=</span> JNI_OK<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"GetEnv failed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> JNI_VERSION_1_6<span class="token punctuation">;</span>  <span class="token comment">//如果我们的*.so中没有提供JNI_OnLoad()函数，VM会默认该*.so档是使用最老的JNI 1.1版本。</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意事项</strong></p><p>1、一个so中可以不定义JNI_OnLoad，一旦定义了JNI_OnLoad，在so被加载的时候会自动执行，必须返回JNI版本 JNI_VERSION_1_6</p><p>2、在so被成功卸载时，会回调另一个JNI方法：JNI_UnOnLoad。这两个方法声明如下：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">JNIEXPORT jint JNICALL <span class="token function">JNI_OnLoad</span><span class="token punctuation">(</span>JavaVM<span class="token operator">*</span> vm<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> reserved<span class="token punctuation">)</span><span class="token punctuation">;</span>JNIEXPORT <span class="token keyword">void</span> JNICALL <span class="token function">JNI_OnUnload</span><span class="token punctuation">(</span>JavaVM<span class="token operator">*</span> vm<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> reserved<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>其中第一个参数vm表示DVM虚拟机，该vm在应用进程中仅有一个，可以保存在native的静态变量中，供其他函数或其他线程使用。其返回值表示当前需要native library需要的版本。</p><h1 id="7、JavaVM"><a href="#7、JavaVM" class="headerlink" title="7、JavaVM"></a>7、JavaVM</h1><h2 id="7-1、JavaVM是什么"><a href="#7-1、JavaVM是什么" class="headerlink" title="7.1、JavaVM是什么"></a>7.1、JavaVM是什么</h2><p>JavaVM是虚拟机在JNI中的表示，一个JVM中只有一个JavaVM实例，这个实例是线程共享的。通过JNIEnv可以获取一个Java虚拟机实例，其函数如下：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">jint <span class="token function">GetJavaVM</span><span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> JavaVM <span class="token operator">*</span><span class="token operator">*</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>vm用来存放获得的虚拟机指针的指针，成功返回0，失败返回其它值。</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token function">defined</span><span class="token punctuation">(</span>__cplusplus<span class="token punctuation">)</span></span></span><span class="token keyword">typedef</span> _JNIEnv JNIEnv<span class="token punctuation">;</span><span class="token keyword">typedef</span> _JavaVM JavaVM<span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span></span><span class="token keyword">typedef</span> <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">JNINativeInterface</span><span class="token operator">*</span> JNIEnv<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">JNIInvokeInterface</span><span class="token operator">*</span> JavaVM<span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果是C++，则用_JavaVM定义，如果是C，就用JNIInvokeInterface定义。</p><p>_JavaVM和JNIInvokeInterface分别如下：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">struct</span> <span class="token class-name">JNIInvokeInterface</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">void</span><span class="token operator">*</span>       reserved0<span class="token punctuation">;</span>    <span class="token keyword">void</span><span class="token operator">*</span>       reserved1<span class="token punctuation">;</span>    <span class="token keyword">void</span><span class="token operator">*</span>       reserved2<span class="token punctuation">;</span>    <span class="token function">jint</span>        <span class="token punctuation">(</span><span class="token operator">*</span>DestroyJavaVM<span class="token punctuation">)</span><span class="token punctuation">(</span>JavaVM<span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">jint</span>        <span class="token punctuation">(</span><span class="token operator">*</span>AttachCurrentThread<span class="token punctuation">)</span><span class="token punctuation">(</span>JavaVM<span class="token operator">*</span><span class="token punctuation">,</span> JNIEnv<span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">jint</span>        <span class="token punctuation">(</span><span class="token operator">*</span>DetachCurrentThread<span class="token punctuation">)</span><span class="token punctuation">(</span>JavaVM<span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">jint</span>        <span class="token punctuation">(</span><span class="token operator">*</span>GetEnv<span class="token punctuation">)</span><span class="token punctuation">(</span>JavaVM<span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">,</span> jint<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">jint</span>        <span class="token punctuation">(</span><span class="token operator">*</span>AttachCurrentThreadAsDaemon<span class="token punctuation">)</span><span class="token punctuation">(</span>JavaVM<span class="token operator">*</span><span class="token punctuation">,</span> JNIEnv<span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">struct</span> <span class="token class-name">_JavaVM</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">JNIInvokeInterface</span><span class="token operator">*</span> functions<span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token function">defined</span><span class="token punctuation">(</span>__cplusplus<span class="token punctuation">)</span></span></span>    jint <span class="token function">DestroyJavaVM</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> functions<span class="token operator">-></span><span class="token function">DestroyJavaVM</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    jint <span class="token function">AttachCurrentThread</span><span class="token punctuation">(</span>JNIEnv<span class="token operator">*</span><span class="token operator">*</span> p_env<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> thr_args<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> functions<span class="token operator">-></span><span class="token function">AttachCurrentThread</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> p_env<span class="token punctuation">,</span> thr_args<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    jint <span class="token function">DetachCurrentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> functions<span class="token operator">-></span><span class="token function">DetachCurrentThread</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    jint <span class="token function">GetEnv</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token operator">*</span> env<span class="token punctuation">,</span> jint version<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> functions<span class="token operator">-></span><span class="token function">GetEnv</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> env<span class="token punctuation">,</span> version<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    jint <span class="token function">AttachCurrentThreadAsDaemon</span><span class="token punctuation">(</span>JNIEnv<span class="token operator">*</span><span class="token operator">*</span> p_env<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> thr_args<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> functions<span class="token operator">-></span><span class="token function">AttachCurrentThreadAsDaemon</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> p_env<span class="token punctuation">,</span> thr_args<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/*__cplusplus*/</span></span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>_JavaVM其实是对JNIInvokeInterface的封装，底层还是调用JNIInvokeInterface的函数。</p><p>JavaVM中的常用方法：GetEnv和AttachCurrentThread(在子线程中获取JNIEnv)</p><h2 id="7-2、JavaVM的获取方式"><a href="#7-2、JavaVM的获取方式" class="headerlink" title="7.2、JavaVM的获取方式"></a>7.2、JavaVM的获取方式</h2><p>JNI_OnLoad的第一个参数</p><p>JNI_OnUnload的第一个参数</p><p>env-&gt;GetJavaVM</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">JNIEXPORT jint <span class="token function">JNI_OnLoad</span><span class="token punctuation">(</span>JavaVM <span class="token operator">*</span>vm<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>reserved<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    JNIEnv <span class="token operator">*</span>env <span class="token operator">=</span> <span class="token keyword">nullptr</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token operator">-></span><span class="token function">GetEnv</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>env<span class="token punctuation">,</span> JNI_VERSION_1_6<span class="token punctuation">)</span> <span class="token operator">!=</span> JNI_OK<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"GetEnv failed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"JavaVM %p"</span><span class="token punctuation">,</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>    JavaVM<span class="token operator">*</span><span class="token operator">*</span> vm1<span class="token punctuation">;</span>    env<span class="token operator">-></span><span class="token function">GetJavaVM</span><span class="token punctuation">(</span>vm1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"env->GetJavaVM %p"</span><span class="token punctuation">,</span><span class="token operator">*</span>vm1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> JNI_VERSION_1_6<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305050143741.png"></p><h1 id="8、JNIEnv"><a href="#8、JNIEnv" class="headerlink" title="8、JNIEnv"></a>8、JNIEnv</h1><h2 id="8-1、JNIEnv是什么"><a href="#8-1、JNIEnv是什么" class="headerlink" title="8.1、JNIEnv是什么"></a>8.1、JNIEnv是什么</h2><p>JNIEnv一般是是由虚拟机传入，而且与线程相关的变量，也就说线程A不能使用线程B的JNIEnv。而作为一个结构体，它里面定义了JNI系统操作函数。JNIEnv的定义如下：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token function">defined</span><span class="token punctuation">(</span>__cplusplus<span class="token punctuation">)</span></span></span><span class="token keyword">typedef</span> _JNIEnv JNIEnv<span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span></span><span class="token keyword">typedef</span> <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">JNINativeInterface</span><span class="token operator">*</span> JNIEnv<span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>JNIEnv在C语言环境和C++语言环境中的实现是不一样。在C中定义为JNINativeInterface，在C++中定义为_JNIEnv。</p><p>_JNIEnv结构体的定义如下：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">struct</span> <span class="token class-name">_JNIEnv</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/* do not rename this; it does not seem to be entirely opaque */</span>    <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">JNINativeInterface</span><span class="token operator">*</span> functions<span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token function">defined</span><span class="token punctuation">(</span>__cplusplus<span class="token punctuation">)</span></span></span>    jint <span class="token function">GetVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> functions<span class="token operator">-></span><span class="token function">GetVersion</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    jclass <span class="token function">DefineClass</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">,</span> jobject loader<span class="token punctuation">,</span> <span class="token keyword">const</span> jbyte<span class="token operator">*</span> buf<span class="token punctuation">,</span>        jsize bufLen<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> functions<span class="token operator">-></span><span class="token function">DefineClass</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> loader<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> bufLen<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    jclass <span class="token function">FindClass</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> name<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> functions<span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span>   </span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在_JNIEnv中定义了一个functions变量，这个变量是指向JNINativeInterface的指针。所以如果我们在写native函数时，当接收到类型为JNIEnv*的变量env时，可以使用如下方式调用JNIEnv中的函数（准确说是通过函数指针来调用函数，因为JNIEnv的数据结构聚合了所有 JNI 函数的函数指针），我们可在C++中通过如下方式调用：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">env<span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span><span class="token string">"java/lang/String"</span><span class="token punctuation">)</span>   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>而在C中可以通过如下方式调用：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token string">"java/lang/String"</span><span class="token punctuation">)</span> <span class="token comment">// C中的写法 </span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>由于变量functions是定义在结构体_JNIEnv的第1个变量，所以我们通过*env就能获取到functions变量的值，然后通过JNINativeInterface中的函数指针来调用对应的函数。</p><p>JNINativeInterface结构体的定义如下</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">struct</span> <span class="token class-name">JNINativeInterface</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">void</span><span class="token operator">*</span>       reserved0<span class="token punctuation">;</span>    <span class="token keyword">void</span><span class="token operator">*</span>       reserved1<span class="token punctuation">;</span>    <span class="token keyword">void</span><span class="token operator">*</span>       reserved2<span class="token punctuation">;</span>    <span class="token keyword">void</span><span class="token operator">*</span>       reserved3<span class="token punctuation">;</span>    <span class="token function">jint</span>        <span class="token punctuation">(</span><span class="token operator">*</span>GetVersion<span class="token punctuation">)</span><span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">jclass</span>      <span class="token punctuation">(</span><span class="token operator">*</span>DefineClass<span class="token punctuation">)</span><span class="token punctuation">(</span>JNIEnv<span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">,</span> jobject<span class="token punctuation">,</span> <span class="token keyword">const</span> jbyte<span class="token operator">*</span><span class="token punctuation">,</span>                        jsize<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">jclass</span>      <span class="token punctuation">(</span><span class="token operator">*</span>FindClass<span class="token punctuation">)</span><span class="token punctuation">(</span>JNIEnv<span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="8-2、JNIEnv的获取方式"><a href="#8-2、JNIEnv的获取方式" class="headerlink" title="8.2、JNIEnv的获取方式"></a>8.2、JNIEnv的获取方式</h2><p>1、函数静态&#x2F;动态注册，传的第一个参数</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305051057947.png"></p><p>2、vm-&gt;GetEnv</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305051058265.png"></p><p>3、globalVM-&gt;AttachCurrentThread</p><p>用于子线程中获取Env</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305051105883.png"></p><p>JNIEnv是每个线程单独拥有一个，对于JNI_OnLoad和Java_com_example_javaandso_MainActivity_stringFromJNI都在主线程中，所以他们的值相等，myThread是一个新开的线程，所以打印出来的JNIEnv值不一样。</p><h1 id="9、JNI函数的注册"><a href="#9、JNI函数的注册" class="headerlink" title="9、JNI函数的注册"></a>9、JNI函数的注册</h1><h2 id="9-1、静态注册"><a href="#9-1、静态注册" class="headerlink" title="9.1、静态注册"></a>9.1、静态注册</h2><p>必须遵循一定的命名规则，一般是Java_包名_类名_方法名</p><p>系统会通过dlopen加载对应的so，通过dlsym来获取指定名字的函数地址，然后调用静态注册的jni函数，必然在导出表里</p><h2 id="9-2、动态注册"><a href="#9-2、动态注册" class="headerlink" title="9.2、动态注册"></a>9.2、动态注册</h2><p>通过env-&gt;RegisterNatives注册函数，通常在JNI_OnLoad中注册</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305051526363.png"></p><p>JNINativeMethod是一个结构体，第一个成员是Java层的函数名，第二个是签名，通常格式为(参数类型)返回值类型，第三个参数是Native层的函数指针。</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">jstring <span class="token function">FunctionTest</span><span class="token punctuation">(</span>JNIEnv<span class="token operator">*</span> env<span class="token punctuation">,</span>jobject<span class="token punctuation">,</span><span class="token keyword">int</span> a<span class="token punctuation">,</span>jstring b<span class="token punctuation">,</span> jobjectArray c<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> env<span class="token operator">-></span><span class="token function">NewStringUTF</span><span class="token punctuation">(</span><span class="token string">"this is FunctionTest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>JNIEXPORT jint <span class="token function">JNI_OnLoad</span><span class="token punctuation">(</span>JavaVM <span class="token operator">*</span>vm<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>reserved<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    JNIEnv <span class="token operator">*</span>env <span class="token operator">=</span> <span class="token keyword">nullptr</span><span class="token punctuation">;</span>    globalvm <span class="token operator">=</span>vm<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token operator">-></span><span class="token function">GetEnv</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>env<span class="token punctuation">,</span> JNI_VERSION_1_6<span class="token punctuation">)</span> <span class="token operator">!=</span> JNI_OK<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"GetEnv failed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    jclass MainActivityClazz <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span><span class="token string">"com/example/javaandso/MainActivity"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    JNINativeMethod methods<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token punctuation">&#123;</span><span class="token string">"stringFromJNI1"</span><span class="token punctuation">,</span> <span class="token string">"(ILjava/lang/String;[Ljava/lang/Byte;)Ljava/lang/String;"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span>FunctionTest<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    env<span class="token operator">-></span><span class="token function">RegisterNatives</span><span class="token punctuation">(</span>MainActivityClazz<span class="token punctuation">,</span> methods<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>methods<span class="token punctuation">)</span><span class="token operator">/</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>JNINativeMethod<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> JNI_VERSION_1_6<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305051525833.png"></p><p>可以给同一个Java函数注册多个native函数，以最后一次为准</p><h1 id="10、多个cpp文件编译成一个so"><a href="#10、多个cpp文件编译成一个so" class="headerlink" title="10、多个cpp文件编译成一个so"></a>10、多个cpp文件编译成一个so</h1><p>新建了一个cpp文件</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305051554836.png"></p><p>如果想要把多个cpp文件编译成一个so，就需要修改CMakeLists.txt文件</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305051555550.png"></p><p>然后我们在JNI_OnLoad中调用这个函数</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305051547443.png"></p><h1 id="11、编译多个so"><a href="#11、编译多个so" class="headerlink" title="11、编译多个so"></a>11、编译多个so</h1><p>1、编写多个cpp文件</p><p>2、修改CMakeLists.txt</p><p>3、Java静态代码块加载多个so</p><pre class="line-numbers language-none"><code class="language-none"># 编译so的CMAKE的最低版本cmake_minimum_required(VERSION 3.22.1)# Declares and names the project.project(&quot;javaandso&quot;)# 设置so的名字，属性为共享库，so的源文件为native-lib.cppadd_library( # Sets the name of the library.        whitebirdA        # Sets the library as a shared library.        SHARED        # Provides a relative path to your source file(s).        native-lib.cpp        )add_library( # Sets the name of the library.        whitebirdB        # Sets the library as a shared library.        SHARED        # Provides a relative path to your source file(s).        test.cpp        )#查找依赖库，并且设置依赖库的名字log-libfind_library( # Sets the name of the path variable.        log-lib        # Specifies the name of the NDK library that        # you want CMake to locate.        log)#链接依赖库，名字就是上面定义的log-libtarget_link_libraries( # Specifies the target library.        whitebirdA        # Links the target library to the log library        # included in the NDK.        $&#123;log-lib&#125;)target_link_libraries( # Specifies the target library.        whitebirdB        # Links the target library to the log library        # included in the NDK.        $&#123;log-lib&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305051613831.png"></p><h1 id="12、so路径的动态获取"><a href="#12、so路径的动态获取" class="headerlink" title="12、so路径的动态获取"></a>12、so路径的动态获取</h1><p>先来探讨一下apk中的so文件将来要放在安卓哪一个目录下</p><p>放在&#x2F;data&#x2F;app&#x2F;包名&#x2F;lib下</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305051846911.png"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getPath</span><span class="token punctuation">(</span><span class="token class-name">Context</span> cxt<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token comment">//包管理器</span>       <span class="token class-name">PackageManager</span> pm <span class="token operator">=</span> cxt<span class="token punctuation">.</span><span class="token function">getPackageManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//得到已经安装的APP的信息</span>       <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PackageInfo</span><span class="token punctuation">></span></span> pkgList <span class="token operator">=</span> pm<span class="token punctuation">.</span><span class="token function">getInstalledPackages</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span>pkgList <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> pkgList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>       <span class="token comment">//遍历</span>       <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">PackageInfo</span> pi <span class="token operator">:</span> pkgList<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token comment">//判断是否为/data/app/开头</span>           <span class="token keyword">if</span> <span class="token punctuation">(</span>pi<span class="token punctuation">.</span>applicationInfo<span class="token punctuation">.</span>nativeLibraryDir<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"/data/app/"</span><span class="token punctuation">)</span>                   <span class="token operator">&amp;&amp;</span> pi<span class="token punctuation">.</span>packageName<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"com.example.javaandso"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token string">"whitetird"</span><span class="token punctuation">,</span> pi<span class="token punctuation">.</span>applicationInfo<span class="token punctuation">.</span>nativeLibraryDir<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token keyword">return</span> pi<span class="token punctuation">.</span>applicationInfo<span class="token punctuation">.</span>nativeLibraryDir<span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span>       <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="13、so之间相互调用"><a href="#13、so之间相互调用" class="headerlink" title="13、so之间相互调用"></a>13、so之间相互调用</h1><p>需要用到dlopen函数,需要导入dlfcn.h</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305071949862.png"></p><p>两个参数，第一个是so的路径，第二个是下面定义的常量，表示解析符号，常用RTLD_NOW</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">void</span> <span class="token operator">*</span>soinfo <span class="token operator">=</span> <span class="token function">dlopen</span><span class="token punctuation">(</span>nativePath<span class="token punctuation">,</span> RTLD_NOW<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//加载打开so</span><span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span>funptr<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">nullptr</span><span class="token punctuation">;</span><span class="token comment">//定义函数指针</span>funptr <span class="token operator">=</span> <span class="token generic-function"><span class="token function">reinterpret_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token function">dlsym</span><span class="token punctuation">(</span>soinfo<span class="token punctuation">,</span><span class="token string">"TestMain"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">funptr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305072346295.png"></p><p>另外一种方法就是通过link so实现</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305080009713.png"></p><p>然后声明后就可以调用了</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305080009716.png"></p><p>打印了两次this is TestMain for many cpp</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305080009444.png"></p><h1 id="14、通过JNI创建Java对象"><a href="#14、通过JNI创建Java对象" class="headerlink" title="14、通过JNI创建Java对象"></a>14、通过JNI创建Java对象</h1><p>有两种方法可以实现</p><h2 id="NewObject创建对象"><a href="#NewObject创建对象" class="headerlink" title="NewObject创建对象"></a>NewObject创建对象</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">jclass clazz <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span><span class="token string">"com/xiaojianbang/ndk/NDKDemo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>jmethodID methodID <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">GetMethodID</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> <span class="token string">"&lt;init>"</span><span class="token punctuation">,</span> <span class="token string">"()V"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>jobject ReflectDemoObj <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">NewObject</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> methodID<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"ReflectDemoObj %p"</span><span class="token punctuation">,</span> ReflectDemoObj<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="AllocObject创建对象"><a href="#AllocObject创建对象" class="headerlink" title="AllocObject创建对象"></a>AllocObject创建对象</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">jclass clazz <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span><span class="token string">"com/xiaojianbang/ndk/NDKDemo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>jmethodID methodID2 <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">GetMethodID</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> <span class="token string">"&lt;init>"</span><span class="token punctuation">,</span> <span class="token string">"(Ljava/lang/String;I)V"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>jobject ReflectDemoObj2 <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">AllocObject</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>jstring jstr <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">NewStringUTF</span><span class="token punctuation">(</span><span class="token string">"from jni str"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>env<span class="token operator">-></span><span class="token function">CallNonvirtualVoidMethod</span><span class="token punctuation">(</span>ReflectDemoObj2<span class="token punctuation">,</span> clazz<span class="token punctuation">,</span> methodID2<span class="token punctuation">,</span> jstr<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305080207536.png"></p><h1 id="15、通过JNI访问Java属性"><a href="#15、通过JNI访问Java属性" class="headerlink" title="15、通过JNI访问Java属性"></a>15、通过JNI访问Java属性</h1><h2 id="a、获取静态字段"><a href="#a、获取静态字段" class="headerlink" title="a、获取静态字段"></a>a、获取静态字段</h2><p>1、先调用获取静态字段ID的方法：GetStaticFieldID</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">jfieldID privateStaticStringField <span class="token operator">=</span>           env<span class="token operator">-></span><span class="token function">GetStaticFieldID</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> <span class="token string">"privateStaticStringField"</span><span class="token punctuation">,</span> <span class="token string">"Ljava/lang/String;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>2、根据字段属性选择对应的Get方法</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">//    env->GetStaticBooleanField();</span><span class="token comment">//    env->GetStaticIntField();</span><span class="token comment">//    env->GetStaticShortField();</span><span class="token comment">//    env->GetStaticByteField();</span><span class="token comment">//    env->GetStaticCharField();</span><span class="token comment">//    env->GetStaticFloatField();</span><span class="token comment">//    env->GetStaticDoubleField();</span><span class="token comment">//    env->GetStaticLongField();</span><span class="token comment">//    env->GetStaticObjectField();</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们的privateStaticStringField是String类型，其实也就是Object，所以选择env-&gt;GetStaticObjectField()</p><p>3、获取jstring的静态字段privateStaticString</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">jstring privateStaticString <span class="token operator">=</span>        <span class="token generic-function"><span class="token function">static_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span>jstring<span class="token operator">></span></span></span><span class="token punctuation">(</span>env<span class="token operator">-></span><span class="token function">GetStaticObjectField</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> privateStaticStringField<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这里把jobject强转jstring类型</p><p>4、由于我们在so层，所以要转化成C语言类型</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> privatecstr <span class="token operator">=</span>         env<span class="token operator">-></span><span class="token function">GetStringUTFChars</span><span class="token punctuation">(</span>privateStaticString<span class="token punctuation">,</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>5、打印</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"privateStaticString: %s"</span><span class="token punctuation">,</span> privatecstr<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>6、释放</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">env<span class="token operator">-></span><span class="token function">ReleaseStringUTFChars</span><span class="token punctuation">(</span>privateStaticString<span class="token punctuation">,</span> privatecstr<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305080220701.png"></p><h2 id="b、获取对象字段"><a href="#b、获取对象字段" class="headerlink" title="b、获取对象字段"></a>b、获取对象字段</h2><p>1、先获取FieldId</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">jfieldID publicStringField <span class="token operator">=</span>           env<span class="token operator">-></span><span class="token function">GetFieldID</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> <span class="token string">"publicStringField"</span><span class="token punctuation">,</span> <span class="token string">"Ljava/lang/String;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>2、获取jstring</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">jclass clazz <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span><span class="token string">"com/example/javaandso/NDKDemo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>jmethodID methodID <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">GetMethodID</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> <span class="token string">"&lt;init>"</span><span class="token punctuation">,</span> <span class="token string">"()V"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>jobject ReflectDemoObj <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">NewObject</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> methodID<span class="token punctuation">)</span><span class="token punctuation">;</span>  jstring publicString <span class="token operator">=</span>            <span class="token generic-function"><span class="token function">static_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span>jstring<span class="token operator">></span></span></span><span class="token punctuation">(</span>env<span class="token operator">-></span><span class="token function">GetObjectField</span><span class="token punctuation">(</span>ReflectDemoObj<span class="token punctuation">,</span> publicStringField<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由于我们是获取对象字段，所以一定要有个对象，因此GetObjectField的第一个参数是对象</p><p>3、转化成c语言字符串</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> publiccstr <span class="token operator">=</span>            env<span class="token operator">-></span><span class="token function">GetStringUTFChars</span><span class="token punctuation">(</span>publicString<span class="token punctuation">,</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>4、打印输出</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"publicStringField: %s"</span><span class="token punctuation">,</span> publiccstr<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5、对字符串进行释放</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">env<span class="token operator">-></span><span class="token function">ReleaseStringUTFChars</span><span class="token punctuation">(</span>publicString<span class="token punctuation">,</span> publiccstr<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305080234619.png"></p><h2 id="c、设置对象字段"><a href="#c、设置对象字段" class="headerlink" title="c、设置对象字段"></a>c、设置对象字段</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">env<span class="token operator">-></span><span class="token function">SetObjectField</span><span class="token punctuation">(</span>ReflectDemoObj<span class="token punctuation">,</span> privateStringFieldID<span class="token punctuation">,</span> env<span class="token operator">-></span><span class="token function">NewStringUTF</span><span class="token punctuation">(</span><span class="token string">"whitebird"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>通过SetObjectField就行了，第一个参数是对象，第二个参数是字段ID，第三个参数是要修改的值</p><p>进行修改前后对比</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">jfieldID privateStringFieldID <span class="token operator">=</span>          env<span class="token operator">-></span><span class="token function">GetFieldID</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> <span class="token string">"privateStringField"</span><span class="token punctuation">,</span> <span class="token string">"Ljava/lang/String;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  jstring privateString <span class="token operator">=</span>        <span class="token generic-function"><span class="token function">static_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span>jstring<span class="token operator">></span></span></span><span class="token punctuation">(</span>env<span class="token operator">-></span><span class="token function">GetObjectField</span><span class="token punctuation">(</span>ReflectDemoObj<span class="token punctuation">,</span> privateStringFieldID<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> privateCstr <span class="token operator">=</span>        env<span class="token operator">-></span><span class="token function">GetStringUTFChars</span><span class="token punctuation">(</span>privateString<span class="token punctuation">,</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"privateStringField old: %s"</span><span class="token punctuation">,</span> privateCstr<span class="token punctuation">)</span><span class="token punctuation">;</span>env<span class="token operator">-></span><span class="token function">ReleaseStringUTFChars</span><span class="token punctuation">(</span>privateString<span class="token punctuation">,</span> privateCstr<span class="token punctuation">)</span><span class="token punctuation">;</span>env<span class="token operator">-></span><span class="token function">SetObjectField</span><span class="token punctuation">(</span>ReflectDemoObj<span class="token punctuation">,</span> privateStringFieldID<span class="token punctuation">,</span> env<span class="token operator">-></span><span class="token function">NewStringUTF</span><span class="token punctuation">(</span><span class="token string">"whitebird"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>privateString <span class="token operator">=</span> <span class="token generic-function"><span class="token function">static_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span>jstring<span class="token operator">></span></span></span><span class="token punctuation">(</span>env<span class="token operator">-></span><span class="token function">GetObjectField</span><span class="token punctuation">(</span>ReflectDemoObj<span class="token punctuation">,</span> privateStringFieldID<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>privateCstr <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">GetStringUTFChars</span><span class="token punctuation">(</span>privateString<span class="token punctuation">,</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"privateStringField new: %s"</span><span class="token punctuation">,</span> privateCstr<span class="token punctuation">)</span><span class="token punctuation">;</span>env<span class="token operator">-></span><span class="token function">ReleaseStringUTFChars</span><span class="token punctuation">(</span>privateString<span class="token punctuation">,</span> privateCstr<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305080238115.png"></p><p>同时我们也能知道不管是public还是private我们都能获取</p><h1 id="16、通过JNI访问和修改Java数组"><a href="#16、通过JNI访问和修改Java数组" class="headerlink" title="16、通过JNI访问和修改Java数组"></a>16、通过JNI访问和修改Java数组</h1><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"> <span class="token comment">//获取Java对象的class和byte数组的字段ID。  </span>jfieldID byteArrayID <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">GetFieldID</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> <span class="token string">"byteArray"</span><span class="token punctuation">,</span> <span class="token string">"[B"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//通过GetObjectField获取byte数组对象，并且通过GetArrayLength获取byte数组的长度。</span>   jbyteArray byteArray <span class="token operator">=</span> <span class="token generic-function"><span class="token function">static_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span>jbyteArray<span class="token operator">></span></span></span><span class="token punctuation">(</span>env<span class="token operator">-></span><span class="token function">GetObjectField</span><span class="token punctuation">(</span>ReflectDemoObj<span class="token punctuation">,</span> byteArrayID<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">int</span> _byteArrayLength <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">GetArrayLength</span><span class="token punctuation">(</span>byteArray<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//在C++中创建一个char类型的数组cByteArray，并且为其赋值。</span>   <span class="token keyword">char</span> cByteArray<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       cByteArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">static_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">char</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">-</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span class="token comment">//将cByteArray中的元素转换成jbyte类型的数组。</span>   <span class="token keyword">const</span> jbyte <span class="token operator">*</span>java_array <span class="token operator">=</span> <span class="token generic-function"><span class="token function">reinterpret_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">const</span> jbyte <span class="token operator">*</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>cByteArray<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//使用SetByteArrayRegion函数将java数组元素设置为cByteArray中的元素。</span>   env<span class="token operator">-></span><span class="token function">SetByteArrayRegion</span><span class="token punctuation">(</span>byteArray<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> _byteArrayLength<span class="token punctuation">,</span> java_array<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//再次获取Java对象的byte数组，并且获取byte数组的元素。</span>   byteArray <span class="token operator">=</span> <span class="token generic-function"><span class="token function">static_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span>jbyteArray<span class="token operator">></span></span></span><span class="token punctuation">(</span>env<span class="token operator">-></span><span class="token function">GetObjectField</span><span class="token punctuation">(</span>ReflectDemoObj<span class="token punctuation">,</span> byteArrayID<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   _byteArrayLength <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">GetArrayLength</span><span class="token punctuation">(</span>byteArray<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//使用GetByteArrayElements函数将byte数组的元素转换到C++中的char数组CBytes中。</span>   <span class="token keyword">char</span><span class="token operator">*</span> CBytes <span class="token operator">=</span> <span class="token generic-function"><span class="token function">reinterpret_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">></span></span></span><span class="token punctuation">(</span>env<span class="token operator">-></span><span class="token function">GetByteArrayElements</span><span class="token punctuation">(</span>byteArray<span class="token punctuation">,</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//遍历CBytes数组元素，输出数组内容。</span>   <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> _byteArrayLength<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"CArray: %d"</span><span class="token punctuation">,</span> CBytes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span class="token comment">//释放CBytes数组元素，将其转移回byte数组中。</span>   env<span class="token operator">-></span><span class="token function">ReleaseByteArrayElements</span><span class="token punctuation">(</span>byteArray<span class="token punctuation">,</span> <span class="token punctuation">(</span>jbyte<span class="token operator">*</span><span class="token punctuation">)</span>CBytes<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305081653550.png"></p><h1 id="17、通过jni访问Java方法"><a href="#17、通过jni访问Java方法" class="headerlink" title="17、通过jni访问Java方法"></a>17、通过jni访问Java方法</h1><h2 id="1、调用静态函数"><a href="#1、调用静态函数" class="headerlink" title="1、调用静态函数"></a>1、调用静态函数</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">//    env->CallBooleanMethod();</span><span class="token comment">//    env->CallVoidMethod();</span><span class="token comment">//    env->CallByteMethod();</span><span class="token comment">//    env->CallShortMethod();</span><span class="token comment">//    env->CallIntMethod();</span><span class="token comment">//    env->CallCharMethod();</span><span class="token comment">//    env->CallDoubleMethod();</span><span class="token comment">//    env->CallLongMethod();</span><span class="token comment">//    env->CallFloatMethod();</span><span class="token comment">//    env->CallObjectMethod();</span>    jmethodID publicStaticFuncID <span class="token operator">=</span>            env<span class="token operator">-></span><span class="token function">GetStaticMethodID</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> <span class="token string">"publicStaticFunc"</span><span class="token punctuation">,</span> <span class="token string">"()V"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    env<span class="token operator">-></span><span class="token function">CallStaticVoidMethod</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> publicStaticFuncID<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>静态方法很简单，只要调用CallStaticVoidMethod就行了</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305081728526.png"></p><h2 id="2、调用对象函数"><a href="#2、调用对象函数" class="headerlink" title="2、调用对象函数"></a>2、调用对象函数</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">jmethodID privateFuncID <span class="token operator">=</span>          env<span class="token operator">-></span><span class="token function">GetMethodID</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span><span class="token string">"privateFunc"</span><span class="token punctuation">,</span><span class="token string">"(Ljava/lang/String;I)Ljava/lang/String;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  jstring str1 <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">NewStringUTF</span><span class="token punctuation">(</span><span class="token string">"this is from JNI"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  jstring retval_jstring <span class="token operator">=</span> <span class="token generic-function"><span class="token function">static_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span>jstring<span class="token operator">></span></span></span><span class="token punctuation">(</span>env<span class="token operator">-></span><span class="token function">CallObjectMethod</span><span class="token punctuation">(</span>ReflectDemoObj<span class="token punctuation">,</span> privateFuncID<span class="token punctuation">,</span> str1<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> retval_cstr <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">GetStringUTFChars</span><span class="token punctuation">(</span>retval_jstring<span class="token punctuation">,</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"privateStaticString: %s"</span><span class="token punctuation">,</span> retval_cstr<span class="token punctuation">)</span><span class="token punctuation">;</span>  env<span class="token operator">-></span><span class="token function">ReleaseStringUTFChars</span><span class="token punctuation">(</span>retval_jstring<span class="token punctuation">,</span> retval_cstr<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过CallObjectMethod调用对象函数，需要先创建一个对象</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305081732151.png"></p><h1 id="18、CallVoidMethod、A、V版本区别"><a href="#18、CallVoidMethod、A、V版本区别" class="headerlink" title="18、CallVoidMethod、A、V版本区别"></a>18、CallVoidMethod、A、V版本区别</h1><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305081748966.png"></p><p>可以看到CallVoidMethod底层调用的是CallVoidMethodV，他们两个的区别在于CallVoidMethod会帮我们封装参数，而CallVoidMethodV需要我们自己封装参数，可以看成它只能有一个参数。而对于CallVoidMethodA，它的参数是jvalue*</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305081751840.png"></p><p>jvalue是一个联合体</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">jmethodID privateFuncID <span class="token operator">=</span>        env<span class="token operator">-></span><span class="token function">GetMethodID</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span><span class="token string">"privateFunc"</span><span class="token punctuation">,</span><span class="token string">"(Ljava/lang/String;I)Ljava/lang/String;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>jstring str2 <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">NewStringUTF</span><span class="token punctuation">(</span><span class="token string">"this is from JNI2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>jvalue args<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>l <span class="token operator">=</span> str2<span class="token punctuation">;</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>i <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>jstring retval <span class="token operator">=</span> <span class="token generic-function"><span class="token function">static_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span>jstring<span class="token operator">></span></span></span><span class="token punctuation">(</span>env<span class="token operator">-></span><span class="token function">CallObjectMethodA</span><span class="token punctuation">(</span>ReflectDemoObj<span class="token punctuation">,</span> privateFuncID<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> cpp_retval <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">GetStringUTFChars</span><span class="token punctuation">(</span>retval<span class="token punctuation">,</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"cpp_retval: %s"</span><span class="token punctuation">,</span> cpp_retval<span class="token punctuation">)</span><span class="token punctuation">;</span>env<span class="token operator">-></span><span class="token function">ReleaseStringUTFChars</span><span class="token punctuation">(</span>retval<span class="token punctuation">,</span> cpp_retval<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过jvalue里面放参数，然后进行调用</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305081755051.png"></p><h1 id="19、通过jni访问Java父类方法"><a href="#19、通过jni访问Java父类方法" class="headerlink" title="19、通过jni访问Java父类方法"></a>19、通过jni访问Java父类方法</h1><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305090101972.png"></p><p>这里的onCreate就是调用父类方法，所以我们现在尝试把onCreate Native化</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305090103534.png"></p><p>直接快捷操作生成JNI函数</p><p>我们需要用到这个JNI函数帮我们调用父类方法</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305090104860.png"></p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">extern</span> <span class="token string">"C"</span>JNIEXPORT <span class="token keyword">void</span> JNICALL<span class="token function">Java_com_example_javaandso_MainActivity_onCreate</span><span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> jobject thiz<span class="token punctuation">,</span>                                                 jobject saved_instance_state<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// TODO: implement onCreate()</span>    jclass ComponentActivityzz<span class="token operator">=</span>env<span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span><span class="token string">"androidx/activity/ComponentActivity"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    jmethodID onCreateMethodId<span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">GetMethodID</span><span class="token punctuation">(</span>ComponentActivityzz<span class="token punctuation">,</span><span class="token string">"onCreate"</span><span class="token punctuation">,</span> <span class="token string">"(Landroid/os/Bundle;)V"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    env<span class="token operator">-></span><span class="token function">CallNonvirtualVoidMethod</span><span class="token punctuation">(</span>thiz<span class="token punctuation">,</span>ComponentActivityzz<span class="token punctuation">,</span>onCreateMethodId<span class="token punctuation">,</span>saved_instance_state<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305090112240.png"></p><p>可以正常运行</p><h1 id="20、内存管理"><a href="#20、内存管理" class="headerlink" title="20、内存管理"></a>20、内存管理</h1><h2 id="1、局部引用"><a href="#1、局部引用" class="headerlink" title="1、局部引用"></a>1、局部引用</h2><p>1、大多数的jni函数，调用以后返回的结果都是局部引用，因此，env-&gt;NewLocalRef 基本不用</p><p>2、一个函数内的局部引用数量是有限制的，在早期的安卓系统中，体现的更为明显</p><p>3、当函数体内需要大量使用局部引用时，比如大循环中，最好及时删除不用的局部引用，可以使用 env-&gt;DeleteLocalRef 来删除局部引用</p><p>4、局部引用和局部变量不同</p><h2 id="2、局部引用相关的其他函数"><a href="#2、局部引用相关的其他函数" class="headerlink" title="2、局部引用相关的其他函数"></a>2、局部引用相关的其他函数</h2><p>env-&gt;EnsureLocalCapacity(num) 判断是否有足够的局部引用可以使用，足够则返回0，需大量使用局部引用时，手动删除太过麻烦，可使用以下两个函数来批量管理局部引用</p><p>env-&gt;PushLocalFrame(num)</p><p>env-&gt;PopLocalFrame(nullptr)</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">env<span class="token operator">-></span><span class="token function">PushLocalFrame</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>env<span class="token operator">-></span><span class="token function">EnsureLocalCapacity</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        jstring tempString <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">NewStringUTF</span><span class="token punctuation">(</span><span class="token string">"whitebird"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        env<span class="token operator">-></span><span class="token function">SetObjectArrayElement</span><span class="token punctuation">(</span>_jstringArray<span class="token punctuation">,</span> i<span class="token punctuation">,</span> tempString<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//env->DeleteLocalRef(tempString);</span>        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"env->EnsureLocalCapacity"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>env<span class="token operator">-></span><span class="token function">PopLocalFrame</span><span class="token punctuation">(</span><span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、全局引用"><a href="#3、全局引用" class="headerlink" title="3、全局引用"></a>3、全局引用</h2><p>在jni开发中，需要跨函数使用变量时，直接定义全局变量是没用的，需要使用以下两个方法，来创建和删除全局引用</p><p>env-&gt;NewGlobalRef</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">jobject tempClassLoaderObj <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">CallObjectMethod</span><span class="token punctuation">(</span>MainActivityClazz<span class="token punctuation">,</span> getClassLoaderID<span class="token punctuation">)</span><span class="token punctuation">;</span>ClassLoaderObj <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">NewGlobalRef</span><span class="token punctuation">(</span>tempClassLoaderObj<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>env-&gt;DeleteGlobalRef</p><h2 id="4、弱全局引用"><a href="#4、弱全局引用" class="headerlink" title="4、弱全局引用"></a>4、弱全局引用</h2><p>与全局引用基本相同，区别是弱全局引用有可能会被回收</p><p>env-&gt;NewWeakGlobalRef</p><p>env-&gt;DeleteWeakGlobalRef</p><h1 id="21、子线程中获取Java类"><a href="#21、子线程中获取Java类" class="headerlink" title="21、子线程中获取Java类"></a>21、子线程中获取Java类</h1><ol><li>在子线程中，findClass可以直接获取系统类</li></ol><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">jclass ClassLoaderClazz <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span><span class="token string">"java/lang/ClassLoader"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"myThread ClassLoaderClazz: %p"</span><span class="token punctuation">,</span> ClassLoaderClazz<span class="token punctuation">)</span><span class="token punctuation">;</span>jclass StringClasszz<span class="token operator">=</span>env<span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span><span class="token string">"java/lang/String"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"myThread StringClasszz: %p"</span><span class="token punctuation">,</span> StringClasszz<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305090219890.png"></p><p>可以看到系统类是有值的，但是自己的类就没有值</p><ol start="2"><li>在主线程中获取类，使用全局引用来传递到子线程中</li></ol><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">  jclass MainActivityClazz <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span><span class="token string">"com/example/javaandso/MainActivity"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    globalClass<span class="token operator">=</span> <span class="token generic-function"><span class="token function">static_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span>jclass<span class="token operator">></span></span></span><span class="token punctuation">(</span>env<span class="token operator">-></span><span class="token function">NewGlobalRef</span><span class="token punctuation">(</span>MainActivityClazz<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>子线程中调用  <span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"myThread globalClass: %p"</span><span class="token punctuation">,</span> globalClass<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305090231813.png"></p><p>3、在主线程中获取正确的ClassLoader，在子线程中去加载类</p><p>在Java中，可以先获取类字节码，然后使用getClassLoader()来获取ClassLoader</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Demo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在native层进行转换,获取ClassLoader</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">//MainActivity.class.getClassLoader</span>  jclass MainActivityClazz <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span><span class="token string">"com/example/javaandso/MainActivity"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  jclass classClasszz<span class="token operator">=</span>env<span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span><span class="token string">"java/lang/Class"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  jmethodID getClassLoaderMethoid<span class="token operator">=</span>env<span class="token operator">-></span><span class="token function">GetMethodID</span><span class="token punctuation">(</span>classClasszz<span class="token punctuation">,</span><span class="token string">"getClassLoader"</span><span class="token punctuation">,</span> <span class="token string">"()Ljava/lang/ClassLoader;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  jobject tempClassLoader <span class="token operator">=</span> env<span class="token operator">-></span><span class="token function">CallObjectMethod</span><span class="token punctuation">(</span>MainActivityClazz<span class="token punctuation">,</span>getClassLoaderMethoid<span class="token punctuation">)</span><span class="token punctuation">;</span>  globalClassLoader<span class="token operator">=</span>env<span class="token operator">-></span><span class="token function">NewGlobalRef</span><span class="token punctuation">(</span>tempClassLoader<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在jni的子线程中loadClass</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">//jclass MainActivityClasszz=FindClass("com/example/javaandso/MainActivity")</span>jclass LoadClassClazz<span class="token operator">=</span>env<span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span><span class="token string">"java/lang/ClassLoader"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>jmethodID LoadClassmMethoid<span class="token operator">=</span>env<span class="token operator">-></span><span class="token function">GetMethodID</span><span class="token punctuation">(</span>LoadClassClazz<span class="token punctuation">,</span><span class="token string">"loadClass"</span><span class="token punctuation">,</span> <span class="token string">"(Ljava/lang/String;)Ljava/lang/Class;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>jclass MainActivityClasszz<span class="token operator">=</span> <span class="token generic-function"><span class="token function">static_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span>jclass<span class="token operator">></span></span></span><span class="token punctuation">(</span>env<span class="token operator">-></span><span class="token function">CallObjectMethod</span><span class="token punctuation">(</span>globalClassLoader<span class="token punctuation">,</span>                                                                              LoadClassmMethoid<span class="token punctuation">,</span>                                                                              env<span class="token operator">-></span><span class="token function">NewStringUTF</span><span class="token punctuation">(</span>                                                                                      <span class="token string">"com.example.javaandso.MainActivity"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们要得到的MainActivityClasszz其实在主线程已经获取过一次了，所以第三种方法其实有点麻烦，不如第二种使用全局引用</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305091159773.png"></p><h1 id="22、init与initarray"><a href="#22、init与initarray" class="headerlink" title="22、init与initarray"></a>22、init与initarray</h1><p>1、so在执行JNI_Onload之前，还会执行两个构造函数init、initarray</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305091301176.png"></p><p>2、so加固、so中字符串加密等等，一般会把相关代码放到这里，所以JNI_Onload的时候一般so都是已经被解密了</p><p>3、init的使用</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">extern</span> <span class="token string">"C"</span> <span class="token keyword">void</span> <span class="token function">_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">//函数名必须为_init</span>    <span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"_init "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4、initarray的使用</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305091308932.png"></p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token function">__attribute__</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>constructor<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">initArrayTest3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"initArrayTest3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">__attribute__</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>constructor<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">initArrayTest1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"initArrayTest1 "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">__attribute__</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>constructor<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">initArrayTest2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"initArrayTest2 "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果不加任何修饰，会安装我们代码写的顺序执行</p><p>constructor后面的值，较小的先执行，最好从100以后开始用</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token function">__attribute__</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">initArrayTest3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"initArrayTest3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">__attribute__</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token number">303</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">initArrayTest1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"initArrayTest1 "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">__attribute__</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token number">202</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">initArrayTest2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"initArrayTest2 "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305091311994.png"></p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token function">__attribute__</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">initArrayTest3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"initArrayTest3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">__attribute__</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>constructor<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">initArrayTest5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"initArrayTest5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">__attribute__</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token number">303</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">initArrayTest1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"initArrayTest1 "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">__attribute__</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>constructor<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">initArrayTest2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"initArrayTest2 "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">__attribute__</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token number">202</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">initArrayTest4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"initArrayTest4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对于这种有值和没值都有的，先执行有值的顺序，然后再按没值的顺序</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305091315020.png"></p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token function">__attribute__</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>constructor<span class="token punctuation">,</span> <span class="token function">visibility</span><span class="token punctuation">(</span><span class="token string">"hidden"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">initArrayTest6</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">LOGD</span><span class="token punctuation">(</span><span class="token string">"initArrayTest6"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>反编译so时会抹去initArrayTest6符号</p><h2 id="反编译so"><a href="#反编译so" class="headerlink" title="反编译so"></a><strong>反编译so</strong></h2><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305091318139.png"></p><p>_init在ida反编译后为.init_proc</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305091319690.png"></p><p>通过段表，可以看到init_array段，跟过去看看</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305091320637.png"></p><p>存放顺序已经排好序了，而且initArrayTest6符号已经没了，变成了sub_1F824</p>]]></content>
      
      
      <categories>
          
          <category> Android开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android开发学习笔记(1)——初识安卓</title>
      <link href="//post/the_first_code1.html"/>
      <url>//post/the_first_code1.html</url>
      
        <content type="html"><![CDATA[<h1 id="第一章——初识安卓"><a href="#第一章——初识安卓" class="headerlink" title="第一章——初识安卓"></a>第一章——初识安卓</h1><h2 id="1、了解全貌"><a href="#1、了解全貌" class="headerlink" title="1、了解全貌"></a>1、了解全貌</h2><h3 id="1-1、Android系统架构"><a href="#1-1、Android系统架构" class="headerlink" title="1.1、Android系统架构"></a>1.1、Android系统架构</h3><p>Android大致可以分为四层架构：Linux内核层、系统运行库层、应用框架层和应用层。</p><h4 id="a、Linux内核层"><a href="#a、Linux内核层" class="headerlink" title="a、Linux内核层"></a>a、Linux内核层</h4><p>Android系统是基于Linux内核开发的，这层为Android设备的各种硬件提供了底层的驱动，如显示驱动、音频驱动、照相机驱动、蓝牙驱动、WIFI驱动、电源驱动等。也就是通过底层代码去调用硬件设备。</p><h4 id="b、系统运行库层"><a href="#b、系统运行库层" class="headerlink" title="b、系统运行库层"></a>b、系统运行库层</h4><p>这一层主要是C&#x2F;C++实现，为安卓系统提供一些特性支持。比如SQLite库提供了对数据库的支持，OpenGl｜ES库提供了对3D绘图的支持等。另外这一层还有一个安卓运行时库，是对上层Java的支持，上层Java最终会调用到该层的C&#x2F;C++实现函数，其实也就是同一个功能函数的更底层版本。</p><h4 id="c、应用框架层"><a href="#c、应用框架层" class="headerlink" title="c、应用框架层"></a>c、应用框架层</h4><p>提供一些开发时会用到的Java封装的Api</p><h4 id="d、应用层"><a href="#d、应用层" class="headerlink" title="d、应用层"></a>d、应用层</h4><p>我们安装的软件、手机自带的软件等都在这一层上。</p><p>下面是一张结构图，便于我们对安卓系统架构更加了解</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202303301251389.png"></p><h3 id="1-2、Android已经发布的版本"><a href="#1-2、Android已经发布的版本" class="headerlink" title="1.2、Android已经发布的版本"></a>1.2、Android已经发布的版本</h3><p>Android1.0:2008年9月</p><p>Android2.1、2.2、2.3:占据大量市场</p><p>Android3：市场份额少，有点失败</p><p>Android4：可以在平板和手机上使用</p><p>Android5:使用ART运行环境代替了Dalvik虚拟机，优化应用运行速度</p><p>Android6:加入运行时权限功能</p><p>Android7:加入多窗口模式功能</p><p>目前已经到Android14了</p><h3 id="1-3、Android应用开发特色"><a href="#1-3、Android应用开发特色" class="headerlink" title="1.3、Android应用开发特色"></a>1.3、Android应用开发特色</h3><p>我们看看Android系统给我们提供了哪些东西可供我们开发出优秀的应用程序。</p><h4 id="a、四大组件"><a href="#a、四大组件" class="headerlink" title="a、四大组件"></a>a、四大组件</h4><p>Android系统的四大组件分别是：</p><p>活动(Activity)：在应用中能看到的东西都是放在活动中。</p><p>服务(Service)：无法看到，它会一直在后台运行，即使用户退出了应用，服务可以继续运行。</p><p>广播接收器(Broadcast Receiver)：允许应用接受来自各处的广播信息，比如电话、短信等。</p><p>内容提供器(Content Provider)：为应用程序之间共享数据提供了可能，比如读取系统电话簿中的联系人。</p><h4 id="b、系统控件"><a href="#b、系统控件" class="headerlink" title="b、系统控件"></a>b、系统控件</h4><p>Android系统为开发者提供了丰富的系统控件，有助于我们编写出漂亮的界面，控件也可以自己定制</p><h4 id="c、SQLite数据库"><a href="#c、SQLite数据库" class="headerlink" title="c、SQLite数据库"></a>c、SQLite数据库</h4><p>Android系统自带轻量级、运算速度快的嵌入式关系型数据库，支持标准的SQL语法，还可以通过封装好的API进行操作</p><h4 id="d、多媒体"><a href="#d、多媒体" class="headerlink" title="d、多媒体"></a>d、多媒体</h4><p>Android系统提供了丰富的多媒体服务，比如音乐、视频、录像、拍照、闹铃等。</p><h4 id="e、地理位置定位"><a href="#e、地理位置定位" class="headerlink" title="e、地理位置定位"></a>e、地理位置定位</h4><p>现在的Android都内置GPS，可以定位自己的位置。</p><h2 id="2、Android-Studio的安装"><a href="#2、Android-Studio的安装" class="headerlink" title="2、Android Studio的安装"></a>2、Android Studio的安装</h2><p>这个网上很多，随便找个教程跟着装就行了。</p><h2 id="3、创建第一个Android项目"><a href="#3、创建第一个Android项目" class="headerlink" title="3、创建第一个Android项目"></a>3、创建第一个Android项目</h2><p>一些配置可以看图</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202303301337607.png"></p><p>项目的模版可以选择empty activity</p><p>可以配置一下模拟器环境，用于测试我们写好的App，后期也可以选择用真机测试，我就直接用真机了</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202303301359762.png"></p><p>由于我们选的empty activity模版帮我们已经生成好了hello world，所以就不用我们自己敲了</p><h2 id="4、分析第一个Android程序"><a href="#4、分析第一个Android程序" class="headerlink" title="4、分析第一个Android程序"></a>4、分析第一个Android程序</h2><h4 id="Project目录分析"><a href="#Project目录分析" class="headerlink" title="Project目录分析"></a>Project目录分析</h4><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202303301402475.png"></p><p>这个是默认的Android项目结构，但是并不是真正的目录结构，而是被Android Studio转换过的，这种项目简洁明了，有助于开发</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202303301429011.png"></p><p>真正的项目目录结构，通过点击左上角的Android图标进行切换，现在我们逐一讲解每个目录：</p><p>1、.gradle和.idea：这两个目录下放置的都是Android Studio自动生成的一些文件，我们无须关心，也不要去手动编辑。</p><p>2、app：项目中的代码、资源等内容几乎都是放置在这个目录下的，开发工作也基本都是在这个目录下进行的</p><p>3、build：这个目录你也不需要过多关心，它主要包含了一些在编译时自动生成的文件。</p><p>4、gradle：这个目录下包含了gradle wrapper的配置文件，使用gradle wrapper的方式不需要提前将gradle下载好，而是会自动根据本地的缓存情况决定是否需要联网下载gradle。Android Studio默认没有启用gradlewrapper的方式，如果需要打开，可以点击Android Studio导航栏→File→Settings→Build, Execution,Deployment→Gradle，进行配置更改。<br>5、.gitignore这个文件是用来将指定的目录或文件排除在版本控制之外的</p><p>6、build.gradle：这是项目全局的gradle构建脚本，通常这个文件中的内容是不需要修改的</p><p>7、gradle.properties：这个文件是全局的gradle配置文件，在这里配置的属性将会影响到项目中所有的gradle编译脚本</p><p>8、gradlew和gradlew.bat：这两个文件是用来在命令行界面中执行gradle命令的，其中gradlew是在Linux或Mac系统中使用的，gradlew.bat是在Windows系统中使用的</p><p>9、HelloWorld.iml：iml文件是所有IntelliJ IDEA项目都会自动生成的一个文件（Android Studio是基于IntelliJ IDEA开发的），用于标识这是一个IntelliJ IDEA项目，我们不需要修改这个文件中的任何内容</p><p>10、local.properties：这个文件用于指定本机中的Android SDK路径，通常内容都是自动生成的，我们并不需要修改。除非你本机中的Android SDK位置发生了变化，那么就将这个文件中的路径改成新的位置即可</p><p>11、settings.gradle：这个文件用于指定项目中所有引入的模块。由于HelloWorld项目中就只有一个app模块，因此该文件中也就只引入了app这一个模块。通常情况下模块的引入都是自动完成的，需要我们手动去修改这个文件的场景可能比较少</p><h4 id="app目录分析"><a href="#app目录分析" class="headerlink" title="app目录分析"></a>app目录分析</h4><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202303301429011.png"></p><p>1、build：这个目录和外层的build目录类似，主要也是包含了一些在编译时自动生成的文件，不过它里面的内容会更多更杂，我们不需要过多关心</p><p>2、如果你的项目中使用到了第三方jar包，就需要把这些jar包都放在libs目录下，放在这个目录下的jar包都会被自动添加到构建路径里去</p><p>3、androidTest：此处是用来编写Android Test测试用例的，可以对项目进行一些自动化测试</p><p>4、毫无疑问，java目录是放置我们所有Java代码的地方，展开该目录，你将看到我们刚才创建的the_first_demo文件就在里面</p><p>5、res：这个目录下的内容就有点多了。简单点说，就是你在项目中使用到的所有图片、布局、字符串等资源都要存放在这个目录下。当然这个目录下还有很多子目录，图片放在drawable目录下，布局放在layout目录下，字符串放在values目录下，所以你不用担心会把整个res目录弄得乱糟糟的</p><p>6、AndroidManifest.xml：这是你整个Android项目的配置文件，你在程序中定义的所有四大组件都需要在这个文件里注册，另外还可以在这个文件中给应用程序添加权限声明</p><p>7、test：此处是用来编写Unit Test测试用例的，是对项目进行自动化测试的另一种方式</p><p>8、gitignore：这个文件用于将app模块内的指定的目录或文件排除在版本控制之外，作用和外层的.gitignore文件类似</p><p>9、build.gradle：这是app模块的gradle构建脚本，这个文件中会指定很多项目构建相关的配置</p><p>10、proguard-rules.pro：这个文件用于指定项目代码的混淆规则，当代码开发完成后打成安装包文件，如果不希望代码被别人破解，通常会将代码进行混淆，从而让破解者难以阅读</p><h4 id="分析helloword程序的运行流程"><a href="#分析helloword程序的运行流程" class="headerlink" title="分析helloword程序的运行流程"></a>分析helloword程序的运行流程</h4><p>首先打开AndroidManifest.xml</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span>    <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.MainActivity<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.action.MAIN<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.category.LAUNCHER<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activity</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这段代码表示对.MainActivity这个活动进行注册，没有在AndroidManifest.xml注册的活动是不能使用的。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.action.MAIN<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.category.LAUNCHER<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>表示MainActivity是这个项目的主活动，在手机上点击图标启动，首先启动的就是这个活动。</p><p>那么MainActivity具体又有什么用呢？之前说过活动是可以看见的，我们测试时的那张图就是MainActivity的效果，现在一起看一下MainActivity的代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>the_first_demo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>MainActivity是继承AppCompatActivity，这是一种向下兼容的Activity，可以将Activity在各个系统版本中增加的特性和功能最低兼容到Android2.1系统。Activity是Android系统提供的一个活动基类，我们项目中所有的活动都必须继承它或者它的子类才能拥有活动的特性（AppCompatActivity是Activity的子类），onCreate是一个活动被创建时必定要执行的方法。或许现在有个疑问，为什么没有helloword字符串的打印，我们的界面上就有了helloword，这是因为安卓讲究的逻辑和视图分离，所以基本上不在Activity中编写界面的，更常见的做法是在布局文件中编写界面，然后在Activity中引入。我们注意到第二行有个setContentView，这就是引入布局R.layout.activity_main，那么helloword大概率就是在这个布局文件中。</p><h4 id="布局文件"><a href="#布局文件" class="headerlink" title="布局文件"></a>布局文件</h4><p>布局文件一般存放在res&#x2F;layout中</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.constraintlayout.widget.ConstraintLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">tools:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.MainActivity<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Hello World!<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintBottom_toBottomOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintEnd_toEndOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintStart_toStartOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintTop_toTopOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>androidx.constraintlayout.widget.ConstraintLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>TextView是一个Android系统提供的控件，用于在布局中显示文字，android:text&#x3D;”Hello World!”实现了在app中显示helloword</p><h4 id="项目中包含的资源"><a href="#项目中包含的资源" class="headerlink" title="项目中包含的资源"></a>项目中包含的资源</h4><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202303301907966.png"></p><p>drawable开头的文件夹都是用来放图片的</p><p>mimmap开头的文件夹都是用来放应用图标的</p><p>values开头的文件夹都是用来放字符串、样式、颜色等</p><p>layout文件夹用来放布局文件的</p><p>可能有人会困惑一个App一般只有一个图标，为什么会有这么多个文件夹？因为这是为了让程序能够更好地兼容各种设备。</p><p>现在来看一下res&#x2F;values&#x2F;strings.xml</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app_name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>the_first_demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>可以看到，这里定义了一个应用程序名的字符串，可以通过以下两种方式进行引用。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">1、在代码中通过R.string.app_name2、在xml中通过@string/app_name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>其中的string也可以换成图片资源drawable、应用图标mipmap、布局文件layout等</p><p><strong>举例</strong></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>application</span>        <span class="token attr-name"><span class="token namespace">android:</span>allowBackup</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>dataExtractionRules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@xml/data_extraction_rules<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>fullBackupContent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@xml/backup_rules<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@mipmap/ic_launcher<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@string/app_name<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>supportsRtl</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@style/Theme.The_first_demo<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">tools:</span>targetApi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>31<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span>            <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.MainActivity<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.action.MAIN<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.category.LAUNCHER<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activity</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>application</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到应用程序的图标是通过android:icon设置，应用的名称是根据android:label指定，而他们使用的语法就是我们上面所说的第二种，现在如果想要实现修改App名称或者图标就可以通过修改 AndroidManifest.xml的相关属性。</p><h4 id="详解build-gradle文件"><a href="#详解build-gradle文件" class="headerlink" title="详解build.gradle文件"></a>详解build.gradle文件</h4><p>Gradle是一个非常先进的项目构建工具，Android Studio是采用Gradle来构建项目的。在我们的测试项目中有两个build.gradle，一个是在最外层目录下，一个是在app目录下。</p><h5 id="最外层目录下的build-gradle"><a href="#最外层目录下的build-gradle" class="headerlink" title="最外层目录下的build.gradle"></a>最外层目录下的build.gradle</h5><pre class="line-numbers language-none"><code class="language-none">    &#x2F;&#x2F; Top-level build file where you can add configuration options common to all sub-projects&#x2F;modules.plugins &#123;    id &#39;com.android.application&#39; version &#39;7.4.2&#39; apply false    id &#39;com.android.library&#39; version &#39;7.4.2&#39; apply false&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>plugins代码块用于声明并配置要应用的Gradle插件。在这个例子中，它声明了两个插件：com.android.application和com.android.library，它们的版本号都是7.4.2，并且apply false是指这些插件不会自动应用到项目中。如果需要使用这些插件，可以在项目的其他构建脚本中显式地应用它们。通常情况下我们是不用修改这个文件的</p><h5 id="app目录下的build-gradle"><a href="#app目录下的build-gradle" class="headerlink" title="app目录下的build.gradle"></a>app目录下的build.gradle</h5><pre class="line-numbers language-none"><code class="language-none">plugins &#123;    id &#39;com.android.application&#39;&#x2F;&#x2F;声明了使用的Gradle插件&#125;&#x2F;&#x2F;一般有两种值可选：com.android.application表示这是一个应用程序模块，com.android.library 表示这是一个库模块。应用程序模块和库模块的最大区别在于，一个是可以直接运行的，一个只能作为代码库依附于别的应用程序模块来运行android &#123;    namespace &#39;com.example.the_first_demo&#39;&#x2F;&#x2F;指定应用程序的命名空间，也就是应用程序的包名    compileSdk 33&#x2F;&#x2F;指定编译使用的API级别，sdk版本    defaultConfig &#123;        applicationId &quot;com.example.the_first_demo&quot; &#x2F;&#x2F;应用程序ID        minSdk 16 &#x2F;&#x2F;最低支持的Android版本        targetSdk 33&#x2F;&#x2F;指定的值表示你在该目标版本上已经做过了充分的测试，会启用该版本的新特性(目标版本)        versionCode 1 &#x2F;&#x2F;版本代码        versionName &quot;1.0&quot;&#x2F;&#x2F;版本名称        testInstrumentationRunner &quot;androidx.test.runner.AndroidJUnitRunner&quot;    &#125;    buildTypes &#123;        release &#123;            minifyEnabled false &#x2F;&#x2F;指定是否对项目的代码进行混淆，true 表示混淆，false 表示不混淆            proguardFiles getDefaultProguardFile(&#39;proguard-android-optimize.txt&#39;), &#39;proguard-rules.pro&#39;            &#x2F;&#x2F; proguardFiles 用于指定混淆时使用的规则文件，这里指定了两个文件            &#x2F;&#x2F; 第一个proguard-android-optimize.txt 是在Android SDK目录下的，里面是所有项目通用的混淆规则；            &#x2F;&#x2F; 第二个proguard-rules.pro 是在当前项目的根目录下的，里面可以编写当前项目特有的混淆规则        &#125;    &#125;    compileOptions &#123;        sourceCompatibility JavaVersion.VERSION_1_8 &#x2F;&#x2F;指定编译使用的Java版本        targetCompatibility JavaVersion.VERSION_1_8    &#125;&#125;dependencies &#123;&#x2F;&#x2F;声明了应用所依赖的库&#x2F;&#x2F;指定应用程序运行时需要的库    implementation &#39;androidx.appcompat:appcompat:1.4.1&#39;&#x2F;&#x2F;是支持应用程序兼容旧版本Android的库    implementation &#39;com.google.android.material:material:1.5.0&#39;&#x2F;&#x2F;是Material Design组件库    implementation &#39;androidx.constraintlayout:constraintlayout:2.1.3&#39;&#x2F;&#x2F;是一个用于布局的库    &#x2F;&#x2F;指定单元测试时需要的库    testImplementation &#39;junit:junit:4.13.2&#39;&#x2F;&#x2F;JUnit单元测试库    &#x2F;&#x2F;指定Android测试时需要的库    androidTestImplementation &#39;androidx.test.ext:junit:1.1.3&#39;&#x2F;&#x2F;JUnit扩展库    androidTestImplementation &#39;androidx.test.espresso:espresso-core:3.4.0&#39;&#x2F;&#x2F;Android UI测试的Espresso库&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5、日志工具的使用"><a href="#5、日志工具的使用" class="headerlink" title="5、日志工具的使用"></a>5、日志工具的使用</h3><p>Android中的日志工具类是Log(android.util.Log),可以方便我们打印一些信息进行调试。这个类一共提供了5个方法供我们打印日志：</p><h3 id="a、Log-v"><a href="#a、Log-v" class="headerlink" title="a、Log.v()"></a>a、Log.v()</h3><p>用于打印那些最为琐碎的、意义最小的日志信息。对应级别verbose，是Android日志里面级别最低的一种</p><h3 id="b、Log-d"><a href="#b、Log-d" class="headerlink" title="b、Log.d()"></a>b、Log.d()</h3><p>用于打印一些调试信息，这些信息对你调试程序和分析问题应该是有帮助的。对应级别debug，比verbose高一级</p><h3 id="c、Log-i"><a href="#c、Log-i" class="headerlink" title="c、Log.i()"></a>c、Log.i()</h3><p>用于打印一些比较重要的数据，这些数据应该是你非常想看到的、可以帮你分析用户行为数据。对应级别info，比debug高一级</p><h3 id="d、Log-w"><a href="#d、Log-w" class="headerlink" title="d、Log.w()"></a>d、Log.w()</h3><p>用于打印一些警告信息，提示程序在这个地方可能会有潜在的风险，最好去修复一下这些出现警告的地方。对应级别warn，比info高一级</p><h3 id="e、Log-e"><a href="#e、Log-e" class="headerlink" title="e、Log.e()"></a>e、Log.e()</h3><p>用于打印程序中的错误信息，比如程序进入到了catch语句当中。当有错误信息打印出来的时候，一般都代表你的程序出现严重问题了，必须尽快修复。对应级别error，比warn高一级</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202303310032184.png"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>the_first_demo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Log</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"HelloWordActivity"</span><span class="token punctuation">,</span><span class="token string">"onCreate execute"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> Log.d有两个参数，第一个参数是tag，可以对打印的信息进行过滤，第二个参数是msg，是我们想要打印的值</p><p>打印的内容包含时间、应用程序的进程号、tag、包名、打印的信息。</p>]]></content>
      
      
      <categories>
          
          <category> Android开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android开发学习笔记(2)——探究活动</title>
      <link href="//post/the_first_code2.html"/>
      <url>//post/the_first_code2.html</url>
      
        <content type="html"><![CDATA[<p> 第二章——探究活动</p><h2 id="1、活动是什么"><a href="#1、活动是什么" class="headerlink" title="1、活动是什么"></a>1、活动是什么</h2><p>活动(Activity)是最容易吸引用户的地方，它是一种可以包含用户界面的组件，主要用于和用户进行交互，一个应用程序中可以包含0个或者多个活动，但是不包含任何活动的应用程序很少见。</p><h2 id="2、活动的基本用法"><a href="#2、活动的基本用法" class="headerlink" title="2、活动的基本用法"></a>2、活动的基本用法</h2><h3 id="2-1、手动创建活动"><a href="#2-1、手动创建活动" class="headerlink" title="2.1、手动创建活动"></a>2.1、手动创建活动</h3><p>上一章是系统帮我们创建的activity，这章我们先自己创建一个activity。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202303311402888.png"></p><p>首先我们选择一个No Activity，相关配置如下</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202303311403094.png"></p><p>此时可以看到，虽然目录和我们上一章的项目差不多，但是app&#x2F;src&#x2F;main&#x2F;java&#x2F;com.example.activitytest目录是空的，现在右键com.example.activitytest创建一个activity，New-&gt;Activity-&gt;Empty Activity</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202303311412988.png"></p><p>这里两个都不用勾选，勾选上表示自动为FirstActivity创建一个对应的布局文件，勾选Launcher Activity表示会自动将FirstActivity设置为当前项目的主活动。目前我们不需要设置，后面我们会手动设置。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>activitytest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FirstActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>帮我们写好了模版，onCreate比较简单，就是调用了父类的onCreate。</p><h3 id="2-2、创建和加载布局"><a href="#2-2、创建和加载布局" class="headerlink" title="2.2、创建和加载布局"></a>2.2、创建和加载布局</h3><p>Android程序设计讲究的是逻辑和视图分离，每个活动最好都能对应一个布局，而布局就是用来显示界面内容的，因此我们现在手动创建一个布局文件。</p><p>首先创建一个layout目录</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202303311424603.png"></p><p>创建布局资源文件</p><p>![image-20230331142740515](&#x2F;Users&#x2F;whitebird&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230331142740515.png)</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202303311430903.png"></p><p>Design是当前的可视化布局编辑器，在这里可以预览当前的布局，也可以通过拖放的方式编辑布局。而Code里面存放的是XML方式来编辑布局。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.constraintlayout.widget.ConstraintLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        android:layout_width="match_parent"        android:layout_height="wrap_content"        android:text="Button 1"        /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>androidx.constraintlayout.widget.ConstraintLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>android:id定义了一个唯一标识符，@+id&#x2F;id_name 是用来定义一个id。</p><p>android:layout_width指定当前button的宽度，match_parent是让它和父元素一样宽。</p><p>android:layout_height指定当前button的高度，wrap_content表示button高度只要能刚好包含里面的内容就行。</p><p>android:text指定button中显示的文字内容。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202303311445158.png"></p><p>接下来我们要做的就是在活动中加载这个布局。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>activitytest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FirstActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>first_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>setContentView方法用来给当前活动加载一个布局，而它的参数是一个布局文件的id。</p><h3 id="2-3、在AndroidManifest-xml中注册"><a href="#2-3、在AndroidManifest-xml中注册" class="headerlink" title="2.3、在AndroidManifest.xml中注册"></a>2.3、在AndroidManifest.xml中注册</h3><p>所有的活动都要在AndroidManifest.xml中进行注册才能生效，而实际上FirstActivity已经在AndroidManifest.xml中注册过了，我们打开AndroidManifest.xml看看</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>application</span>        <span class="token attr-name"><span class="token namespace">android:</span>allowBackup</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>dataExtractionRules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@xml/data_extraction_rules<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>fullBackupContent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@xml/backup_rules<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@mipmap/ic_launcher<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@string/app_name<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>supportsRtl</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@style/Theme.ActivityTest<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">tools:</span>targetApi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>31<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span>            <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.FirstActivity<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>application</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到活动的注册声明要放在application里面，这里通过<activity>标签来对活动进行注册的，这个注册环节是Android Studio自动帮我们完成的。</p><p>android:name指定具体注册哪一个活动，，.FirstActivity是com.example.activitytest.FirstActivity的缩写。</p><p>可是目前程序还是不能跑起来的，因为我们还没有指定主活动，也就是说程序运行起来时，不知道首先启动哪个活动。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>application</span>        <span class="token attr-name"><span class="token namespace">android:</span>allowBackup</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>dataExtractionRules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@xml/data_extraction_rules<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>fullBackupContent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@xml/backup_rules<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@mipmap/ic_launcher<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@string/app_name<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>supportsRtl</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@style/Theme.ActivityTest<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">tools:</span>targetApi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>31<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span>            <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.FirstActivity<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>             <span class="token attr-name"><span class="token namespace">android:</span>label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>This is my FirstActivity<span class="token punctuation">"</span></span>       <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.action.MAIN<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.category.LAUNCHER<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activity</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>application</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在activity标签中添加这两行就行了</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.action.MAIN<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.category.LAUNCHER<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>启动看看效果</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202303311505445.png"></p><p>android:label显示在左上角，中间就是layout布局文件的效果</p><h3 id="2-4、在活动中使用Toast"><a href="#2-4、在活动中使用Toast" class="headerlink" title="2.4、在活动中使用Toast"></a>2.4、在活动中使用Toast</h3><p>Toast是Android系统中提供的一种非常好的提醒方式，在程序中可以使用它将一些短小的信息通知给用户，这些信息会在一段时间后自动消失，并且不占用任何屏幕空间。</p><p>![image-20230331222819489](&#x2F;Users&#x2F;whitebird&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230331222819489.png)</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>activitytest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FirstActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>first_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button1<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button1<span class="token punctuation">)</span><span class="token punctuation">;</span>        button1<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token class-name">FirstActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"You Click The Button!"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们首先通过findViewById获得按钮的实例，findViewById返回值是一个View对象，需要我们向下转型为Button对象。在得到实例后，通过调用setOnClickListener为按钮注册一个监听器，点击按钮时会执行监听器中的onClick方法，因此Toast的弹出需要在onClick方法中编写。</p><h3 id="2-5、在活动中使用Menu"><a href="#2-5、在活动中使用Menu" class="headerlink" title="2.5、在活动中使用Menu"></a>2.5、在活动中使用Menu</h3><p>由于手机的屏幕空间十分有限，因此要充分利用屏幕空间在手机界面设计中就显得非常重要了，可能有时候大量的菜单就占了屏幕1&#x2F;3的空间，不过安卓给我们提供了一种方式，不仅可以让菜单都得到展示的同时，还不用占用任何屏幕空间。</p><p>首先在res目录下新建一个menu文件夹</p><p>![image-20230331230028251](&#x2F;Users&#x2F;whitebird&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230331230028251.png)</p><p>接着在这个文件夹下新建一个名叫main的菜单文件</p><p>![image-20230331230111689](&#x2F;Users&#x2F;whitebird&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230331230111689.png)</p><p>接下来我们需要在main.xml中添加以下代码</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>menu</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span>    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/add_item<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Add<span class="token punctuation">"</span></span>    <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span>    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/remove_item<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Remove<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>menu</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里我们创建了两个菜单项，其中<item>标签就是用来创建具体的某一个菜单项，然后通过android:id给这个菜单项指定一个唯一的标识符，通过android:title给这个菜单项指定一个名称。</p><p>接下来回到FirstActivity中来重写onCreateOptionsMenu()方法，快捷键Ctrl+O</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span>   <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onCreateOptionsMenu</span><span class="token punctuation">(</span><span class="token class-name">Menu</span> menu<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token function">getMenuInflater</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>menu<span class="token punctuation">.</span>main<span class="token punctuation">,</span>menu<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过getMenuInflater方法能够得到MenuInflater对象，再调用它的inflate方法就可以给当前活动创建菜单了。</p><p>inflate有两个参数，第一个参数用于指定我们通过哪一个资源文件来创建菜单，这个传入R.menu.main，第二个参数用于指定我们的菜单项将添加到哪一个Menu对象中，这里直接用onCreateOptionsMenu传入的menu，然后返回true，表示允许创建的菜单显示出来，如果返回了false，创建的菜单将无法显示。</p><p>当然，仅仅让菜单显示出来肯定还不够，我们需要让菜单真正能用才行，因此还要再定义菜单响应事件，在FirstActivity中重写onOptionsItemSelected方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>activitytest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">NonNull</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">Menu</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">MenuItem</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FirstActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onCreateOptionsMenu</span><span class="token punctuation">(</span><span class="token class-name">Menu</span> menu<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">getMenuInflater</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>menu<span class="token punctuation">.</span>main<span class="token punctuation">,</span>menu<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onOptionsItemSelected</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">MenuItem</span> item<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getItemId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>add_item<span class="token operator">:</span>                <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"You click Add"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>remove_item<span class="token operator">:</span>                <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"You click Remove"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>first_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button1<span class="token operator">=</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button1<span class="token punctuation">)</span><span class="token punctuation">;</span>        button1<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token class-name">FirstActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"You Click The Button!"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>![A](&#x2F;Users&#x2F;whitebird&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230331232530636.png)</p><p>点击测试</p><p>![image-20230331232551878](&#x2F;Users&#x2F;whitebird&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230331232551878.png)</p><p>![image-20230331232605686](&#x2F;Users&#x2F;whitebird&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230331232605686.png)</p><h3 id="2-6、销毁一个活动"><a href="#2-6、销毁一个活动" class="headerlink" title="2.6、销毁一个活动"></a>2.6、销毁一个活动</h3><p>方法finish()可以实现用代码结束一个活动</p><h2 id="3、使用Intent在活动之间穿梭"><a href="#3、使用Intent在活动之间穿梭" class="headerlink" title="3、使用Intent在活动之间穿梭"></a>3、使用Intent在活动之间穿梭</h2><p>只有一个活动的应用太简单了，我们的追求应该更高点，不管我们创建多少个活动，做法都是一样的，但是有个问题就是，我们在启动器中点击应用图标只会进入到应用的主活动，怎么才能从主活动跳转到其他的活动呢？</p><h3 id="3-1、使用显示Intent"><a href="#3-1、使用显示Intent" class="headerlink" title="3.1、使用显示Intent"></a>3.1、使用显示Intent</h3><p>首先按照之前的方法再创建一个activity，具体的参数配置看图，勾选上自动生成布局文件</p><p>![image-20230401000535865](&#x2F;Users&#x2F;whitebird&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230401000535865.png)</p><p>安装之前的方法，我们添加一个button2</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.constraintlayout.widget.ConstraintLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">tools:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.SecondActivity<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button2<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Button 2<span class="token punctuation">"</span></span>        <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>androidx.constraintlayout.widget.ConstraintLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>SecondActivity已经帮我们生成好了一部分代码，当然，要记得任何一个活动创建后都要在AndroidManifest.xml中注册，不过Android Studio已经帮我们自动完成了</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>application</span>        <span class="token attr-name"><span class="token namespace">android:</span>allowBackup</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>dataExtractionRules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@xml/data_extraction_rules<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>fullBackupContent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@xml/backup_rules<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@mipmap/ic_launcher<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@string/app_name<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>supportsRtl</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@style/Theme.ActivityTest<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">tools:</span>targetApi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>31<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span>            <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.SecondActivity<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span>            <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.FirstActivity<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>This is my FirstActivity<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.action.MAIN<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.category.LAUNCHER<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activity</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>application</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由于SecondActivity不是主活动，所以不用 <intent-filter>标签设置启动，现在我们只差一步了：如何启动第二个活动了，这里就需要Intent了。先看看Intent介绍：</p><p><strong>Intent是Android程序中各组件之间进行交互的一种重要方式，它不仅可以指明当前组件想要执行的动作，还可以在不同组件之间传递数据。Intent一般可被用于启动活动，启动服务以及发送广播等场景，现在我们的重点是活动。</strong></p><p>Intent有多个构造函数的重载，其中有一个是Intent(Context packageContext,Class&lt;?&gt;cls)。这个函数接受两个参数，第一个参数是要求提供一个启动活动的上下文，第二个参数Class则是指定想要启动的目标活动，由于Intent只是指明当前组件想要执行的动作，属于意图，所以我们还得使用startActivity方法，这个方法是专门用于启动活动的，它的参数是intent，代码如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>activitytest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">NonNull</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Intent</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">Menu</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">MenuItem</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FirstActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onCreateOptionsMenu</span><span class="token punctuation">(</span><span class="token class-name">Menu</span> menu<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">getMenuInflater</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>menu<span class="token punctuation">.</span>main<span class="token punctuation">,</span>menu<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onOptionsItemSelected</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">MenuItem</span> item<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getItemId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>add_item<span class="token operator">:</span>                <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"You click Add"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>remove_item<span class="token operator">:</span>                <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"You click Remove"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>first_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button1<span class="token operator">=</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button1<span class="token punctuation">)</span><span class="token punctuation">;</span>        button1<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token class-name">FirstActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"You Click The Button!"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Intent</span> intent <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token class-name">FirstActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token class-name">SecondActivity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当我们启动App后，点击Button1 会启动SecondActivity，当我们再按back键后，就会销毁SecondActivity，退回到FirstActivity。由于Intent的意图非常明显，所以我们称之为显式Intent。</p><h3 id="3-2、使用隐式Intent"><a href="#3-2、使用隐式Intent" class="headerlink" title="3.2、使用隐式Intent"></a>3.2、使用隐式Intent</h3><p>隐式Intent并不明确指出我们想要启动哪一个活动，而是指定了一系列更加抽象的action和category，然后由系统去分析这个Intent，并帮我们找出合适的活动去启动。</p><p>什么叫合适的活动？就是能够响应我们这个隐式Intent的活动，目前来说SecondActivity还响应不了什么，我们需要对其进行配置。</p><p>通过在<activity>标签下配置<intent-filter>内容，可以指定当前的活动能够响应的action和category</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span>    <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.SecondActivity<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.activitytest.ACTION_START<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.category.DEFAULT<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activity</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个标签中我们指明了当前的活动可以响应com.example.activitytest.ACTION_START这个action，而<category>标签则包含了一些附加信息，更精确地指明了当前的活动能够响应的Intent中还可能带有的category。只有这两个标签的内容同时能够匹配上Intent中指定的action和category，这个活动才能响应该Intent。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span> <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>first_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token class-name">Button</span> button1<span class="token operator">=</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button1<span class="token punctuation">)</span><span class="token punctuation">;</span>     button1<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token annotation punctuation">@Override</span>         <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>             <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token class-name">FirstActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"You Click The Button!"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token class-name">Intent</span> intent <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token string">"com.example.activitytest.ACTION_START"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们使用了Intent的另外一个构造函数，直接传入了一个action的字符串，表明我们想要启动能够响应com.example.activitytest.ACTION_START的action所属的活动。这里我们都没有写category不是违背了前面所说的action和category要和Intent的一致么，这是因为android.intent.category.DEFAULT是一种默认的category，在调用startActivity这个方法时，会自动加入这个category到Intent中。然后重启应用，当我们点击Button 1之后就会跳到SecondActivity</p><p>每个Intent只能指定一个action，但是可以指定多个category，现在我们增加一个category。</p><pre class="line-numbers language-none"><code class="language-none">public void onClick(View view) &#123;                Toast.makeText(FirstActivity.this, &quot;You Click The Button!&quot;, Toast.LENGTH_SHORT).show();                Intent intent &#x3D;new Intent(&quot;com.example.activitytest.ACTION_START&quot;);                intent.addCategory(&quot;com.example.activitytest.My_Category&quot;);                startActivity(intent);            &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过调用addCategory方法指定了一个自定义的category：com.example.activitytest.My_Category，现在我们重新启动应用程序进行测试。你会发现当我们点击Button 1程序崩溃了，我们可以通过logcat查看错误日志。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304012258833.png"></p><p>No Activity found to handle Intent表示没有活动可以响应我们的Intent，这是因为我们在Intent中新加入了一个category，但是SecondActivity的<intent-filter>中却没有声明可以响应这个category，我们尝试添加一个category的声明。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span>        <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.SecondActivity<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.activitytest.ACTION_START<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.category.DEFAULT<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.activitytest.My_Category<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activity</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后就正常了</p><h3 id="3-3、更多的隐式Intent用法"><a href="#3-3、更多的隐式Intent用法" class="headerlink" title="3.3、更多的隐式Intent用法"></a>3.3、更多的隐式Intent用法</h3><p>使用隐式Intent，我们不仅可以启动自己程序内的活动，还可以启动其他程序的活动，这使Android多个应用程序之间的功能共享成为了可能，下面以从程序中展示一个网页为例：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>first_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">Button</span> button1<span class="token operator">=</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button1<span class="token punctuation">)</span><span class="token punctuation">;</span>       button1<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token annotation punctuation">@Override</span>           <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token class-name">FirstActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"You Click The Button!"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token class-name">Intent</span> intent<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token class-name">Intent</span><span class="token punctuation">.</span><span class="token constant">ACTION_VIEW</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               intent<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">"http://www.baidu.com"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>首先指定了intent的Action是Intent.ACTION_VIEW，这是一个安卓系统内置的动作,该Action表示该Intent将用于打开一个网页，然后通过Uri.parse方法，将一个网址字符串解析成一个Uri对象，再调用Intent的setData方法将Uri对象传递进去，setData用于指定当前Intent在操作的数据。当我们点击Button1后就跳到了浏览器，并成功打开了<a href="http://www.baidu.com./">http://www.baidu.com。</a></p><p>我们可以在<intent-filter>中再配置一个<data>标签，用于更加精确地指定当前活动能够响应什么类型的数据。主要可以配置以下内容：</p><pre class="line-numbers language-none"><code class="language-none">&lt;data    android:scheme&#x3D;&quot;&quot; 用于指定数据的协议部分，如http    android:host&#x3D;&quot;&quot;   用于指定数据的主机名部分，如www.baidu.com    android:port&#x3D;&quot;&quot;   用于指定数据的端口部分，一般紧跟在主机名之后    android:path&#x3D;&quot;&quot;   用于指定主机名和端口之后的部分    android:mimeType&#x3D;&quot;&quot; 用于指定可以处理的数据类型，允许使用通配符的方式    &#x2F;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只有标签中的指定的内容和Intent中携带的Data完全一致时，当前活动才会响应该Intent，不过一般中<data>标签中都不会指定过多的内容，如上面浏览器实例中，其实只需要指定android:scheme&#x3D;””为http，就可以响应所有的http协议的Intent了。</p><h3 id="3-4、向下一个活动传递数据"><a href="#3-4、向下一个活动传递数据" class="headerlink" title="3.4、向下一个活动传递数据"></a>3.4、向下一个活动传递数据</h3><p>我们利用Intent不仅可以启动一个活动，还可以在启动活动的时候传递数据。Intent中提供了putExtra方法，可以把我们想要传递的数据暂存在Intent中，启动了另外一个活动后，只需要把这些数据再从Intent中取出来就可以了。</p><p>首先在FirstActivity中传入数据，通过putExtra方法传入，第一个参数是键，第二个参数是值</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>first_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token class-name">Button</span> button1<span class="token operator">=</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button1<span class="token punctuation">)</span><span class="token punctuation">;</span>     button1<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token annotation punctuation">@Override</span>         <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>             <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token class-name">FirstActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"You Click The Button!"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token class-name">String</span> data<span class="token operator">=</span><span class="token string">"Hello SecondActivity"</span><span class="token punctuation">;</span>             <span class="token class-name">Intent</span> intent<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token class-name">FirstActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token class-name">SecondActivity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"extra_data"</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在SecondActivity中接受数据,通过getIntent获得启动SecondActivity的Intent，然后调用getStringExtra方法获得传递的数据，如果传递的是整型数据，就用getIntExtra，如果传递的是布尔类型数据，则使用getBooleanExtra方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>activitytest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Intent</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Log</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecondActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>second_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Intent</span> intent <span class="token operator">=</span><span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> data<span class="token operator">=</span>intent<span class="token punctuation">.</span><span class="token function">getStringExtra</span><span class="token punctuation">(</span><span class="token string">"extra_data"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"SecondActivity"</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304022345598.png"></p><h3 id="3-5、返回数据给上一个活动"><a href="#3-5、返回数据给上一个活动" class="headerlink" title="3.5、返回数据给上一个活动"></a>3.5、返回数据给上一个活动</h3><p>我们可以传递数据给下一个活动，那么理论上也可以返回数据给上一个活动，但是有一个问题：我们的数据是通过Intent传递的，但是从现在的活动跳转到上一个活动，只要按Back键就行了，也就是不会用到Intent。不过Activity中有一个startActivityForResult方法也是用于启动活动的，但是这个方法期望在活动销毁时能够返回一个结果给上一个活动，这就是我们所需要的。</p><p>FirstActivity的关键代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>first_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Button</span> button1<span class="token operator">=</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button1<span class="token punctuation">)</span><span class="token punctuation">;</span>    button1<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token class-name">FirstActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"You Click The Button!"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Intent</span> intent<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token class-name">FirstActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token class-name">SecondActivity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">startActivityForResult</span><span class="token punctuation">(</span>intent<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过startActivityForResult来启动SecondActivity，请求码只要是一个唯一值就行了，这里传入了1.</p><p>SecondActivity的关键代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecondActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>second_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button2<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button2<span class="token punctuation">)</span><span class="token punctuation">;</span>        button2<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Intent</span> intent<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"data_return"</span><span class="token punctuation">,</span><span class="token string">"Hello FirstActivity"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">setResult</span><span class="token punctuation">(</span><span class="token constant">RESULT_OK</span><span class="token punctuation">,</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里构造了一个Intent，但是它并不是用来启动Activity的，而是仅仅由于传递数据。通过putExtra放入数据，然后调用setResult，用于向上一个活动返回数据。它有两个参数，第一个参数用于向上一个活动返回处理结果，一般只使用RESULT_OK或RESULT_CANCELED，第二个参数是把带有数据的intent传递回去，最后调用finish销毁当前活动。</p><p>当我们调用startActivityForResult方法启动SecondActivity后，SecondActivity被销毁后会调用上一个活动的onActivityResult方法，因此我们需要重写这个方法来得到返回的数据。</p><p>onActivityResult有三个参数，第一个参数是requestCode，是我们在启动活动时传入的请求码，第二个参数是resultCode，是我们在返回数据时传入的处理结果，第三个参数是data，即携带着数据的intent。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onActivityResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> <span class="token keyword">int</span> resultCode<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Intent</span> data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onActivityResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span> resultCode<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">switch</span> <span class="token punctuation">(</span>requestCode<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>             <span class="token keyword">if</span> <span class="token punctuation">(</span>resultCode <span class="token operator">==</span> <span class="token constant">RESULT_OK</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                 <span class="token class-name">String</span> retData <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">getStringExtra</span><span class="token punctuation">(</span><span class="token string">"data_return"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"data_return"</span><span class="token punctuation">,</span> retData<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">&#125;</span>             <span class="token keyword">break</span><span class="token punctuation">;</span>         <span class="token keyword">default</span><span class="token operator">:</span>     <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>![image-20230403140006778](&#x2F;Users&#x2F;whitebird&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230403140006778.png)</p><p>可能有人会问，如果用户不是点击Button2，而是直接通过back键返回怎么办，这个时候需要我们在SecondActivity中重写onBackPressed。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onBackPressed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Intent</span> intent<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"data_return"</span><span class="token punctuation">,</span><span class="token string">"Hello FirstActivity2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setResult</span><span class="token punctuation">(</span><span class="token constant">RESULT_OK</span><span class="token punctuation">,</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304031412837.png"></p><h2 id="4、活动的生命周期"><a href="#4、活动的生命周期" class="headerlink" title="4、活动的生命周期"></a>4、活动的生命周期</h2><p>Andriod中的活动是可以层叠的，我们每启动一个新的活动，就会覆盖在原活动上，然后点击back后就会销毁最上面的活动，下面的一个活动就会重新显示出来。</p><h3 id="4-1、返回栈"><a href="#4-1、返回栈" class="headerlink" title="4.1、返回栈"></a>4.1、返回栈</h3><p>Android使用任务(Task)来管理活动，一个任务就是一组存放在栈里的活动的集合，而这个栈也被称作返回栈。每当我们启动了一个新的活动，它会在返回栈中入栈，并处于栈顶。而当我们按下back键后，或者调用finish方法去销毁一个活动，处于栈顶的活动就会出栈，这时前一个入栈的活动就会重新处于栈顶的位置。系统总是显示处于栈顶的活动给用户。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304041040508.png"></p><h3 id="4-2、活动状态"><a href="#4-2、活动状态" class="headerlink" title="4.2、活动状态"></a>4.2、活动状态</h3><h4 id="1、运行状态"><a href="#1、运行状态" class="headerlink" title="1、运行状态"></a>1、运行状态</h4><p>当一个活动位于返回栈的栈顶时，这时活动就处于运行状态。系统最不愿意回收的就是处于运行状态的活动，因为这会带来非常差的用户体验。</p><h4 id="2、暂停状态"><a href="#2、暂停状态" class="headerlink" title="2、暂停状态"></a>2、暂停状态</h4><p>当一个活动不再处于栈顶位置，但仍然可见时，这时活动就进入了暂停状态。你可能会觉得既然活动已经不在栈顶了，还怎么会可见呢？这是因为并不是每一个活动都会占满整个屏幕的，比如对话框形式的活动只会占用屏幕中间的部分区域，你很快就会在后面看到这种活动。处于暂停状态的活动仍然是完全存活着的，系统也不愿意去回收这种活动（因为它还是可见的，回收可见的东西都会在用户体验方面有不好的影响），只有在内存极低的情况下，系统才会去考虑回收这种活动。</p><h4 id="3、停止状态"><a href="#3、停止状态" class="headerlink" title="3、停止状态"></a>3、停止状态</h4><p>当一个活动不再处于栈顶位置，并且完全不可见的时候，就进入了停止状态。系统仍然会为这种活动保存相应的状态和成员变量，但是这并不是完全可靠的，当其他地方需要内存时，处于停止状态的活动有可能会被系统回收。</p><h4 id="4、销毁状态"><a href="#4、销毁状态" class="headerlink" title="4、销毁状态"></a>4、销毁状态</h4><p>当一个活动从返回栈中移除后就变成了销毁状态。系统会最倾向于回收处于这种状态的活动，从而保证手机的内存充足。</p><h3 id="4-3、活动的生存期"><a href="#4-3、活动的生存期" class="headerlink" title="4.3、活动的生存期"></a>4.3、活动的生存期</h3><p>Activity类中定义了7个回调方法，覆盖了活动生命周期的每一个环节。</p><h4 id="1、onCreate"><a href="#1、onCreate" class="headerlink" title="1、onCreate"></a>1、onCreate</h4><p>这个方法你已经看到过很多次了，每个活动中我们都重写了这个方法，它会在活动第一次被创建的时候调用。你应该在这个方法中完成活动的初始化操作，比如说加载布局、绑定事件等。</p><h4 id="2、onStart"><a href="#2、onStart" class="headerlink" title="2、onStart"></a>2、onStart</h4><p>这个方法在活动由不可见变为可见的时候调用。</p><h4 id="3、onResume"><a href="#3、onResume" class="headerlink" title="3、onResume"></a>3、onResume</h4><p>这个方法在活动准备好和用户进行交互的时候调用。此时的活动一定位于返回栈的栈顶，并且处于运行状态。</p><h4 id="4、onPause"><a href="#4、onPause" class="headerlink" title="4、onPause"></a>4、onPause</h4><p>这个方法在系统准备去启动或者恢复另一个活动的时候调用。我们通常会在这个方法中将一些消耗CPU的资源释放掉，以及保存一些关键数据，但这个方法的执行速度一定要快，不然会影响到新的栈顶活动的使用。</p><h4 id="5、onStop"><a href="#5、onStop" class="headerlink" title="5、onStop"></a>5、onStop</h4><p> 这个方法在活动完全不可见的时候调用。它和<code>onPause()</code> 方法的主要区别在于，如果启动的新活动是一个对话框式的活动，那么<code>onPause()</code> 方法会得到执行，而<code>onStop()</code> 方法并不会执行。                                                                                                                                                         </p><h4 id="6、onDestory"><a href="#6、onDestory" class="headerlink" title="6、onDestory"></a>6、onDestory</h4><p>这个方法在活动被销毁之前调用，之后活动的状态将变为销毁状态。</p><h4 id="7、onRestart"><a href="#7、onRestart" class="headerlink" title="7、onRestart"></a>7、onRestart</h4><p>这个方法在活动由停止状态变为运行状态之前调用，也就是活动被重新启动了。</p><h4 id="可以把活动分为3种生存期："><a href="#可以把活动分为3种生存期：" class="headerlink" title="可以把活动分为3种生存期："></a>可以把活动分为3种生存期：</h4><h5 id="完整生存期："><a href="#完整生存期：" class="headerlink" title="完整生存期："></a>完整生存期：</h5><p>活动在onCreate方法和onDestory方法之间所经历的，就是完整生存期。一般情况下活动会在onCreate方法中完成各种各样初始化操作，而在onDestory方法中完成释放内存的操作。</p><h5 id="可见生存期"><a href="#可见生存期" class="headerlink" title="可见生存期"></a>可见生存期</h5><p>活动在onStart和onStop之间所经历的，就是可见生存期。在可见生存期内，活动对于用户来说总是可见的，即使有可能无法和用户进行交互。我们可以通过这两个方法合理地管理那些对用户可见的资源。比如onStart对资源进行加载，onStop时对资源进行释放，从而保证处于停止状态的活动不会占用过多内存。</p><h5 id="前台生存期"><a href="#前台生存期" class="headerlink" title="前台生存期"></a>前台生存期</h5><p>活动在onResume和onPause方法之间所经历的就是前台生存期。在前台生存期内，活动总是处于运行状态，此时的活动是可以和用户进行交互的，我们平时看到和接触最多的也就是这个状态下的活动。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304041108526.png"></p><h3 id="4-4、活动被回收了怎么办"><a href="#4-4、活动被回收了怎么办" class="headerlink" title="4.4、活动被回收了怎么办"></a>4.4、活动被回收了怎么办</h3><p>当一个活动进入停止状态，是有可能被系统回收的。如果A被回收了，这个时候并不会执行onRestart方法，而是会执行活动A的onCreate方法，A在这种情况下会被重新创建一次。看上去很正常，但是如果A中存在临时数据，那么重新创建之后数据就没了，所以我们必须想出一个解决办法：</p><p>Activity中提供了一个onSaveInstanceState回调方法，这个方法可以保证在活动被回收之前一定会被调用，因此我们可以通过这个方法来解决活动被回收时临时数据得不到保存的问题。</p><p>onSaveInstanceState的参数是Bundle类型，它提供了一系列的方法用于保存数据，比如putString保存字符串，putInt保存整数数据。</p><pre class="line-numbers language-none"><code class="language-none">public void onSaveInstanceState(Bundle outState) &#123;    super.onSaveInstanceState(outState);    String data&#x3D;&quot;Hello onSaveInstanceState&quot;;    outState.putString(&quot;save_key&quot;,data);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样数据就被保存下来了，我们应该在哪里恢复呢？其实我们用的onCreate里也有个bundle参数，不过这个参数一般都是null，如果在活动被系统回收之前通过onSaveInstanceState方法来保存数据的话，这个参数就会带有之前所保存的全部数据，我们只需要再通过相应的取值方法将数据取出就行了。</p><pre class="line-numbers language-none"><code class="language-none">if (savedInstanceState!&#x3D;null)&#123;      String tempdata&#x3D;savedInstanceState.getString(&quot;save_key&quot;);      Log.d(&quot;save_data&quot;,tempdata);  &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-5、活动的启动模式"><a href="#4-5、活动的启动模式" class="headerlink" title="4.5、活动的启动模式"></a>4.5、活动的启动模式</h3><p>启动模式分为四种：standard、singleTop、singleTask和singleInstance</p><h4 id="a、standard"><a href="#a、standard" class="headerlink" title="a、standard"></a>a、standard</h4><p>standard是活动的默认启动模式，在不进行显式指定的情况下，所有活动都会自动使用这种启动模式。因此，到目前为止我们写过的所有活动都是使用的standard模式。在standard模式（即默认情况）下，每当启动一个新的活动，它就会在返回栈中入栈，并处于栈顶的位置。对于使用standard模式的活动，系统不会在乎这个活动是否已经在返回栈中存在，每次启动都会创建该活动的一个新的实例。</p><pre class="line-numbers language-none"><code class="language-none">startNormalActivity.setOnClickListener(new View.OnClickListener() &#123;        @Override        public void onClick(View view) &#123;            Intent intent&#x3D;new Intent(MainActivity.this,MainActivity.class);            startActivity(intent);        &#125;    &#125;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们尝试在MainActivity的基础上再启动MainActivity，连续两次点击按钮</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304052304342.png"></p><p>我们每点击一次按钮就会创建出一个新的MainActivity，此时的返回栈中有3个MainActivity的实例，也就意味着我们需要点击3次back才能退出程序。</p><p>原理示意图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304052306876.png"></p><h4 id="b、singleTop"><a href="#b、singleTop" class="headerlink" title="b、singleTop"></a>b、singleTop</h4><p>使用singleTop模式。当活动的启动模式指定为singleTop，在启动活动时如果发现返回栈的栈顶已经是该活动，则认为可以直接使用它，不会再创建新的活动实例。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304052317418.png"></p><h4 id="c、singleTask"><a href="#c、singleTask" class="headerlink" title="c、singleTask"></a>c、singleTask</h4><p>任务栈中不重复</p><p>当活动的启动模式指定为singleTask，每次启动该活动时系统首先会在返回栈中检查是否存在该活动的实例，如果发现已经存在则直接使用该实例，并把在这个活动之上的所有活动统统出栈，如果没有发现就会创建一个新的活动实例。</p><p>![image-20230405232045692](&#x2F;Users&#x2F;whitebird&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230405232045692.png)</p><h4 id="d、singleInstance"><a href="#d、singleInstance" class="headerlink" title="d、singleInstance"></a>d、singleInstance</h4><p>在这种模式下会有一个单独的返回栈来管理这个活动，不管是哪个应用程序来访问这个活<br>动，都共用的同一个返回栈</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304052333056.png"></p><h3 id="4-6、活动的最佳实践"><a href="#4-6、活动的最佳实践" class="headerlink" title="4.6、活动的最佳实践"></a>4.6、活动的最佳实践</h3><h4 id="1、了解当前界面对应活动"><a href="#1、了解当前界面对应活动" class="headerlink" title="1、了解当前界面对应活动"></a>1、了解当前界面对应活动</h4><p>创建自己的Activity基类BaseActivity；并让所有activity继承该类</p><pre class="line-numbers language-none"><code class="language-none">package com.example.activitylifecycletest;import android.os.Bundle;import android.util.Log;import androidx.annotation.Nullable;import androidx.appcompat.app.AppCompatActivity;public class BaseActivity extends AppCompatActivity &#123;    @Override    protected void onCreate(@Nullable Bundle savedInstanceState) &#123;        super.onCreate(savedInstanceState);        Log.d(&quot;BaseActivity&quot;,getClass().getSimpleName());    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304052349440.png"></p><h4 id="2、随时随地退出程序"><a href="#2、随时随地退出程序" class="headerlink" title="2、随时随地退出程序"></a>2、随时随地退出程序</h4><p>用一个专门的集合类对所有的活动进行管理</p><pre class="line-numbers language-none"><code class="language-none">package com.example.activitylifecycletest;import android.app.Activity;import java.util.ArrayList;import java.util.List;public class ActivityCollector &#123;    public static List&lt;Activity&gt; activities&#x3D;new ArrayList&lt;&gt;();    public static void addActivity(Activity activity)&#123;        activities.add(activity);    &#125;    public static void RemoveActivity(Activity activity)&#123;        activities.remove(activity);    &#125;    public static void finishAll()&#123;        for (Activity activity:activities             ) &#123;            if (!activity.isFinishing())&#123;                activity.finish();            &#125;        &#125;        activities.clear();    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在BaseActivity中进行调用，在BaseActivity 的onCreate() 方法中调用了ActivityCollector 的addActivity() 方法，表明将当前正在创建的活动添加到活动管理器里。然后在BaseActivity 中重写onDestroy() 方法，并调用了ActivityCollector 的removeActivity()方法，表明将一个马上要销毁的活动从活动管理器里移除。</p><pre class="line-numbers language-none"><code class="language-none">package com.example.activitylifecycletest;import android.os.Bundle;import android.util.Log;import androidx.annotation.Nullable;import androidx.appcompat.app.AppCompatActivity;public class BaseActivity extends AppCompatActivity &#123;    @Override    protected void onCreate(@Nullable Bundle savedInstanceState) &#123;        super.onCreate(savedInstanceState);        Log.d(&quot;BaseActivity&quot;,getClass().getSimpleName());        ActivityCollector.addActivity(this);    &#125;    @Override    protected void onDestroy() &#123;        super.onDestroy();        ActivityCollector.RemoveActivity(this);    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3、启动活动的最佳写法"><a href="#3、启动活动的最佳写法" class="headerlink" title="3、启动活动的最佳写法"></a>3、启动活动的最佳写法</h4><pre class="line-numbers language-none"><code class="language-none">public static void actionStart(Context context, String data1, String data2) &#123;        Intent intent &#x3D; new Intent(context, [current_activity.class]);        intent.putExtra(&quot;param1&quot;, data1);        intent.putExtra(&quot;param2&quot;, data2);        context.startActivity(intent);    &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Android开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android开发学习笔记(3)——UI开发</title>
      <link href="//post/the_first_code3.html"/>
      <url>//post/the_first_code3.html</url>
      
        <content type="html"><![CDATA[<h1 id="第三章——UI开发"><a href="#第三章——UI开发" class="headerlink" title="第三章——UI开发"></a>第三章——UI开发</h1><h2 id="1、如何编写程序界面"><a href="#1、如何编写程序界面" class="headerlink" title="1、如何编写程序界面"></a>1、如何编写程序界面</h2><p>程序界面编写有很多种方法，主要分为可视化编辑器和XML代码编写，可视化编辑器虽然方便，但是不利于我们真正了解界面后面的实现原理，XML编写一些比较复杂的界面比较方便。</p><h2 id="2、常见控件的使用方法"><a href="#2、常见控件的使用方法" class="headerlink" title="2、常见控件的使用方法"></a>2、常见控件的使用方法</h2><h3 id="2-1、TextView"><a href="#2-1、TextView" class="headerlink" title="2.1、TextView"></a>2.1、TextView</h3><p>主要用于在界面上显示一段文本信息</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        &lt;TextView        android:id="@+id/text_view"  //给当前控件定义了唯一标识符        android:layout_width="match_parent" //指定了控件的宽度        android:layout_height="wrap_content" //指定了控件的高度        android:text="This is a TestView!" //指定TextView显示的文本内容/><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>android:layout_width和android:layout_height指定了控件的高度和宽度，所有的控件都有这两个属性，可选值有3个：match_parent、fill_parent和wrap_content。match_parent、fill_parent都表示让当前控件的大小和父布局的大小一样，也就是由父布局来决定当前控件的大小，而wrap_content表示让当前控件的大小能够刚好包含住里面的内容，也就是由控件内容决定当前控件的大小。上面的代码就表示让TextView的宽度和父布局一样宽，也就是手机屏幕的宽度，让TextView的高度足够包含住里面的内容就行。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304061237855.png"></p><p>TextView的文字默认是左上角对齐的，由于文字内容长度不够，我们无法看出TextView的宽度，现在我们修改一下对齐方式</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/text_view<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>This is a TestView!<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们通过android:gravity指定文字的对齐方式，可选值有top、bottom、left、right、center等，可以用｜同时指定多个值。center等同于center_vertical｜center_horizontal，表示文字在垂直和水平方向都居中对齐。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304061243410.png"></p><p>我们还可以对文字的大小以及颜色进行修改</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/text_view<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>This is a TestView!<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>24sp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#00ff00<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304061249799.png"></p><h3 id="2-2、Button"><a href="#2-2、Button" class="headerlink" title="2.2、Button"></a>2.2、Button</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/text_view<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>This is a TestView!<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>24sp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#00ff00<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>         <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Button<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>![image-20230406130337767](&#x2F;Users&#x2F;whitebird&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230406130337767.png)</p><p>你可能会发现一个问题，我们text里是Button，但是界面上却是大写字母，这是由于系统会对Button中所有的英文字母自动进行大写转换，不过我们要是不想要，可以进行相关配置关闭。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">android:textAllCaps="false"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>通过匿名类注册监听器</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>uiwidgettest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>support<span class="token punctuation">.</span>v7<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button1<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>        button1<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过接口注册监听器</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>uiwidgettest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>support<span class="token punctuation">.</span>v7<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token keyword">implements</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button1<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>        button1<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button<span class="token operator">:</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>                            <span class="token keyword">default</span><span class="token operator">:</span>                       <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-3、EditText"><a href="#2-3、EditText" class="headerlink" title="2.3、EditText"></a>2.3、EditText</h3><p>EditText允许用户在控件里输入和编辑内容。</p><pre class="line-numbers language-none"><code class="language-none">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;&lt;LinearLayout xmlns:android&#x3D;&quot;http:&#x2F;&#x2F;schemas.android.com&#x2F;apk&#x2F;res&#x2F;android&quot;    android:orientation&#x3D;&quot;vertical&quot;    android:layout_width&#x3D;&quot;match_parent&quot;    android:layout_height&#x3D;&quot;match_parent&quot;&gt;    &lt;EditText        android:layout_width&#x3D;&quot;match_parent&quot;        android:layout_height&#x3D;&quot;wrap_content&quot;        android:id&#x3D;&quot;@+id&#x2F;edit_text&quot;&#x2F;&gt;&lt;&#x2F;LinearLayout&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其实到这里我们可以总结出Android控件的使用规律了，用法基本上很相似，给控件定义一个id，再指定控件的高度和宽度，然后再适当加入一些控件特有的属性就差不多了。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304061342780.png"></p><p>通过android:hint&#x3D;”Please input something:”可以给输入框增加一些提示</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304061345846.png"></p><p>由于我们的高度设置为wrap_content，当我们输入足够多的字符时，会不断往下拉伸，可以通过android:maxLines&#x3D;”2”,限制输入框最多显示2行，当输入内容超过2行，文本就会向上滚动。通过Button配合EditText打印出输入框内的内容</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>uiwidgettest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>support<span class="token punctuation">.</span>v7<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">EditText</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token keyword">implements</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">EditText</span> editText<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button1<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>         editText<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">EditText</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>edit_text<span class="token punctuation">)</span><span class="token punctuation">;</span>        button1<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button<span class="token operator">:</span>                <span class="token class-name">String</span> inputText<span class="token operator">=</span>editText<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> inputText<span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304061352211.png"></p><h3 id="2-4、ImageView"><a href="#2-4、ImageView" class="headerlink" title="2.4、ImageView"></a>2.4、ImageView</h3><p>用于在界面上显示图片的一个控件，图片一般存放在drawable开头的目录下</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageView</span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/image_view<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/image1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当我们点击button后切换图片</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>uiwidgettest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>support<span class="token punctuation">.</span>v7<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">EditText</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ImageView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token keyword">implements</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">EditText</span> editText<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">ImageView</span> imageView<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button1<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>         editText<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">EditText</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>edit_text<span class="token punctuation">)</span><span class="token punctuation">;</span>         imageView<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">ImageView</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>image_view<span class="token punctuation">)</span><span class="token punctuation">;</span>        button1<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button<span class="token operator">:</span>                <span class="token class-name">String</span> inputText<span class="token operator">=</span>editText<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> inputText<span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                imageView<span class="token punctuation">.</span><span class="token function">setImageResource</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>image2<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304061651724.png"></p><p>点击Button后</p><p>![image-20230406165135007](&#x2F;Users&#x2F;whitebird&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230406165135007.png)</p><h3 id="2-5、ProgressBar"><a href="#2-5、ProgressBar" class="headerlink" title="2.5、ProgressBar"></a>2.5、ProgressBar</h3><p>用于在界面上显示一个进度条，表示我们的程序正在加载一些数据。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ProgressBar</span>     <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>     <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>     <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/process_bar<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304061700058.png"></p><p>这个加载进度条会一直都在，但是我们的数据总有加载完的时候，怎样才能让进度条在数据加载完成时消失？这个时候就需要一个新的知识点。Android控件的可见属性。所有的安卓控件都具有这个属性，我们可以通过android:visibility&#x3D;””进行设置，可选值有：visible、invisible、和gone。visible表示控件可见，这个是不对android:visibility进行设置时的默认值，invisible表示控件不可见，但是它仍然占据着原来的位置和大小，可以理解变成了透明状态了。gone则表示控件不仅不可见，而且不再占用任何屏幕空间。另外我们也可以通过代码来设置控件的可见性，progressBar.setVisibility(),传入值为View.VISIBLE、View.INVISIBLE、</p><p>View.GONE</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>uiwidgettest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>support<span class="token punctuation">.</span>v7<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">EditText</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ImageView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ProgressBar</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token keyword">implements</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">EditText</span> editText<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">ImageView</span> imageView<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">ProgressBar</span> progressBar<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button1<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>         editText<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">EditText</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>edit_text<span class="token punctuation">)</span><span class="token punctuation">;</span>         imageView<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">ImageView</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>image_view<span class="token punctuation">)</span><span class="token punctuation">;</span>         progressBar<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">ProgressBar</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>process_bar<span class="token punctuation">)</span> <span class="token punctuation">;</span>        button1<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button<span class="token operator">:</span>                <span class="token class-name">String</span> inputText<span class="token operator">=</span>editText<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> inputText<span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                imageView<span class="token punctuation">.</span><span class="token function">setImageResource</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>image2<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>progressBar<span class="token punctuation">.</span><span class="token function">getVisibility</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token class-name">View</span><span class="token punctuation">.</span><span class="token constant">GONE</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    progressBar<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span><span class="token class-name">View</span><span class="token punctuation">.</span><span class="token constant">VISIBLE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    progressBar<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span><span class="token class-name">View</span><span class="token punctuation">.</span><span class="token constant">GONE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>另外我们可以指定ProcessBar的样式，刚才是圆形进度条，通过style属性可以设置成水平进度条。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ProgressBar</span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/process_bar<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>visibility</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>visible<span class="token punctuation">"</span></span>    <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css">?<span class="token property">android</span><span class="token punctuation">:</span>attr/progressBarStyleHorizontal</span><span class="token punctuation">"</span></span></span>    <span class="token attr-name"><span class="token namespace">android:</span>max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>    <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>![image-20230406171435910](&#x2F;Users&#x2F;whitebird&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230406171435910.png)</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button<span class="token operator">:</span>            <span class="token class-name">String</span> inputText<span class="token operator">=</span>editText<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> inputText<span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            imageView<span class="token punctuation">.</span><span class="token function">setImageResource</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>image2<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> progress<span class="token operator">=</span>progressBar<span class="token punctuation">.</span><span class="token function">getProgress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            progress<span class="token operator">=</span>progress<span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">;</span>            progressBar<span class="token punctuation">.</span><span class="token function">setProgress</span><span class="token punctuation">(</span>progress<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token operator">:</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>每次点击Button，进度条+10</p><p>![image-20230406171702278](&#x2F;Users&#x2F;whitebird&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230406171702278.png)</p><h3 id="2-6、AlertDialog"><a href="#2-6、AlertDialog" class="headerlink" title="2.6、AlertDialog"></a>2.6、AlertDialog</h3><p>AlertDialog可以在当前的界面弹出一个对话框，这个对话框是置顶于所有界面元素之上的，能够屏蔽掉其他控件的交互能力，因此AlertDialog一般用于提示一些非常重要的内容或者警告信息。比如为了防止用户误删重要内容，在删除前弹出一个确认对话框。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">AlertDialog<span class="token punctuation">.</span>Builder</span> dialog<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">AlertDialog<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               dialog<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Dialog"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置弹框标题</span>               dialog<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token string">"Something important"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置弹框内容</span>               dialog<span class="token punctuation">.</span><span class="token function">setCancelable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//能否用back键关闭对话框</span>               dialog<span class="token punctuation">.</span><span class="token function">setPositiveButton</span><span class="token punctuation">(</span><span class="token string">"OK"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DialogInterface<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">//为对话框设置确认按钮的点击事件</span>                   <span class="token annotation punctuation">@Override</span>                   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">DialogInterface</span> dialogInterface<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                   <span class="token punctuation">&#125;</span>               <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               dialog<span class="token punctuation">.</span><span class="token function">setNegativeButton</span><span class="token punctuation">(</span><span class="token string">"Cancle"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DialogInterface<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">//为对话框设置取消按钮的点击事件</span>                   <span class="token annotation punctuation">@Override</span>                   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">DialogInterface</span> dialogInterface<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                   <span class="token punctuation">&#125;</span>               <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               dialog<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304061747922.png"></p><p>而且back键无法使用</p><h3 id="2-7、ProgressDialog"><a href="#2-7、ProgressDialog" class="headerlink" title="2.7、ProgressDialog"></a>2.7、ProgressDialog</h3><p>ProgressDialog会在对话框中显示一个进度条，一般用于表示当前的操作比较耗时，让用户耐心地等待。它的用法和AlertDialog也比较相似。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button<span class="token operator">:</span>            <span class="token class-name">String</span> inputText<span class="token operator">=</span>editText<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> inputText<span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            imageView<span class="token punctuation">.</span><span class="token function">setImageResource</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>image2<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> progress<span class="token operator">=</span>progressBar<span class="token punctuation">.</span><span class="token function">getProgress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            progress<span class="token operator">=</span>progress<span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">;</span>            progressBar<span class="token punctuation">.</span><span class="token function">setProgress</span><span class="token punctuation">(</span>progress<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">ProgressDialog</span> progressDialog<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ProgressDialog</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            progressDialog<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"This is ProgressDialog"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            progressDialog<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token string">"Loading......"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            progressDialog<span class="token punctuation">.</span><span class="token function">setCancelable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            progressDialog<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token operator">:</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304062253678.png"></p><h2 id="3、布局"><a href="#3、布局" class="headerlink" title="3、布局"></a>3、布局</h2><p>一个丰富的界面总是要由很多个控件组成的，那我们如何才能让各个控件都有条不紊地摆放在界面上，而不是乱糟糟的，这就需要借助布局了。布局是一种可以用来放置很多控件的容器，它可以按照一定的规律调整内部控件的位置，从而编写出精美的界面。当然，布局里面还可以放布局，多层嵌套。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304070003989.png"></p><h4 id="3-1、线性布局"><a href="#3-1、线性布局" class="headerlink" title="3.1、线性布局"></a>3.1、线性布局</h4><h5 id="android-orientation"><a href="#android-orientation" class="headerlink" title="android:orientation"></a>android:orientation</h5><p>LinearLayout称为线性布局，是一种比较常用的布局。这个布局会将它所包含的控件在线性方向上依次排列。线性排列肯定会分为垂直和水平，通过android:orientation控制，如果是垂直就是vertical，如果是水平就是horizontal。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>   <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button1<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Button 1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button2<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Button 2<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button3<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Button 3<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304070006215.png"></p><p>现在我们尝试把布局改成水平的android:orientation&#x3D;”horizontal”</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304070010066.png"></p><p>当然，如果不指定android:orientation，默认的排列方向就是水平的</p><p>LinearLayout的排列方式为horizontal时，内部控件就不能将宽度设置为match_parent，这样一个控件就会把整个水平方向占满，其他的控件就没地方放了。同理，如果LinearLayout的排列方式是vertical，那么控件的高度就不能设置为match_parent。</p><h5 id="android-layout-gravity"><a href="#android-layout-gravity" class="headerlink" title="android:layout_gravity"></a>android:layout_gravity</h5><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token class-name">LinearLayout</span> xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span>    android<span class="token operator">:</span>orientation<span class="token operator">=</span><span class="token string">"horizontal"</span>    android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>    android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token class-name">Button</span>        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/button1"</span>        android<span class="token operator">:</span>layout_gravity<span class="token operator">=</span><span class="token string">"top"</span>        android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"Button 1"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token class-name">Button</span>        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/button2"</span>        android<span class="token operator">:</span>layout_gravity<span class="token operator">=</span><span class="token string">"center_vertical"</span>        android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"Button 2"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token class-name">Button</span>        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/button3"</span>        android<span class="token operator">:</span>layout_gravity<span class="token operator">=</span><span class="token string">"bottom"</span>        android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"Button 3"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token class-name">LinearLayout</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304070022342.png"></p><p>android:layout_gravity指定控件在布局中的位置，android:gravity是指定文字在控件中的对齐方式，但是他们的可选值差不多。需要注意的是，当android:orientation&#x3D;”horizontal”，只有垂直方向上的对齐方式才会生效，同理当android:orientation&#x3D;”vertical”时，只有水平方向的对齐方式才会生效。</p><h5 id="android-layout-weight"><a href="#android-layout-weight" class="headerlink" title="android:layout_weight"></a>android:layout_weight</h5><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token class-name">LinearLayout</span> xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span>    android<span class="token operator">:</span>orientation<span class="token operator">=</span><span class="token string">"horizontal"</span>    android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>    android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token class-name">EditText</span>        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"0dp"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>layout_weight<span class="token operator">=</span><span class="token string">"1"</span>        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/input_message"</span>        android<span class="token operator">:</span>hint<span class="token operator">=</span><span class="token string">"please input something!"</span>        <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token class-name">Button</span>        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"0dp"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>layout_weight<span class="token operator">=</span><span class="token string">"1"</span>        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/button1"</span>        android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"Button 1"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token class-name">LinearLayout</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个属性允许我们使用比例的方式指定控件的大小，也就是通过分配权重。这里虽然把layout_width设置为0，但是文本编辑框和按钮都能显示，因为现在的宽度由layout_weight决定，这里写0dp是一种规范的写法。由于EditText和Button的layout_weight都是1，这样就会平分屏幕的宽度，如果想让文本编辑框占3&#x2F;5，让按钮占2&#x2F;5，就把对应的layout_weight改成3和2.</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304070037848.png"></p><p>3:2</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304070038347.png"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token class-name">LinearLayout</span> xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span>    android<span class="token operator">:</span>orientation<span class="token operator">=</span><span class="token string">"horizontal"</span>    android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>    android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token class-name">EditText</span>        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"0dp"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>layout_weight<span class="token operator">=</span><span class="token string">"1"</span>        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/input_message"</span>        android<span class="token operator">:</span>hint<span class="token operator">=</span><span class="token string">"please input something!"</span>        <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token class-name">Button</span>        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/button1"</span>        android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"Button 1"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token class-name">LinearLayout</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里把EditText的android:layout_weight改为1，并且把Button的android:layout_width设置成wrap_content，表示Button还是按wrap_content计算，则EditText会占满屏幕所剩下的空间，对于屏幕的适配比较好。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304070041088.png"></p><h4 id="3-2、相对布局"><a href="#3-2、相对布局" class="headerlink" title="3.2、相对布局"></a>3.2、相对布局</h4><p>RelativeLayout又称作相对布局，比较随意，通过相对定位的方式让控件出现在布局的任何位置。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RelativeLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button1<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_alignParentLeft</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_alignParentTop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button 1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button2<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_alignParentRight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_alignParentTop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button 2<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button3<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_centerInParent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button 3<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button4<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_alignParentLeft</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_alignParentBottom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button 4<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button5<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_alignParentRight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_alignParentBottom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button 5<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RelativeLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304071254344.png"></p><p>上面的每个控件都是相对于父布局进行定位的，当然控件也可以相对于控件进行定位。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RelativeLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button3<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_centerInParent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button 3<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button1<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_above</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button3<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_toLeftOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button3<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button 1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button2<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_above</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button3<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_toRightOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button3<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button 2<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button4<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_below</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button3<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_toLeftOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button3<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button 4<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button5<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_below</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button3<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_toRightOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button3<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button 5<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RelativeLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304071306617.png"></p><h4 id="3-3、帧布局"><a href="#3-3、帧布局" class="headerlink" title="3.3、帧布局"></a>3.3、帧布局</h4><p>FrameLayout又称帧布局，应用场景比较少，所有的控件都会默认摆放在布局的左上角。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FrameLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/text_view<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>This is a TextView<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageView</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/image_view<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@mipmap/ic_launcher<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FrameLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304071316610.png"></p><p>文字和图片都在布局的左上角，由于ImageView是在TextView之后添加的，因此图片压在了文字的上面。</p><h4 id="3-4、百分比布局"><a href="#3-4、百分比布局" class="headerlink" title="3.4、百分比布局"></a>3.4、百分比布局</h4><p>前面的三种布局从Android1.0就开始支持了，一直沿用到现在，满足了绝大多数的场景界面设计需求。不过只有LinearLayout支持使用layout_weight属性实现按比例指定控件大小的功能，其他的两种布局是不支持的。通过百分比布局可以解决这个问题，我们不再使用wrap_content和match_parent等方式来指定控件的大小，而是允许直接指定控件在布局中所占的百分比，这样的话就可以轻松实现平分布局甚至是任意比例分割布局的效果了。由于LinearLayout本身已经支持按比例指定控件的大小了，因此百分比布局只为FrameLayout和RelativeLayout进行了功能扩展，提供了PercentFrameLayout和PercentRelativeLayout。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304071330638.png"></p><p>百分比布局属于新增布局，为了让新增布局在所有的Android版本上都能使用，为此，Android团队将百分比布局定义在了support库中，我们需要在build.gradle中添加依赖，如图所示。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>android.support.percent.PercentFrameLayout</span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button1<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Button 1<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left|top<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">app:</span>layout_widthPercent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">app:</span>layout_heightPercent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button2<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Button 2<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right|top<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">app:</span>layout_widthPercent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">app:</span>layout_heightPercent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button3<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Button 3<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left|bottom<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">app:</span>layout_widthPercent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">app:</span>layout_heightPercent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button4<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Button 4<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right|bottom<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">app:</span>layout_widthPercent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">app:</span>layout_heightPercent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>android.support.percent.PercentFrameLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、创建自定义控件"><a href="#4、创建自定义控件" class="headerlink" title="4、创建自定义控件"></a>4、创建自定义控件</h2><p>![image-20230408131717965](&#x2F;Users&#x2F;whitebird&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230408131717965.png)</p><p>可以看到，我们所用的所有控件都是直接或者间接继承自View的，所用的布局是直接或者间接继承自ViewGroup的。</p><h3 id="4-1、引入布局"><a href="#4-1、引入布局" class="headerlink" title="4.1、引入布局"></a>4.1、引入布局</h3><p>有时候我们一个布局需要在很多个活动中使用，如果都编写一次同样的代码，会导致代码的大量重复，这时候我们可以通过引入布局来解决这个问题。</p><p>首先写一个title.xml</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/title_back<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Back<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#fff<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/title_text<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Title Text<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#f16<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>24sp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/title_edit<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Edit<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#fff<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304081353042.png"></p><p>在activity_main.xml只需要include就行了</p><pre class="line-numbers language-none"><code class="language-none">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;&lt;LinearLayout    xmlns:android&#x3D;&quot;http:&#x2F;&#x2F;schemas.android.com&#x2F;apk&#x2F;res&#x2F;android&quot;    android:layout_width&#x3D;&quot;match_parent&quot;    android:layout_height&#x3D;&quot;match_parent&quot;    &gt;   &lt;include layout&#x3D;&quot;@layout&#x2F;title&quot;&#x2F;&gt;&lt;&#x2F;LinearLayout&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304081353995.png"></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304081400168.png"></p><p>运行后，布局不在顶部，这是因为系统自带的标题栏，我们可以选择隐藏它</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>myapplication</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">ActionBar</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Log</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ActionBar</span> actionBar<span class="token operator">=</span><span class="token function">getSupportActionBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>actionBar<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            actionBar<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304081401960.png"></p><p>以后的活动想要用这个标题栏，直接include就行了。</p><h3 id="4-2、创建自定义控件"><a href="#4-2、创建自定义控件" class="headerlink" title="4.2、创建自定义控件"></a>4.2、创建自定义控件</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TitleLayout</span> <span class="token keyword">extends</span> <span class="token class-name">LinearLayout</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">TitleLayout</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">AttributeSet</span> attrs<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">LayoutInflater</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>title<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> titleBack<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>title_back<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> titleEdit<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>title_edit<span class="token punctuation">)</span><span class="token punctuation">;</span>        titleBack<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Activity</span><span class="token punctuation">)</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        titleEdit<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">"You click Edit button"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.example.myapplication.TitleLayout</span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="5、最常用和最难用的控件——ListView"><a href="#5、最常用和最难用的控件——ListView" class="headerlink" title="5、最常用和最难用的控件——ListView"></a>5、最常用和最难用的控件——ListView</h2><p>我们几乎所有的应用程序都会用到它，由于手机屏幕有限，能够一次性在屏幕上显示的内容并不多，当我们的程序中有大量的数据需要展示的时候，就可以借助ListView实现，ListView允许用户通过手指上下滑动的方式将屏幕外的数据滚动到屏幕内，同时屏幕上的原有的数据则会滚动出屏幕，比如QQ聊天记录、翻阅微博最新消息都是用的这个控件。</p><h3 id="5-1、ListView的简单用法"><a href="#5-1、ListView的简单用法" class="headerlink" title="5.1、ListView的简单用法"></a>5.1、ListView的简单用法</h3><p>修改 activity_main.xml的代码</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/list_view<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304101843641.png"></p><p>接下来修改 MainActivity.java的代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>listview1</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ArrayAdapter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ListView</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"Apple"</span><span class="token punctuation">,</span><span class="token string">"Banana"</span><span class="token punctuation">,</span><span class="token string">"Orange"</span><span class="token punctuation">,</span><span class="token string">"Watermelon"</span><span class="token punctuation">,</span><span class="token string">"Pear"</span><span class="token punctuation">,</span><span class="token string">"Grape"</span><span class="token punctuation">,</span><span class="token string">"Pineapple"</span><span class="token punctuation">,</span>            <span class="token string">"Strawberry"</span><span class="token punctuation">,</span><span class="token string">"Cherry"</span><span class="token punctuation">,</span><span class="token string">"Mango"</span><span class="token punctuation">,</span><span class="token string">"Apple"</span><span class="token punctuation">,</span><span class="token string">"Banana"</span><span class="token punctuation">,</span><span class="token string">"Orange"</span><span class="token punctuation">,</span><span class="token string">"Watermelon"</span><span class="token punctuation">,</span><span class="token string">"Pear"</span><span class="token punctuation">,</span><span class="token string">"Grape"</span><span class="token punctuation">,</span><span class="token string">"Pineapple"</span><span class="token punctuation">,</span>            <span class="token string">"Strawberry"</span><span class="token punctuation">,</span><span class="token string">"Cherry"</span><span class="token punctuation">,</span><span class="token string">"Mango"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ArrayAdapter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> adapter <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayAdapter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span></span>R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>simple_list_item_1<span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//android.R.layout.simple_list_item_1 Listview子项布局的id，里面只有一个TextView</span>        <span class="token class-name">ListView</span> listView<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">ListView</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>list_view<span class="token punctuation">)</span><span class="token punctuation">;</span>        listView<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>adapter<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ListView是用于展示大量数据的，那我们就应该先将数据提供好。不过数组中的数据是无法传递给ListView的，我们需要借助适配器来完成——ArrayAdapter，然后将配置好的适配器对象通过setAdapter传递给ListView</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304101849698.png"></p><h3 id="5-2、定制ListView的界面"><a href="#5-2、定制ListView的界面" class="headerlink" title="5.2、定制ListView的界面"></a>5.2、定制ListView的界面</h3><p>只能显示一段文本的ListView太单调了，我们现在对ListView的界面进行定制，让它可以显示更加丰富的内容。</p><p>先定义一个实体类，作为ListView适配器的适配类型。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Fruit</span><span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> imageId<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>imageId<span class="token operator">=</span>id<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getImageId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> imageId<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>name表示水果的名字，imageId表示水果对应图片的资源id。需要为ListView的子项指定一个我们自定义的布局</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageView</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/fruit_image<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center_vertical<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/fruit_name<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_marginLeft</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在需要重写适配器</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>listview1</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">LayoutInflater</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">ViewGroup</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ArrayAdapter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ImageView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">TextView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>w3c<span class="token punctuation">.</span>dom<span class="token punctuation">.</span></span><span class="token class-name">Text</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FruitAdapter</span> <span class="token keyword">extends</span> <span class="token class-name">ArrayAdapter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Fruit</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> resourceId<span class="token punctuation">;</span><span class="token comment">//用于保存传进来的子项布局id，后面动态加载要用</span>    <span class="token keyword">public</span> <span class="token class-name">FruitAdapter</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token keyword">int</span> textviewResourceId<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Fruit</span><span class="token punctuation">></span></span> objects<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> textviewResourceId<span class="token punctuation">,</span> objects<span class="token punctuation">)</span><span class="token punctuation">;</span>        resourceId <span class="token operator">=</span> textviewResourceId<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token comment">//重写了父类ArrayAdapter中getView</span>    <span class="token keyword">public</span> <span class="token class-name">View</span> <span class="token function">getView</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">,</span> <span class="token class-name">View</span> converView<span class="token punctuation">,</span> <span class="token class-name">ViewGroup</span> parent<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">//每个子项被滚动到屏幕内会被调用</span>    <span class="token class-name">Fruit</span> fruit <span class="token operator">=</span> <span class="token function">getItem</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取当前项的Fruit实例</span>        <span class="token class-name">View</span> view<span class="token operator">=</span> <span class="token class-name">LayoutInflater</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>resourceId<span class="token punctuation">,</span>parent<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// 为子项加载我们传入的布局</span>      <span class="token comment">//获取实例</span>        <span class="token class-name">ImageView</span> fruitImage<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">ImageView</span><span class="token punctuation">)</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>fruit_image<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">TextView</span> fruitname<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">TextView</span><span class="token punctuation">)</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>fruit_name<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//为实例设置参数</span>        fruitImage<span class="token punctuation">.</span><span class="token function">setImageResource</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">getImageId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fruitname<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> view<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>主函数</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>listview1</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ArrayAdapter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ListView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Fruit</span><span class="token punctuation">></span></span> fruitList <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initFruits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">Fruit</span> apple <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token string">"Apple"</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>apple_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>apple<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Fruit</span> banana <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token string">"Banana"</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>banana_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>banana<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Fruit</span> orange <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token string">"Orange"</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>orange_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orange<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Fruit</span> watermelon <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token string">"Watermelon"</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>watermelon_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>watermelon<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Fruit</span> pear <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token string">"Pear"</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>pear_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>pear<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Fruit</span> grape <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token string">"Grape"</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>grape_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>grape<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Fruit</span> pineapple <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token string">"Pineapple"</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>pineapple_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>pineapple<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Fruit</span> strawberry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token string">"Strawberry"</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>strawberry_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>strawberry<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Fruit</span> cherry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token string">"Cherry"</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>cherry_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cherry<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Fruit</span> mango <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token string">"Mango"</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>mango_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mango<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">initFruits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FruitAdapter</span> adapter<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FruitAdapter</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>fruit_item<span class="token punctuation">,</span>fruitList<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ListView</span> listView <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">ListView</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>list_view<span class="token punctuation">)</span><span class="token punctuation">;</span>        listView<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>adapter<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-3、提升ListView的运行效率"><a href="#5-3、提升ListView的运行效率" class="headerlink" title="5.3、提升ListView的运行效率"></a>5.3、提升ListView的运行效率</h3><p>ListView的运行效率很低，因为在FruitAdapter的getView方法中，每次都会重新加载一次布局，当ListView快速滚动时，这就会成为性能瓶颈。getView中有个参数converView，这个参数用于将之前的加载好的布局进行缓存，以便之后可以进行重用。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">View</span> <span class="token function">getView</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">,</span> <span class="token class-name">View</span> convertView<span class="token punctuation">,</span> <span class="token class-name">ViewGroup</span> parent<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">//每个子项被滚动到屏幕内会被调用</span>        <span class="token class-name">Fruit</span> fruit <span class="token operator">=</span> <span class="token function">getItem</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取当前项的Fruit实例</span>       <span class="token class-name">View</span> view<span class="token punctuation">;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span>convertView<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>           view<span class="token operator">=</span> <span class="token class-name">LayoutInflater</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>resourceId<span class="token punctuation">,</span>parent<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>           view <span class="token operator">=</span>convertView<span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>              <span class="token class-name">ImageView</span> fruitImage<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">ImageView</span><span class="token punctuation">)</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>fruit_image<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">TextView</span> fruitname<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">TextView</span><span class="token punctuation">)</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>fruit_name<span class="token punctuation">)</span><span class="token punctuation">;</span>       fruitImage<span class="token punctuation">.</span><span class="token function">setImageResource</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">getImageId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       fruitname<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">return</span> view<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对convertView进行判断，如果为空，则使用LayoutInflater加载布局，如果不为空，直接对convertView进行重用。虽然现在已经不会再重复去加载布局，但是每次在getView方法中还是会调用View的findViewById来获取一次控件的实例，我们可以借助一个ViewHolder来对这部分性能进行优化</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">View</span> <span class="token function">getView</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">,</span> <span class="token class-name">View</span> convertView<span class="token punctuation">,</span> <span class="token class-name">ViewGroup</span> parent<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">//每个子项被滚动到屏幕内会被调用</span>      <span class="token class-name">Fruit</span> fruit <span class="token operator">=</span> <span class="token function">getItem</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取当前项的Fruit实例</span>      <span class="token class-name">View</span> view<span class="token punctuation">;</span>      <span class="token keyword">class</span> <span class="token class-name">ViewHolder</span> <span class="token punctuation">&#123;</span>          <span class="token class-name">ImageView</span> fruitImage<span class="token punctuation">;</span>          <span class="token class-name">TextView</span> fruitName<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token class-name">ViewHolder</span> viewHolder<span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>convertView<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>          view<span class="token operator">=</span> <span class="token class-name">LayoutInflater</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>resourceId<span class="token punctuation">,</span>parent<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          viewHolder <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ViewHolder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          viewHolder<span class="token punctuation">.</span>fruitName<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">TextView</span><span class="token punctuation">)</span>view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>fruit_name<span class="token punctuation">)</span><span class="token punctuation">;</span>          viewHolder<span class="token punctuation">.</span>fruitImage<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">ImageView</span><span class="token punctuation">)</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>fruit_image<span class="token punctuation">)</span><span class="token punctuation">;</span>          view<span class="token punctuation">.</span><span class="token function">setTag</span><span class="token punctuation">(</span>viewHolder<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          view <span class="token operator">=</span>convertView<span class="token punctuation">;</span>          viewHolder<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">ViewHolder</span><span class="token punctuation">)</span>view<span class="token punctuation">.</span><span class="token function">getTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      viewHolder<span class="token punctuation">.</span>fruitImage<span class="token punctuation">.</span><span class="token function">setImageResource</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">getImageId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      viewHolder<span class="token punctuation">.</span>fruitName<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> view<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>新增一个内部类ViewHolder，用于对控件的实例进行缓存。当convertView为null,就创建一个ViewHolder对象，并将控件的实例都存放在ViewHolder里，然后调用view的setTag，将ViewHolder存放在view中。当convertView不为空，则调用view的getTag方法，把ViewHolder取出来，里面包含所有控件的实例。</p><h3 id="5-4、ListView的点击事件"><a href="#5-4、ListView的点击事件" class="headerlink" title="5.4、ListView的点击事件"></a>5.4、ListView的点击事件</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span>  <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">initFruits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">FruitAdapter</span> adapter<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FruitAdapter</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>fruit_item<span class="token punctuation">,</span>fruitList<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">ListView</span> listView <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">ListView</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>list_view<span class="token punctuation">)</span><span class="token punctuation">;</span>      listView<span class="token punctuation">.</span><span class="token function">setOnItemClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AdapterView<span class="token punctuation">.</span>OnItemClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token annotation punctuation">@Override</span>          <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onItemClick</span><span class="token punctuation">(</span><span class="token class-name">AdapterView</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> adapterView<span class="token punctuation">,</span> <span class="token class-name">View</span> view<span class="token punctuation">,</span> <span class="token keyword">int</span> position<span class="token punctuation">,</span> <span class="token keyword">long</span> id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              <span class="token class-name">Fruit</span> fruit<span class="token operator">=</span>fruitList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> fruit<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      listView<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>adapter<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过position参数判断用户点击的是哪一个子项，然后获取相应的水果，通过Toast将水果打印出来。</p><h2 id="6、滚动控件——RecyclerView"><a href="#6、滚动控件——RecyclerView" class="headerlink" title="6、滚动控件——RecyclerView"></a>6、滚动控件——RecyclerView</h2><p>ListView只能实现数据纵向滚动的效果，如果我们想实现横向滚动，就只能依靠一个更强大的控件——RecyclerView，不仅拥有ListView的效果，在优化了ListView中存在的各种不足之处。</p><h3 id="6-1、RecyclerView的基本用法"><a href="#6-1、RecyclerView的基本用法" class="headerlink" title="6.1、RecyclerView的基本用法"></a>6.1、RecyclerView的基本用法</h3><p>RecyclerView属于新增控件，为了让RecyclerView在所有Android版本上都能使用，使用了添加依赖的方法</p><pre class="line-numbers language-none"><code class="language-none">implementation &#39;androidx.recyclerview:recyclerview:1.2.1&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304111716894.png"></p><p>Activity_main编写</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>   <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.recyclerview.widget.RecyclerView</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/recycler_view<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>FruitAdapter</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>recyclerviewlist</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">LayoutInflater</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">ViewGroup</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ImageView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">TextView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">NonNull</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>recyclerview<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">RecyclerView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FruitAdapter</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>Adapter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FruitAdapter<span class="token punctuation">.</span>ViewHolder</span><span class="token punctuation">></span></span><span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Fruit</span><span class="token punctuation">></span></span> mFruitList<span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ViewHolder</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>ViewHolder</span><span class="token punctuation">&#123;</span>        <span class="token class-name">ImageView</span> fruitImage<span class="token punctuation">;</span>        <span class="token class-name">TextView</span> fruitName<span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token class-name">ViewHolder</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">super</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitImage <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">ImageView</span><span class="token punctuation">)</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>fruit_image<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitName <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">TextView</span><span class="token punctuation">)</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>fruit_name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">FruitAdapter</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Fruit</span><span class="token punctuation">></span></span> fruitList<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        mFruitList<span class="token operator">=</span>fruitList<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">ViewHolder</span> <span class="token function">onCreateViewHolder</span><span class="token punctuation">(</span><span class="token class-name">ViewGroup</span> parent<span class="token punctuation">,</span> <span class="token keyword">int</span> viewType<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">View</span> view <span class="token operator">=</span> <span class="token class-name">LayoutInflater</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>fruit_item<span class="token punctuation">,</span>parent<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ViewHolder</span> holder<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ViewHolder</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> holder<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onBindViewHolder</span><span class="token punctuation">(</span><span class="token class-name">ViewHolder</span> holder<span class="token punctuation">,</span><span class="token keyword">int</span> position<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Fruit</span> fruit<span class="token operator">=</span>mFruitList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>        holder<span class="token punctuation">.</span>fruitImage<span class="token punctuation">.</span><span class="token function">setImageResource</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">getImageId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        holder<span class="token punctuation">.</span>fruitName<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token annotation punctuation">@Override</span>   <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getItemCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> mFruitList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>MainActivity</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>recyclerviewlist</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">NonNull</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>recyclerview<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">LinearLayoutManager</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>recyclerview<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">RecyclerView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">LayoutInflater</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">ViewGroup</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ImageView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">TextView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span><span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Fruit</span><span class="token punctuation">></span></span> fruitList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initFruits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token class-name">Fruit</span> apple <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token string">"Apple"</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>apple_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>                fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>apple<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Fruit</span> banana <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token string">"Banana"</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>banana_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>                fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>banana<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Fruit</span> orange <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token string">"Orange"</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>orange_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>                fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orange<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Fruit</span> watermelon <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token string">"Watermelon"</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>watermelon_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>                fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>watermelon<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Fruit</span> pear <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token string">"Pear"</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>pear_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>                fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>pear<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Fruit</span> grape <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token string">"Grape"</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>grape_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>                fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>grape<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Fruit</span> pineapple <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token string">"Pineapple"</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>pineapple_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>                fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>pineapple<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Fruit</span> strawberry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token string">"Strawberry"</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>strawberry_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>                fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>strawberry<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Fruit</span> cherry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token string">"Cherry"</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>cherry_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>                fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cherry<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Fruit</span> mango <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token string">"Mango"</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>mango_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>                fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mango<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//初始化所有的水果数据</span>        <span class="token function">initFruits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//获取recycler_view实例</span>        <span class="token class-name">RecyclerView</span> recyclerView<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">RecyclerView</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>recycler_view<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//创建一个LinearLayoutManager 对象</span>        <span class="token class-name">LinearLayoutManager</span> layoutManager<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">LinearLayoutManager</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//LayoutManager用于指定RecyclerView的布局方式 LinearLayoutManager是线性布局</span>        recyclerView<span class="token punctuation">.</span><span class="token function">setLayoutManager</span><span class="token punctuation">(</span>layoutManager<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//创建FruitAdapter的实例，传入水果数据</span>        <span class="token class-name">FruitAdapter</span> adapter<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FruitAdapter</span><span class="token punctuation">(</span>fruitList<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//适配器设置</span>        recyclerView<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>adapter<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-2、实现横向滚动和瀑布流布局"><a href="#6-2、实现横向滚动和瀑布流布局" class="headerlink" title="6.2、实现横向滚动和瀑布流布局"></a>6.2、实现横向滚动和瀑布流布局</h3><p>由于ListView的扩展性并不好，它只能实现纵向滚动，如果需要横向滚动，就要借助RecyclerView，而且非常简单</p><p>首先修改fruit_item里的元素，改为垂直排列，宽度设置为了100dp，指定宽度为固定值，因为每一种水果的文字长度不一致，如果使用wrap_content，子项有长有短就会不美观，如果使用match_parent，导致宽度过长，一个子项占满整个屏幕</p><pre class="line-numbers language-none"><code class="language-none">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;&lt;LinearLayout xmlns:android&#x3D;&quot;http:&#x2F;&#x2F;schemas.android.com&#x2F;apk&#x2F;res&#x2F;android&quot;    android:orientation&#x3D;&quot;vertical&quot;    android:layout_width&#x3D;&quot;100dp&quot;    android:layout_height&#x3D;&quot;wrap_content&quot;    &gt;    &lt;ImageView        android:id&#x3D;&quot;@+id&#x2F;fruit_image&quot;        android:layout_width&#x3D;&quot;wrap_content&quot;        android:layout_height&#x3D;&quot;wrap_content&quot;        android:layout_gravity&#x3D;&quot;center_horizontal&quot;&#x2F;&gt;    &lt;TextView        android:id&#x3D;&quot;@+id&#x2F;fruit_name&quot;        android:layout_width&#x3D;&quot;wrap_content&quot;        android:layout_height&#x3D;&quot;wrap_content&quot;        android:layout_gravity&#x3D;&quot;center_horizontal&quot;        android:layout_marginTop&#x3D;&quot;10dp&quot; &#x2F;&gt;&lt;&#x2F;LinearLayout&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ImageView和TextView都设置为了在布局中水平居中，使用layout_marginTop属性让文字和图片之间保持一些距离。</p><p>接下来修改MainActivity中的代码，只添加了一行代码</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;设置布局的排列方向，默认是纵向的，LinearLayoutManager.HORIZONTAL表示让布局横行排列layoutManager.setOrientation(LinearLayoutManager.HORIZONTAL);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304120229289.png"></p><p>ListView的布局排列是由自身去管理，而RecyclerView则交给了LayoutManager</p><h4 id="瀑布流——GridLayoutManager"><a href="#瀑布流——GridLayoutManager" class="headerlink" title="瀑布流——GridLayoutManager"></a>瀑布流——GridLayoutManager</h4><p>首先修改fruit_item.xml中的代码</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name">瀑布流布局的宽度应该是由布局的列数来自动适配</span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>    <span class="token attr-name">子项之间互相留一点间距</span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5dp<span class="token punctuation">"</span></span>     <span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageView</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/fruit_image<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center_horizontal<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/fruit_name<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name">左对齐</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_marginTop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改MainActivity</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>recyclerviewlist</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">NonNull</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>recyclerview<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">LinearLayoutManager</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>recyclerview<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">RecyclerView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>recyclerview<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">StaggeredGridLayoutManager</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">LayoutInflater</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">ViewGroup</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ImageView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">TextView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span><span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Fruit</span><span class="token punctuation">></span></span> fruitList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initFruits</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Fruit</span> apple <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token function">getRandomLengthName</span><span class="token punctuation">(</span><span class="token string">"Apple"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>apple_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>apple<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Fruit</span> banana <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token function">getRandomLengthName</span><span class="token punctuation">(</span><span class="token string">"Banana"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>banana_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>banana<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Fruit</span> orange <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token function">getRandomLengthName</span><span class="token punctuation">(</span><span class="token string">"Orange"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>orange_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>orange<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Fruit</span> watermelon <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token function">getRandomLengthName</span><span class="token punctuation">(</span><span class="token string">"Watermelon"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>watermelon_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>watermelon<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Fruit</span> pear <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token function">getRandomLengthName</span><span class="token punctuation">(</span><span class="token string">"Pear"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>pear_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>pear<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Fruit</span> grape <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token function">getRandomLengthName</span><span class="token punctuation">(</span><span class="token string">"Grape"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>grape_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>grape<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Fruit</span> pineapple <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token function">getRandomLengthName</span><span class="token punctuation">(</span><span class="token string">"Pineapple"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>pineapple_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>pineapple<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Fruit</span> strawberry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token function">getRandomLengthName</span><span class="token punctuation">(</span><span class="token string">"Strawberry"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>strawberry_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>strawberry<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Fruit</span> cherry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token function">getRandomLengthName</span><span class="token punctuation">(</span><span class="token string">"Cherry"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>cherry_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cherry<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Fruit</span> mango <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fruit</span><span class="token punctuation">(</span><span class="token function">getRandomLengthName</span><span class="token punctuation">(</span><span class="token string">"Mango"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>mango_pic<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mango<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">getRandomLengthName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Random</span> random <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> length <span class="token operator">=</span> random<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token class-name">StringBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> builder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//初始化所有的水果数据</span>        <span class="token function">initFruits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//获取recycler_view实例</span>        <span class="token class-name">RecyclerView</span> recyclerView<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">RecyclerView</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>recycler_view<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//创建一个StaggeredGridLayoutManager 实例，第一个参数用于指定布局的列数，传入3表示布局为3列，第二个参数用于指定布局的排列方向</span>        <span class="token class-name">StaggeredGridLayoutManager</span> layoutManager<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">StaggeredGridLayoutManager</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token class-name">StaggeredGridLayoutManager</span><span class="token punctuation">.</span><span class="token constant">VERTICAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        recyclerView<span class="token punctuation">.</span><span class="token function">setLayoutManager</span><span class="token punctuation">(</span>layoutManager<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//创建FruitAdapter的实例，传入水果数据</span>        <span class="token class-name">FruitAdapter</span> adapter<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FruitAdapter</span><span class="token punctuation">(</span>fruitList<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//适配器设置</span>        recyclerView<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>adapter<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>瀑布流效果只有各个子项高度不一样时才能看出明显的效果，所以我们通过getRandomLengthName方法，将传入的字符串重复随机遍</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304121116661.png"></p><h3 id="6-3、RecyclerView的点击事件"><a href="#6-3、RecyclerView的点击事件" class="headerlink" title="6.3、RecyclerView的点击事件"></a>6.3、RecyclerView的点击事件</h3><p>与ListView不同的是，RecyclerView没有提供类似于setOnItemClickListener这样的注册监听器方法，而是需要我们自己给子项具体的View去注册点击事件</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>recyclerviewlist</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">LayoutInflater</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">ViewGroup</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ImageView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">TextView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">NonNull</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>recyclerview<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">RecyclerView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FruitAdapter</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>Adapter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FruitAdapter<span class="token punctuation">.</span>ViewHolder</span><span class="token punctuation">></span></span><span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Fruit</span><span class="token punctuation">></span></span> mFruitList<span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ViewHolder</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>ViewHolder</span><span class="token punctuation">&#123;</span>        <span class="token class-name">ImageView</span> fruitImage<span class="token punctuation">;</span>        <span class="token class-name">TextView</span> fruitName<span class="token punctuation">;</span>        <span class="token class-name">View</span> fruitView<span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token class-name">ViewHolder</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">super</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitView <span class="token operator">=</span> view<span class="token punctuation">;</span>            fruitImage <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">ImageView</span><span class="token punctuation">)</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>fruit_image<span class="token punctuation">)</span><span class="token punctuation">;</span>            fruitName <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">TextView</span><span class="token punctuation">)</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>fruit_name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">FruitAdapter</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Fruit</span><span class="token punctuation">></span></span> fruitList<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        mFruitList<span class="token operator">=</span>fruitList<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">ViewHolder</span> <span class="token function">onCreateViewHolder</span><span class="token punctuation">(</span><span class="token class-name">ViewGroup</span> parent<span class="token punctuation">,</span> <span class="token keyword">int</span> viewType<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">View</span> view <span class="token operator">=</span> <span class="token class-name">LayoutInflater</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>fruit_item<span class="token punctuation">,</span>parent<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">final</span> <span class="token class-name">ViewHolder</span> holder<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ViewHolder</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>        holder<span class="token punctuation">.</span>fruitView<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">int</span> position <span class="token operator">=</span>holder<span class="token punctuation">.</span><span class="token function">getAdapterPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Fruit</span> fruit<span class="token operator">=</span>mFruitList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"you clicked view"</span><span class="token operator">+</span>fruit<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        holder<span class="token punctuation">.</span>fruitImage<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">int</span> position <span class="token operator">=</span>holder<span class="token punctuation">.</span><span class="token function">getAdapterPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Fruit</span> fruit<span class="token operator">=</span>mFruitList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"you clicked image"</span><span class="token operator">+</span>fruit<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> holder<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onBindViewHolder</span><span class="token punctuation">(</span><span class="token class-name">ViewHolder</span> holder<span class="token punctuation">,</span><span class="token keyword">int</span> position<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Fruit</span> fruit<span class="token operator">=</span>mFruitList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>        holder<span class="token punctuation">.</span>fruitImage<span class="token punctuation">.</span><span class="token function">setImageResource</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">getImageId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        holder<span class="token punctuation">.</span>fruitName<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token annotation punctuation">@Override</span>   <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getItemCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> mFruitList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304121136931.png"></p><h2 id="7、实践——聊天界面"><a href="#7、实践——聊天界面" class="headerlink" title="7、实践——聊天界面"></a>7、实践——聊天界面</h2><h3 id="7-1、制作Nine-Patch图片"><a href="#7-1、制作Nine-Patch图片" class="headerlink" title="7.1、制作Nine-Patch图片"></a>7.1、制作Nine-Patch图片</h3><p>是一种被特殊处理的png图片，能够指定哪些区域可以被拉伸，哪些区域不可以。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304121237223.png"></p><p>左边和上面的黑线控制拉伸，右边和下面的黑线控制内容显示区域</p><h3 id="7-2、编写聊天界面"><a href="#7-2、编写聊天界面" class="headerlink" title="7.2、编写聊天界面"></a>7.2、编写聊天界面</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#d8e0e8<span class="token punctuation">"</span></span>    <span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.recyclerview.widget.RecyclerView</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/recycler_view<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>        <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>horizontal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EditText</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/input_text<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>hint</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Type something here<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>maxLines</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/send<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Send<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们在主界面中放置了一个RecyclerView用于显示聊天的消息内容，又放置了一个EditText用于输入消息，还放置了一个Button用于发送消息。</p><p>定义一个消息类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>uibestpractice</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Msg</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span>  <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">TYPE_RECEIVED</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//这是一条收到的消息</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">TYPE_SENT</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//这是一条发出的消息</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span><span class="token comment">//   表示消息的内容</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> type<span class="token punctuation">;</span><span class="token comment">//消息的类型</span>    <span class="token keyword">public</span> <span class="token class-name">Msg</span><span class="token punctuation">(</span><span class="token class-name">String</span> content<span class="token punctuation">,</span><span class="token keyword">int</span> type<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>content<span class="token operator">=</span>content<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span>type<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> content<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> type<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编写子项布局</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#d8e0e8<span class="token punctuation">"</span></span>    <span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.recyclerview.widget.RecyclerView</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/recycler_view<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>        <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>horizontal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EditText</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/input_text<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>hint</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Type something here<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>maxLines</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/send<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Send<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建适配器</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>uibestpractice</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">LayoutInflater</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">ViewGroup</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">LinearLayout</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">TextView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">NonNull</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>recyclerview<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">RecyclerView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MsgAdapter</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>Adapter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MsgAdapter<span class="token punctuation">.</span>ViewHolder</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Msg</span><span class="token punctuation">></span></span> mMsgList<span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ViewHolder</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>ViewHolder</span><span class="token punctuation">&#123;</span>        <span class="token class-name">LinearLayout</span> leftLayout<span class="token punctuation">;</span>        <span class="token class-name">LinearLayout</span> rightLayout<span class="token punctuation">;</span>        <span class="token class-name">TextView</span> leftMsg<span class="token punctuation">;</span>        <span class="token class-name">TextView</span> rightMsg<span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token class-name">ViewHolder</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">super</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>            leftLayout<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">LinearLayout</span><span class="token punctuation">)</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>left_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>            rightLayout<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">LinearLayout</span><span class="token punctuation">)</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>right_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>            leftMsg<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">TextView</span><span class="token punctuation">)</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>left_msg<span class="token punctuation">)</span><span class="token punctuation">;</span>            rightMsg<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">TextView</span><span class="token punctuation">)</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>right_msg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">MsgAdapter</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Msg</span><span class="token punctuation">></span></span> msgList<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        mMsgList<span class="token operator">=</span>msgList<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">ViewHolder</span> <span class="token function">onCreateViewHolder</span><span class="token punctuation">(</span><span class="token class-name">ViewGroup</span> parent<span class="token punctuation">,</span><span class="token keyword">int</span> viewType<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">View</span> view <span class="token operator">=</span> <span class="token class-name">LayoutInflater</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>msg_item<span class="token punctuation">,</span>parent<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ViewHolder</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onBindViewHolder</span><span class="token punctuation">(</span><span class="token class-name">ViewHolder</span> holder<span class="token punctuation">,</span><span class="token keyword">int</span> position<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Msg</span> msg<span class="token operator">=</span>mMsgList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token class-name">Msg</span><span class="token punctuation">.</span><span class="token constant">TYPE_RECEIVED</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            holder<span class="token punctuation">.</span>leftLayout<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span><span class="token class-name">View</span><span class="token punctuation">.</span><span class="token constant">VISIBLE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            holder<span class="token punctuation">.</span>rightLayout<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span><span class="token class-name">View</span><span class="token punctuation">.</span><span class="token constant">GONE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            holder<span class="token punctuation">.</span>leftMsg<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token class-name">Msg</span><span class="token punctuation">.</span><span class="token constant">TYPE_SENT</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            holder<span class="token punctuation">.</span>rightLayout<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span><span class="token class-name">View</span><span class="token punctuation">.</span><span class="token constant">VISIBLE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            holder<span class="token punctuation">.</span>leftLayout<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span><span class="token class-name">View</span><span class="token punctuation">.</span><span class="token constant">GONE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            holder<span class="token punctuation">.</span>rightMsg<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getItemCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> mMsgList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个和之前的代码基本一样，只不过在onBindViewHolder中加了对消息类型的判断，如果这条消息是收到的，则显示左边的消息布局，如果这条消息是发出的，则显示右边的消息布局。</p><p>MainActivity</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>uibestpractice</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>recyclerview<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">LinearLayoutManager</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>recyclerview<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">RecyclerView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">EditText</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Msg</span><span class="token punctuation">></span></span> msgList <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">EditText</span> inputText<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Button</span> send<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">RecyclerView</span> msgRecyclerView<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">MsgAdapter</span> adapter<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">initMsgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 初始化消息数据</span>        inputText <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">EditText</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>input_text<span class="token punctuation">)</span><span class="token punctuation">;</span>        send <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>send<span class="token punctuation">)</span><span class="token punctuation">;</span>        msgRecyclerView <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">RecyclerView</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>recycler_view<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">LinearLayoutManager</span> layoutManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinearLayoutManager</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        msgRecyclerView<span class="token punctuation">.</span><span class="token function">setLayoutManager</span><span class="token punctuation">(</span>layoutManager<span class="token punctuation">)</span><span class="token punctuation">;</span>        adapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MsgAdapter</span><span class="token punctuation">(</span>msgList<span class="token punctuation">)</span><span class="token punctuation">;</span>        msgRecyclerView<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>adapter<span class="token punctuation">)</span><span class="token punctuation">;</span>        send<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">String</span> content <span class="token operator">=</span> inputText<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">""</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Msg</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Msg</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token class-name">Msg</span><span class="token punctuation">.</span><span class="token constant">TYPE_SENT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    msgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment">//当有新消息时，刷新RecyclerView中的显示</span>                    adapter<span class="token punctuation">.</span><span class="token function">notifyItemInserted</span><span class="token punctuation">(</span>msgList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    msgRecyclerView<span class="token punctuation">.</span><span class="token function">scrollToPosition</span><span class="token punctuation">(</span>msgList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 将ListView定位到最后一行</span>                    inputText<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 清空输入框中的内容</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initMsgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Msg</span> msg1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Msg</span><span class="token punctuation">(</span><span class="token string">"Hello guy."</span><span class="token punctuation">,</span> <span class="token class-name">Msg</span><span class="token punctuation">.</span><span class="token constant">TYPE_RECEIVED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        msgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>msg1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Msg</span> msg2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Msg</span><span class="token punctuation">(</span><span class="token string">"Hello. Who is that?"</span><span class="token punctuation">,</span> <span class="token class-name">Msg</span><span class="token punctuation">.</span><span class="token constant">TYPE_SENT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        msgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>msg2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Msg</span> msg3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Msg</span><span class="token punctuation">(</span><span class="token string">"This is Tom. Nice talking to you. "</span><span class="token punctuation">,</span> <span class="token class-name">Msg</span><span class="token punctuation">.</span><span class="token constant">TYPE_RECEIVED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        msgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>msg3<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>![image-20230412155620355](&#x2F;Users&#x2F;whitebird&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230412155620355.png)</p>]]></content>
      
      
      <categories>
          
          <category> Android开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android开发学习笔记(4)——探究碎片</title>
      <link href="//post/the_first_code4.html"/>
      <url>//post/the_first_code4.html</url>
      
        <content type="html"><![CDATA[<h1 id="第四章——探究碎片"><a href="#第四章——探究碎片" class="headerlink" title="第四章——探究碎片"></a>第四章——探究碎片</h1><p>平板电脑和手机一样普及，但是二者最大的差别就是屏幕大小，对于同样一个界面，在手机上可能正常显示，但是在平板电脑上会被过分拉长，元素间空隙过大等，所以我们需要同时兼顾手机和平板的开发，这一章所说的碎片就可以让界面在平板上更好的展示。</p><h2 id="1、碎片是什么"><a href="#1、碎片是什么" class="headerlink" title="1、碎片是什么"></a>1、碎片是什么</h2><p>碎片（Fragment）是一种可以嵌入在活动当中的UI片段，它能让程序更加合理和充分地利用大屏幕的空间，因而在平板上应用得非常广泛。它和活动实很像，同样都能包含布局，同样都有自己的生命周期。我们甚至可以将碎片理解成一个迷你型的活动，虽然这个迷你型的活动有可能和普通的活动是一样大的。</p><p>想象我们正在开发一个新闻应用，其中一个界面使用RecyclerView展示了一组新闻的标题，当点击了其中一个标题时，就打开另一个界面显示新闻的详细内容。如果是在手机中设计，我们可以将新闻标题列表放在一个活动中，将新闻的详细内容放在另一个活动中</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304121857779.png"></p><p>可是如果在平板上也这么设计，那么新闻标题列表将会被拉长至填充满整个平板的屏幕，而新闻的标题一般都不会太长，这样将会导致界面上有大量的空白区域</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304121859879.png"></p><p>因此，更好的设计方案是将新闻标题列表界面和新闻详细内容界面分别放在两个碎片中，然后在同一个活动里引入这两个碎片，这样就可以将屏幕空间充分地利用起来了</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304121859549.png"></p><h2 id="2、碎片的使用方式"><a href="#2、碎片的使用方式" class="headerlink" title="2、碎片的使用方式"></a>2、碎片的使用方式</h2><h3 id="2-1、简单用法"><a href="#2-1、简单用法" class="headerlink" title="2.1、简单用法"></a>2.1、简单用法</h3><p>新建一个左侧碎片布局left_fragment.xml</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center_horizontal<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Button<span class="token punctuation">"</span></span>        <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只是放置了一个按钮，并让它水平居中</p><p>新建一个右侧碎片布局right_fragment.xml</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#00ff00<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center_horizontal<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20sp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>This is right fragment<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编写一下LeftFragment</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>fragmenttest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">LayoutInflater</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">ViewGroup</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>fragment<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">Fragment</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LeftFragment</span> <span class="token keyword">extends</span> <span class="token class-name">Fragment</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">View</span> <span class="token function">onCreateView</span><span class="token punctuation">(</span><span class="token class-name">LayoutInflater</span> inflater<span class="token punctuation">,</span> <span class="token class-name">ViewGroup</span> container<span class="token punctuation">,</span> <span class="token class-name">Bundle</span> saveInstanceState<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">View</span> view <span class="token operator">=</span>inflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>left_fragment<span class="token punctuation">,</span>container<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> view<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重写了onCreateView方法，在这个方法中通过LayoutInflater的inflate方法将left_fragment布局加载进来</p><p>同理编写RightFragment</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>fragmenttest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">LayoutInflater</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">ViewGroup</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>fragment<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">Fragment</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RightFragment</span> <span class="token keyword">extends</span> <span class="token class-name">Fragment</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">View</span> <span class="token function">onCreateView</span><span class="token punctuation">(</span><span class="token class-name">LayoutInflater</span> inflater<span class="token punctuation">,</span> <span class="token class-name">ViewGroup</span> container<span class="token punctuation">,</span> <span class="token class-name">Bundle</span> saveInstanceState<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">View</span> view <span class="token operator">=</span>inflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>right_fragment<span class="token punctuation">,</span>container<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> view<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改activity_main.xml</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>horizontal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fragment</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.fragmenttest.LeftFragment<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/left_fragment<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fragment</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/right_fragment<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.fragmenttest.RightFragment<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用 <fragment>标签在布局中添加碎片，通过android:name属性来显式指明要添加的碎片类名，主要要将类的包名也加上。</p><h3 id="2-2、动态加载碎片"><a href="#2-2、动态加载碎片" class="headerlink" title="2.2、动态加载碎片"></a>2.2、动态加载碎片</h3><p>新建一个xml</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#ffff00<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center_horizontal<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20sp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>This is another fragment<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重写onCreateView类</p><pre class="line-numbers language-javao" data-language="javao"><code class="language-javao">package com.example.fragmenttest;import android.os.Bundle;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import androidx.fragment.app.Fragment;public class AnotherRightFragment extends Fragment &#123;    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)&#123;        View view &#x3D;inflater.inflate(R.layout.another_right_fragment,container,false);        return view;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改activity_main.XML</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>horizontal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fragment</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.fragmenttest.LeftFragment<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/left_fragment<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FrameLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/right_layout<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FrameLayout</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们将右侧的碎片替换成了一个FrameLayout，这是android中最简单的布局，所有的控件默认都会摆放在布局的左上角。接下来，我们在代码中向FrameLayout里添加内容，从而实现动态添加碎片的功能。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>fragmenttest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">ActionBar</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>fragment<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">Fragment</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>fragment<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">FragmentManager</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>fragment<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">FragmentTransaction</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>preference<span class="token punctuation">.</span></span><span class="token class-name">PreferenceFragmentCompat</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SettingsActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span>  <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">replacefragment</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RightFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        button<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">switch</span> <span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button1<span class="token operator">:</span>                        <span class="token function">replacefragment</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AnotherRightFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">default</span><span class="token operator">:</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>      <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">replacefragment</span><span class="token punctuation">(</span><span class="token class-name">Fragment</span> fragment<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token comment">//获取FragmentManager，在活动中可以直接通过调用getSupportFragmentManager得到</span>        <span class="token class-name">FragmentManager</span> fragmentManager<span class="token operator">=</span><span class="token function">getSupportFragmentManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//开启一个事物，通过调用beginTransaction方法开启</span>        <span class="token class-name">FragmentTransaction</span> transaction<span class="token operator">=</span>fragmentManager<span class="token punctuation">.</span><span class="token function">beginTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//向容器内添加或替换碎片，一般用replace方法实现</span>        transaction<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>right_layout<span class="token punctuation">,</span>fragment<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//提交事务，调用commit方法完成</span>        transaction<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304131308530.png"></p><p>点击Button</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304131309428.png"></p><h3 id="2-3、在碎片中模拟返回栈"><a href="#2-3、在碎片中模拟返回栈" class="headerlink" title="2.3、在碎片中模拟返回栈"></a>2.3、在碎片中模拟返回栈</h3><p>上面的实例，我们按back键后会直接退出程序，我们可以模仿类似返回栈的效果，按下back键后可以回到上一个碎片，实现方法如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">replacefragment</span><span class="token punctuation">(</span><span class="token class-name">Fragment</span> fragment<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">FragmentManager</span> fragmentManager<span class="token operator">=</span><span class="token function">getSupportFragmentManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">FragmentTransaction</span> transaction<span class="token operator">=</span>fragmentManager<span class="token punctuation">.</span><span class="token function">beginTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    transaction<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>right_layout<span class="token punctuation">,</span>fragment<span class="token punctuation">)</span><span class="token punctuation">;</span>    transaction<span class="token punctuation">.</span><span class="token function">addToBackStack</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    transaction<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只需要修改一小步就行了，transaction.addToBackStack(null)，用于将一个事务添加到返回栈。</p><h3 id="2-4、碎片与活动之间进行通信"><a href="#2-4、碎片与活动之间进行通信" class="headerlink" title="2.4、碎片与活动之间进行通信"></a>2.4、碎片与活动之间进行通信</h3><p>虽然碎片都是嵌入在活动中显示的，可是实际上它们的关系并没有那么亲密。你可以看出，碎片和活动都是各自存在于一个独立的类当中的，它们之间并没有那么明显的方式来直接进行通信。如果想要在活动中调用碎片里的方法，或者在碎片中调用活动里的方法，应该如何实现呢？</p><p>为了方便碎片和活动之间进行通信，FragmentManager提供了一个类似于findViewById() 的方法，专门用于从布局文件中获取碎片的实例：</p><pre class="line-numbers language-none"><code class="language-none">RightFragment rightFragment &#x3D; (RightFragment) getSupportFragmentManager().findFragmentById(R.id.right_fragment);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>调用FragmentManager的findFragmentById() 方法，可以在活动中得到相应碎片的实例，然后就能轻松地调用碎片里的方法了。对于在活动中调用碎片里的方法其实就更简单了，在每个碎片中都可以通过调用getActivity() 方法来得到和当前碎片相关联的活动实例，代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">MainActivity</span> activity <span class="token operator">=</span>  <span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>有了活动实例之后，在碎片中调用活动里的方法就变得轻而易举了。另外当碎片中需要使用Context 对象时，也可以使用getActivity() 方法，因为获取到的活动本身就是一个Context 对象。</p><h2 id="3、碎片的生命周期"><a href="#3、碎片的生命周期" class="headerlink" title="3、碎片的生命周期"></a>3、碎片的生命周期</h2><p>和活动一样，碎片也有自己的生命周期，并且它和活动的生命周期很像。</p><h3 id="3-1、碎片的状态和回调"><a href="#3-1、碎片的状态和回调" class="headerlink" title="3.1、碎片的状态和回调"></a>3.1、碎片的状态和回调</h3><h4 id="a、运行状态"><a href="#a、运行状态" class="headerlink" title="a、运行状态"></a>a、运行状态</h4><p> 当一个碎片是可见的，并且它所关联的活动正处于运行状态时，该碎片也处于运行状态。</p><h4 id="b、暂停状态"><a href="#b、暂停状态" class="headerlink" title="b、暂停状态"></a>b、暂停状态</h4><p> 当一个活动进入暂停状态时（由于另一个未占满屏幕的活动被添加到了栈顶），与它相关联的可见碎片就会进入到暂停状态。</p><h4 id="c、停止状态"><a href="#c、停止状态" class="headerlink" title="c、停止状态"></a>c、停止状态</h4><p> 当一个活动进入停止状态时，与它相关联的碎片就会进入到停止状态，或者通过调用FragmentTransaction的remove() 、replace() 方法将碎片从活动中移除，但如果在事务提交之前调用addToBackStack() 方法，这时的碎片也会进入到停止状态。总的来说，进入停止状态的碎片对用户来说是完全不可见的，有可能会被系统回收。</p><h4 id="d、销毁状态"><a href="#d、销毁状态" class="headerlink" title="d、销毁状态"></a>d、销毁状态</h4><p> 碎片总是依附于活动而存在的，因此当活动被销毁时，与它相关联的碎片就会进入到销毁状态。或者通过调用FragmentTransaction的remove() 、replace() 方法将碎片从活动中移除，但在事务提交之前并没有调用addToBackStack() 方法，这时的碎片也会进入到销毁状态。</p><p>Fragment 类中提供了一系列的回调方法，以覆盖碎片生命周期的每个环节。</p><pre class="line-numbers language-none"><code class="language-none">onAttach() 。当碎片和活动建立关联的时候调用。onCreateView() 。为碎片创建视图（加载布局）时调用。onActivityCreated() 。确保与碎片相关联的活动一定已经创建完毕的时候调用。onDestroyView() 。当与碎片关联的视图被移除的时候调用。onDetach() 。当碎片和活动解除关联的时候调用。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/aaasxx.png"></p><h3 id="3-2、体验碎片的生命周期"><a href="#3-2、体验碎片的生命周期" class="headerlink" title="3.2、体验碎片的生命周期"></a>3.2、体验碎片的生命周期</h3><p>在RightFrigment中修改代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>fragmenttest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Log</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">LayoutInflater</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">ViewGroup</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>fragment<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">Fragment</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RightFragment</span> <span class="token keyword">extends</span> <span class="token class-name">Fragment</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">TAG</span><span class="token operator">=</span><span class="token string">"RightFragment"</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">View</span> <span class="token function">onCreateView</span><span class="token punctuation">(</span><span class="token class-name">LayoutInflater</span> inflater<span class="token punctuation">,</span> <span class="token class-name">ViewGroup</span> container<span class="token punctuation">,</span> <span class="token class-name">Bundle</span> saveInstanceState<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span><span class="token string">"onCreateView"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">View</span> view <span class="token operator">=</span>inflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>right_fragment<span class="token punctuation">,</span>container<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> view<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onAttach</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onAttach</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span><span class="token string">"onAttach"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span><span class="token string">"onCreate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onActivityCreated</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onActivityCreated</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span><span class="token string">"onActivityCreaeted"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span><span class="token string">"onStart"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span><span class="token string">"onResume"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span><span class="token string">"onPause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onStop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onStop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span><span class="token string">"onStop"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span><span class="token string">"onDestroy"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onDestroyView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroyView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span><span class="token string">"onDestroyView"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onDetach</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDetach</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span><span class="token string">"onDetach"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们在RightFragment中的每一个回调方法里都加入了打印日志的代码，然后重新运行程序，这时观察logcat中的打印信息，如图所示。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304140156823.png"></p><p>可以看到，当RightFragment第一次被加载到屏幕上时，会依次执行onAttach() 、onCreate() 、onCreateView() 、onActivityCreated() 、onStart() 和onResume() 方法。然后点击LeftFragment中的按钮，此时打印信息如图所示</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304140157057.png"></p><p>由于AnotherRightFragment替换了RightFragment，此时的RightFragment进入了停止状态，因此onPause() 、onStop() 和onDestroyView() 方法会得到执行。当然如果在替换的时候没有调用addToBackStack() 方法，此时的RightFragment就会进入销毁状态，onDestroy() 和onDetach() 方法就会得到执行。<br>接着按下Back键，RightFragment会重新回到屏幕</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304140158600.png"></p><p>由于RightFragment重新回到了运行状态，因此onCreateView() 、onActivityCreated() 、onStart() 和onResume() 方法会得到执行。注意此时onCreate() 方法并不会执行，因为我们借助了addToBackStack() 方法使得RightFragment并没有被销毁。<br>现在再次按下Back键</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304140159825.png"></p><h2 id="4、动态加载布局的技巧"><a href="#4、动态加载布局的技巧" class="headerlink" title="4、动态加载布局的技巧"></a>4、动态加载布局的技巧</h2><p>虽然动态添加碎片的功能很强大，可以解决很多实际开发中的问题，但是它毕竟只是在一个布局文件中进行一些添加和替换操作。如果程序能够根据设备的分辨率或屏幕大小在运行时来决定加载哪个布局，那我们可发挥的空间就更多了。因此本节我们就来探讨一下Android中动态加载布局的技巧。</p><h3 id="4-1、使用限定符"><a href="#4-1、使用限定符" class="headerlink" title="4.1、使用限定符"></a>4.1、使用限定符</h3><p>现在很多的平板应用都采用的是双页模式（程序会在左侧的面板上显示一个包含子项的列表，在右侧的面板上显示内容），因为平板电脑的屏幕足够大，完全可以同时显示下两页的内容，但手机的屏幕一次就只能显示一页的内容，因此两个页面需要分开显示。</p><p>那么怎样才能在运行时判断程序应该是使用双页模式还是单页模式呢？这就需要借助限定符（Qualifiers）来实现了。下面我们通过一个例子来学习一下它的用法，修改FragmentTest项目中的activity_main.xml文件，代码如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>horizontal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fragment</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.fragmenttest.LeftFragment<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/left_fragment<span class="token punctuation">"</span></span>        <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将多余的代码都删掉，只留下一个左侧碎片，并让它充满整个父布局。接着在res目录下新建layout-large文件夹，在这个文件夹下新建一个布局，也叫作activity_main.xml，代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token class-name">LinearLayout</span> xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span>    android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>    android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span>    android<span class="token operator">:</span>orientation<span class="token operator">=</span><span class="token string">"horizontal"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>fragment        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"0dp"</span>        android<span class="token operator">:</span>layout_weight<span class="token operator">=</span><span class="token string">"1"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span>        android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"com.example.fragmenttest.LeftFragment"</span>        android<span class="token operator">:</span>id <span class="token operator">=</span><span class="token string">"@+id/left_fragment"</span>        <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>fragment        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"0dp"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span>        android<span class="token operator">:</span>layout_weight<span class="token operator">=</span><span class="token string">"3"</span>        android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"com.example.fragmenttest.RightFragment"</span>        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/right_fragment"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token class-name">LinearLayout</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，layout&#x2F;activity_main布局只包含了一个碎片，即单页模式，而layout-large&#x2F;activity_main布局包含了两个碎片，即双页模式。其中large就是一个限定符，那些屏幕被认为是large的设备就会自动加载layout-large文件夹下的布局，而小屏幕的设备则还是会加载layout文件夹下的布局。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304141111597.png"></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304141113587.png"></p><p>这样我们就实现了在程序运行时动态加载布局的功能。Android中一些常见的限定符可以参考下表。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304141114446.png"></p><h3 id="4-2、使用最小宽度限定符"><a href="#4-2、使用最小宽度限定符" class="headerlink" title="4.2、使用最小宽度限定符"></a>4.2、使用最小宽度限定符</h3><p>使用large限定符成功解决了单页双页的判断问题，不过很快又有一个新的问题出现了，large到底是指多大呢？有的时候我们希望可以更加灵活地为不同设备加载布局，不管它们是不是被系统认定为large，这时就可以使用最小宽度限定符（Smallest-width Qualifier）了。</p><p>最小宽度限定符允许我们对屏幕的宽度指定一个最小值（以dp为单位），然后以这个最小值为临界点，屏幕宽度大于这个值的设备就加载一个布局，屏幕宽度小于这个值的设备就加载另一个布局。在res目录下新建layout-sw600dp文件夹，然后在这个文件夹下新建activity_main.xml布局，代码如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>horizontal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fragment</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.fragmenttest.LeftFragment<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/left_fragment<span class="token punctuation">"</span></span>        <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fragment</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.fragmenttest.RightFragment<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/right_fragment<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这就意味着，当程序运行在屏幕宽度大于等于600dp的设备上时，会加载layout-sw600dp&#x2F;activity_main布局，当程序运行在屏幕宽度小于600dp的设备上时，则仍然加载默认的layout&#x2F;activity_main布局。</p><h2 id="5、碎片的最佳实践——一个简易版的新闻应用"><a href="#5、碎片的最佳实践——一个简易版的新闻应用" class="headerlink" title="5、碎片的最佳实践——一个简易版的新闻应用"></a>5、碎片的最佳实践——一个简易版的新闻应用</h2><p>前面有提到过，碎片很多时候都是在平板开发当中使用的，主要是为了解决屏幕空间不能充分利用的问题。那是不是就表明，我们开发的程序都需要提供一个手机版和一个Pad版呢？确实有不少公司都是这么做的，但是这样会浪费很多的人力物力。因为维护两个版本的代码成本很高，每当增加什么新功能时，需要在两份代码里各写一遍，每当发现一个bug时，需要在两份代码里各修改一次。因此今天我们最佳实践的内容就是，如何编写同时兼容手机和平板的应用程序。</p><p>现在就将运用本章中所学的知识来编写一个简易版的新闻应用，并且要求它是可以同时兼容手机和平板的:</p><p>新建好一个FragmentBestPractice项目，并且会使用到RecyclerView,先添加依赖</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304141135910.png"></p><p>设计一个新闻实体类News</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>fragmentbestpractice</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">News</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> title<span class="token punctuation">;</span><span class="token comment">//新闻标题</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span><span class="token comment">//新闻内容</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> title<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token class-name">String</span> title<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>title <span class="token operator">=</span> title<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> content<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setContent</span><span class="token punctuation">(</span><span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>content <span class="token operator">=</span> content<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>新建布局文件news_content_frag.xml，用于作为新闻内容的布局：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RelativeLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/visibility_layout<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>visibility</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>invisible<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/news_title<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>padding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20sp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#000<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/news_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>padding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>15dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_alignParentLeft</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#000<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RelativeLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>新闻内容的布局主要可以分为两个部分，头部部分显示新闻标题，正文部分显示新闻内容，中间使用一条细线分隔开。这里的细线是利用View来实现的，将View的宽或高设置为1dp，再通过background属性给细线设置一下颜色就可以了。这里我们把细线设置成黑色。</p><p>然后再新建一个NewsContentFragment类，继承自Fragment，代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>fragmentbestpractice</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">LayoutInflater</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">ViewGroup</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">TextView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">NonNull</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Nullable</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>fragment<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">Fragment</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NewsContentFragment</span> <span class="token keyword">extends</span> <span class="token class-name">Fragment</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">View</span> view<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Nullable</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">View</span> <span class="token function">onCreateView</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">LayoutInflater</span> inflater<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">ViewGroup</span> container<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       view <span class="token operator">=</span>inflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>news_content_frag<span class="token punctuation">,</span>container<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">return</span> view<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token class-name">String</span> newsTitle<span class="token punctuation">,</span><span class="token class-name">String</span> newsContent<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//创建了一个View对象，并通过调用当前视图对象(view)的findViewById方法来获取ID为"visibility_layout"的视图元素，这个视图元素可能是一个布局或者容器。</span>        <span class="token class-name">View</span> visibiltyLayout<span class="token operator">=</span>view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>visibility_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//将visibiltyLayout的可见性设置为可见状态(View.VISIBLE)。这可能会使得之前不可见的视图元素在屏幕上出现</span>        visibiltyLayout<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span><span class="token class-name">View</span><span class="token punctuation">.</span><span class="token constant">VISIBLE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//创建两个TextView对象，它们都是从当前视图对象(view)中通过调用findViewById方法获取到的。</span>        <span class="token class-name">TextView</span> newsTitleText <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TextView</span><span class="token punctuation">)</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>news_title<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">TextView</span> newsContentText <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">TextView</span><span class="token punctuation">)</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>news_content<span class="token punctuation">)</span><span class="token punctuation">;</span>        newsTitleText<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>newsTitle<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//刷新新闻标题</span>        newsContentText<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>newsContent<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//刷新新闻内容</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样我们就把新闻内容的碎片和布局都创建好了，但是它们都是在双页模式中使用的，如果想在单页模式中使用的话，还需要再创建个活动。右键com.example.fragmentbestpractice包→New→Activity→EmptyActivity，新建一个NewsContentActivity，并将布局名指定成news_content，然后修改news_content.xml中的代码，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fragment</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/news_content_fragment<span class="token punctuation">"</span></span>      <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.fragmentbestpractice.NewsContentFragment<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里我们充分发挥了代码的复用性，直接在布局中引入了NewsContentFragment，这样也就相当于把news_content_frag布局的内容自动加了进来。然后修改NewsContentActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>fragmentbestpractice</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Intent</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NewsContentActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">actionStart</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">String</span> newstitle<span class="token punctuation">,</span> <span class="token class-name">String</span> newsContent<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Intent</span> intent<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span><span class="token class-name">NewsContentActivity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"news_title"</span><span class="token punctuation">,</span>newstitle<span class="token punctuation">)</span><span class="token punctuation">;</span>        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"news_content"</span><span class="token punctuation">,</span>newsContent<span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>news_content<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> newsTitle<span class="token operator">=</span><span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStringExtra</span><span class="token punctuation">(</span><span class="token string">"news_title"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> newsContent<span class="token operator">=</span><span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStringExtra</span><span class="token punctuation">(</span><span class="token string">"news_content"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">NewsContentFragment</span> newsContentFragment<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">NewsContentFragment</span><span class="token punctuation">)</span> <span class="token function">getSupportFragmentManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findFragmentById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>news_content_fragment<span class="token punctuation">)</span><span class="token punctuation">;</span>        newsContentFragment<span class="token punctuation">.</span><span class="token function">refresh</span><span class="token punctuation">(</span>newsTitle<span class="token punctuation">,</span>newsContent<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来还需要再创建一个用于显示新闻列表的布局，新建news_title_frag.xml，代码如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.recyclerview.widget.RecyclerView</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/news_title_recycler_view<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个布局里面只有一个用于显示新闻列表的RecyclerView。既然要用到RecyclerView，那么就必定少不了子项的布局。新建news_item.xml作为RecyclerView子项的布局，代码如下所示</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/news_title<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>ellipsize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>end<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>maxLines</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>paddingLeft</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>paddingTop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>15dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>paddingRight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>paddingBottom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>15dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>子项的布局也非常简单，只有一个TextView。</p><ul><li>android:padding表示给控件的周围加上补白，这样不至于让文本内容会紧靠在边缘上。</li><li>android:maxLines设置为1表示让这个TextView只能单行显示。</li><li>android:ellipsize用于设定当文本内容超出控件宽度时，文本的缩略方式，end表示在尾部进行缩略。</li></ul><p>既然新闻列表和子项的布局都已经创建好了，那么接下来我们就需要一个用于展示新闻列表的地方。这里新建NewsTitleFragment作为展示新闻列表的碎片，代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>fragmentbestpractice</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">LayoutInflater</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">ViewGroup</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">NonNull</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Nullable</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>fragment<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">Fragment</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NewsTitleFragment</span> <span class="token keyword">extends</span> <span class="token class-name">Fragment</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span> isTwoPane<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Nullable</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">View</span> <span class="token function">onCreateView</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">LayoutInflater</span> inflater<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">ViewGroup</span> container<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token class-name">View</span> view <span class="token operator">=</span>inflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>news_title_frag<span class="token punctuation">,</span>container<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">return</span> view<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onActivityCreated</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onActivityCreated</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>news_content_fragment<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            isTwoPane<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            isTwoPane<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意看一下onActivityCreated()，这个方法通过在活动中能否找到id为news_content_layout的View来判断当前是双页模式还是单页模式，因此我们需要让这个id为news_content_layout的View只在双页模式中才会出现。那么怎样才能实现这个功能呢？其实并不复杂，只需要借助我们刚刚学过的限定符就可以了。</p><p>首先修改activity_main.xml中的代码，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FrameLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/news_title_layout<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fragment</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.fragmentbestpractice.NewsTitleFragment<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/news_title_fragment<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FrameLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述代码表示，在单页模式下，只会加载一个新闻标题的碎片。然后新建layout-sw600dp文件夹，在这个文件夹下再新建一个activity_main.xml文件，代码如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>horizontal<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fragment</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.fragmentbestpractice.NewsTitleFragment<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/news_title_fragment<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FrameLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/news_content_layout<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fragment</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.fragmentbestpractice.NewsContentFragment<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/news_content_fragment<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FrameLayout</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看出，在双页模式下我们同时引入了两个碎片，并将新闻内容的碎片放在了一个FrameLayout布局下，而这个布局的id正是news_content_layout。因此，能够找到这个id的时候就是双页模式，否则就是单面模式。</p><p>现在还剩下至关重要的一点，就是在NewsTitleFragment中通过RecyclerView将新闻列表展示出来。在NewsTitleFragment中新建一个内部类NewsAdapter来作为RecyclerView的适配器:</p><pre class="line-numbers language-none"><code class="language-none">package com.example.fragmentbestpractice;import android.os.Bundle;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.fragment.app.Fragment;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import java.util.ArrayList;import java.util.List;import java.util.Random;public class NewsTitleFragment extends Fragment &#123;    private boolean isTwoPane;      @Nullable    @Override    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) &#123;        View view &#x3D; inflater.inflate(R.layout.news_title_frag,container,false);        RecyclerView newsTitleRecyclerView &#x3D; (RecyclerView) view.findViewById(R.id.news_title_recycler_view);        LinearLayoutManager layoutManager &#x3D; new LinearLayoutManager(getActivity());        newsTitleRecyclerView.setLayoutManager(layoutManager);        NewsAdapter adapter &#x3D; new NewsAdapter(getNews());        newsTitleRecyclerView.setAdapter(adapter);        return view;    &#125;    private List&lt;News&gt; getNews()&#123;        List&lt;News&gt; newsList &#x3D; new ArrayList&lt;&gt;();        for (int i &#x3D; 0; i &lt;&#x3D;50 ; i++) &#123;            News news &#x3D; new News();            news.setTitle(&quot;This is news title &quot; + i);            news.setContent(getRandomLengthContent(&quot;News Content&quot; + i + &quot;.&quot;));            newsList.add(news);        &#125;        return newsList;    &#125;    private String getRandomLengthContent(String content)&#123;        Random random &#x3D; new Random();        int length &#x3D; random.nextInt(20) + 1;        StringBuilder builder &#x3D; new StringBuilder();        for (int i &#x3D; 0; i &lt; length; i++) &#123;            builder.append(content);        &#125;        return builder.toString();    &#125;    @Override    public void onActivityCreated(@Nullable Bundle savedInstanceState) &#123;        super.onActivityCreated(savedInstanceState);        if (getActivity().findViewById(R.id.news_content_layout)!&#x3D; null)&#123;            isTwoPane &#x3D; true;&#x2F;&#x2F;可以找到news_content_layout布局时，为双页模式        &#125;else &#123;            isTwoPane &#x3D; false;&#x2F;&#x2F;找不到news_content_layout布局时，为单页模式        &#125;    &#125;    class NewsAdapter extends RecyclerView.Adapter&lt;NewsAdapter.ViewHolder&gt;&#123;        private List&lt;News&gt; mNewsList;        @NonNull        @Override        public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) &#123;            View view &#x3D; LayoutInflater.from(parent.getContext()).inflate(R.layout.news_item,parent,false);            final ViewHolder holder &#x3D; new ViewHolder(view);            view.setOnClickListener(new View.OnClickListener() &#123;                @Override                public void onClick(View view) &#123;                    News news &#x3D; mNewsList.get(holder.getAdapterPosition());                    if(isTwoPane)&#123;                        &#x2F;&#x2F;如果时双页模式，刷新NewsContentFragment中的内容                        NewsContentFragment newsContentFragment &#x3D; (NewsContentFragment) getFragmentManager().findFragmentById(R.id.news_content_fragment);                        newsContentFragment.refresh(news.getTitle(),news.getContent());                    &#125;else&#123;                        &#x2F;&#x2F;如果是单页模式，则直接启动NewsContentActivity                        NewsContentActivity.actionStart(getActivity(),news.getTitle(),news.getContent());                    &#125;                &#125;            &#125;);            return holder;        &#125;        @Override        public void onBindViewHolder(@NonNull ViewHolder holder, int position) &#123;            News news &#x3D; mNewsList.get(position);            holder.newsTitleText.setText(news.getTitle());        &#125;        @Override        public int getItemCount() &#123;            return mNewsList.size();        &#125;        class ViewHolder extends RecyclerView.ViewHolder&#123;            TextView newsTitleText;            public ViewHolder(View view)&#123;                super(view);                newsTitleText &#x3D; (TextView) view.findViewById(R.id.news_title);            &#125;        &#125;        public NewsAdapter(List&lt;News&gt;newsList)&#123;            mNewsList &#x3D; newsList;        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Android开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android开发学习笔记(5)——详解广播机制</title>
      <link href="//post/the_first_code5.html"/>
      <url>//post/the_first_code5.html</url>
      
        <content type="html"><![CDATA[<h1 id="第五章——详解广播机制"><a href="#第五章——详解广播机制" class="headerlink" title="第五章——详解广播机制"></a>第五章——详解广播机制</h1><p>如果你了解网络通信原理应该会知道，在一个IP网络范围中，最大的IP地址是被保留作为广播地址来使用的。</p><p>比如某个网络的IP范围是192.168.0.XXX，子网掩码是255.255.255.0，那么这个网络的广播地址就是192.168.0.255。广播数据包会被发送到同一网络上的所有端口，这样在该网络中的每台主机都将会收到这条广播。为了便于进行系统级别的消息通知，Android也引入了一套类似的广播消息机制。</p><h2 id="1、广播机制简介"><a href="#1、广播机制简介" class="headerlink" title="1、广播机制简介"></a>1、广播机制简介</h2><p>为什么说Android中的广播机制更加灵活呢？ </p><p>1、注册和接收自己感兴趣的广播</p><p>Android中的每个应用程序都可以对自己感兴趣的广播进行注册，这样该程序就只会接收到自己所关心的广播内容，这些广播可能是来自于系统的，也可能是来自于其他应用程序的。</p><p>2、完整API</p><p>Android提供了一套完整的API，允许应用程序自由地发送和接收广播。</p><p>3、发送&#x2F;接收广播的方法</p><p>发送广播的方法，就是借助之前稍微提到过学过的Intent。而接收广播的方法则需要引入一个新的概念——广播接收器（Broadcast Receiver）。</p><h3 id="标准广播"><a href="#标准广播" class="headerlink" title="标准广播"></a>标准广播</h3><p>是一种完全异步执行的广播，在广播发出之后，所有的广播接收器几乎都会在同一时刻接收到这条广播消息，因此它们之间没有任何先后顺序可言。这种广播的效率会比较高，但同时也意味着它是无法被截断的。标准广播的工作流程如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20230419072112.png"></p><h3 id="有序广播"><a href="#有序广播" class="headerlink" title="有序广播"></a>有序广播</h3><p>是一种同步执行的广播，在广播发出之后，同一时刻只会有一个广播接收器能够收到这条广播消息，当这个广播接收器中的逻辑执行完毕后，广播才会继续传递。所以此时的广播接收器是有先后顺序的，优先级高的广播接收器就可以先收到广播消息，并且前面的广播接收器还可以截断正在传递的广播，这样后面的广播接收器就无法收到广播消息了。有序广播的工作流程如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20230419072358.png"></p><h2 id="2、接收系统广播"><a href="#2、接收系统广播" class="headerlink" title="2、接收系统广播"></a>2、接收系统广播</h2><p>Android内置了很多系统级别的广播，我们可以在应用程序中通过监听这些广播来得到各种系统的状态信息。比如手机开机完成后会发出一条广播，电池的电量发生变化会发出一条广播，时间或时区发生改变也会发出一条广播，等等。如果想要接收到这些广播，就需要使用广播接收器，下面我们就来看一下它的具体用法。</p><h3 id="2-1、动态注册监听网络变化"><a href="#2-1、动态注册监听网络变化" class="headerlink" title="2.1、动态注册监听网络变化"></a>2.1、动态注册监听网络变化</h3><p>广播接收器可以自由地对自己感兴趣的广播进行注册，这样当有相应的广播发出时，广播接收器就能够收到该广播，并在内部处理相应的逻辑。</p><p><strong>注册广播的方式一般有两种，在代码中注册和在AndroidManifest.xml中注册，其中前者也被称为动态注册，后者也被称为静态注册。</strong></p><h4 id="创建一个广播接收器"><a href="#创建一个广播接收器" class="headerlink" title="创建一个广播接收器"></a>创建一个广播接收器</h4><p>其实只需要新建一个类，让它继承自BroadcastReceiver，并重写父类的onReceive()方法就行了。这样当有广播到来时，onReceive()方法就会得到执行，具体的逻辑就可以在这个方法中处理。</p><p>那我们就先通过动态注册的方式编写一个能够监听网络变化的程序，借此学习一下广播接收器的基本用法吧。新建一个BroadcastTest项目，然后修改MainActivity中的代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>broadcasttest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">BroadcastReceiver</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Intent</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">IntentFilter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">NetWorkChangeReceiver</span> netWorkChangeReceiver<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">IntentFilter</span> intentFilter<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        intentFilter<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">IntentFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        intentFilter<span class="token punctuation">.</span><span class="token function">addAction</span><span class="token punctuation">(</span><span class="token string">"android.net.conn.CONNECTIVITY_CHANGE"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        netWorkChangeReceiver <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">NetWorkChangeReceiver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">registerReceiver</span><span class="token punctuation">(</span>netWorkChangeReceiver<span class="token punctuation">,</span>intentFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">unregisterReceiver</span><span class="token punctuation">(</span>netWorkChangeReceiver<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">class</span> <span class="token class-name">NetWorkChangeReceiver</span> <span class="token keyword">extends</span> <span class="token class-name">BroadcastReceiver</span><span class="token punctuation">&#123;</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onReceive</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">Intent</span> intent<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">"network changes"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>在MainActivity中定义了一个内部类NetworkChangeReceiver。</li></ul><p>这个类是继承自BroadcastReceiver的，并重写了父类的onReceive()方法。这样每当网络状态发生变化时，onReceive()方法就会得到执行，这里只是简单地使用Toast提示了一段文本信息。</p><ul><li>onCreate()方法，首先创建了一个IntentFilter的实例，并给它添加了一个值为android.net.conn.CONNECTIVITY_CHANGE的action。</li></ul><p>为什么要添加这个值呢？因为当网络状态发生变化时，系统发出的正是一条值为android.net.conn.CONNECTIVITY_CHANGE的广播，也就是说我们的广播接收器想要监听什么广播，就在这里添加相应的action。</p><ul><li>创建了一个NetworkChangeReceiver的实例，然后调用registerReceiver()方法进行注册，将NetworkChangeReceiver的实例和IntentFilter的实例都传了进去。</li></ul><p>这样NetworkChangeReceiver就会收到值为android.net.conn.CONNECTIVITY_CHANGE的广播，也就实现了监听网络变化的功能。</p><ul><li>动态注册的广播接收器一定都要取消注册才行。</li></ul><p>这里我们是在onDestroy()方法中通过调用unregisterReceiver()方法来实现的。</p><p>通过开关WIFI，观察效果</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304171450325.png"></p><p>不过，只是提醒网络发生了变化还不够人性化，最好是能准确地告诉用户当前是有网络还是没有网络，因此我们还需要对上面的代码进行进一步的优化。修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">NetWorkChangeReceiver</span> <span class="token keyword">extends</span> <span class="token class-name">BroadcastReceiver</span><span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onReceive</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">Intent</span> intent<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ConnectivityManager</span> connectivityManager<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">ConnectivityManager</span><span class="token punctuation">)</span><span class="token function">getSystemService</span><span class="token punctuation">(</span><span class="token class-name">Context</span><span class="token punctuation">.</span><span class="token constant">CONNECTIVITY_SERVICE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">NetworkInfo</span> networkInfo<span class="token operator">=</span>connectivityManager<span class="token punctuation">.</span><span class="token function">getActiveNetworkInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>networkInfo<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>networkInfo<span class="token punctuation">.</span><span class="token function">isAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">"network is available"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">"network is unavailable"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304171457885.png"></p><p>在onReceive()方法中，首先通过getSystemService()方法得到了ConnectivityManager的实例，这是一个系统服务类，专门用于管理网络连接的。然后调用它的getActiveNetworkInfo()方法可以得到NetworkInfo的实例，接着调用NetworkInfo的isAvailable()方法，就可以判断出当前是否有网络了，最后我们还是通过Toast的方式对用户进行提示。</p><p>另外，这里有非常重要的一点需要说明，Android系统为了保护用户设备的安全和隐私，做了严格的规定：如果程序需要进行一些对用户来说比较敏感的操作，就必须在配置文件中声明权限才可以，否则程序将会直接崩溃。比如这里访问系统的网络状态就是需要声明权限的。打开AndroidManifest.xml文件，在里面加入如下权限就可以访问系统网络状态了：(就是上面代码中爆红的位置的说明)</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304171500772.png"></p><h3 id="2-2、静态注册实现开机启动"><a href="#2-2、静态注册实现开机启动" class="headerlink" title="2.2、静态注册实现开机启动"></a>2.2、静态注册实现开机启动</h3><p>动态注册的广播接收器可以自由地控制注册与注销，在灵活性方面有很大的优势，但是它也存在着一个缺点，即必须要在程序启动之后才能接收到广播，因为注册的逻辑是写在onCreate()方法中的。</p><p>那么有没有什么办法可以让程序在未启动的情况下就能接收到广播呢？这就需要使用静态注册的方式了。</p><p>这里我们准备让程序接收一条开机广播，当收到这条广播时就可以在onReceive()方法里执行相应的逻辑，从而实现开机启动的功能。可以使用Android Studio提供的快捷方式来创建一个广播接收器，右击com.zhouzhou.broadcasttest包→New→Other→BroadcastReceiver，会弹出如图所示的窗口：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304171504001.png"></p><p>可以看到，这里将广播接收器命名为BootCompleteReceiver, Exported属性表示是否允许这个广播接收器接收本程序以外的广播，Enabled属性表示是否启用这个广播接收器。勾选这两个属性，点击Finish完成创建。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>broadcasttest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">BroadcastReceiver</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Intent</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BootCompleteReceiver</span> <span class="token keyword">extends</span> <span class="token class-name">BroadcastReceiver</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onReceive</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">Intent</span> intent<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">"Boot Complete"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只是在onReceive()方法中使用Toast弹出一段提示信息。另外，<strong>静态的广播接收器一定要在AndroidManifest.xml文件中注册才可以使用</strong>，不过由于我们是使用Android Studio的快捷方式创建的广播接收器，因此注册这一步已经被自动完成了。打开AndroidManifest.xml文件瞧一瞧，代码如下所示：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304171508327.png"></p><p>可以看到，<code>&lt;application&gt;</code>标签内出现了一个新的标签<code>&lt;receiver&gt;</code>，所有静态的广播接收器都是在这里进行注册的。它的用法和<code>&lt;activity&gt;</code>标签非常相似，也是通过android:name来指定具体注册哪一个广播接收器，而enabled和exported属性则是根据我们刚才勾选的状态自动生成的。</p><p>不过目前BootCompleteReceiver还不能接收开机广播，我们还要对AndroidManifest. xml文件进行修改才行</p><p>现在重新运行程序后，程序就已经可以接收开机广播了。将测试机关闭并重新启动，在启动完成之后就会收到开机广播。</p><p>到目前为止，在广播接收器的onReceive()方法中都只是简单地使用Toast提示了一段文本信息，当你真正在项目中使用到它的时候，就可以在里面编写自己的逻辑。</p><p><strong>需要注意的是，不要在onReceive()方法中添加过多的逻辑或者进行任何的耗时操作，因为在广播接收器中是不允许开启线程的，当onReceive()方法运行了较长时间而没有结束时，程序就会报错。因此广播接收器更多的是扮演一种打开程序其他组件的角色，比如创建一条状态栏通知，或者启动一个服务等，</strong>这几个概念我们会在后面的章节中学到。</p><h2 id="3、发送自定义广播"><a href="#3、发送自定义广播" class="headerlink" title="3、发送自定义广播"></a>3、发送自定义广播</h2><p>广播主要分为两种类型：标准广播和有序广播，在本节中我们就将通过实践的方式来看一下这两种广播具体的区别。</p><h3 id="3-1、发送标准广播"><a href="#3-1、发送标准广播" class="headerlink" title="3.1、发送标准广播"></a>3.1、发送标准广播</h3><p>在发送广播之前，还是需要先定义一个广播接收器来准备接收此广播才行，不然发出去也是白发。因此新建一个MyBroadcastReceiver，代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>broadcasttest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">BroadcastReceiver</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Intent</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyBroadcastReceiver</span> <span class="token keyword">extends</span> <span class="token class-name">BroadcastReceiver</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onReceive</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">Intent</span> intent<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">"receiverd in MyBroadcastReceiver"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里当MyBroadcastReceiver收到自定义的广播时，就会弹出“received in MyBroadcastReceiver”的提示。然后在AndroidManifest.xml中对这个广播接收器进行修改：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>receiver</span>    <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.MyBroadcastReceiver<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>enabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.broadcasttest.MY_BROADCAST<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>receiver</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里让MyBroadcastReceiver接收一条值为com.example.broadcasttest.MY_BROADCAST的广播，因此待会儿在发送广播的时候，我们就需要发出这样的一条广播。接下来修改activity_main.xml中的代码，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/button<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Send Broadcast<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304171530249.png"></p><p>这里在布局文件中定义了一个按钮，用于作为发送广播的触发点。然后修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>broadcasttest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">BroadcastReceiver</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">ComponentName</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Intent</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">IntentFilter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">ConnectivityManager</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">NetworkInfo</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">NetWorkChangeReceiver</span> netWorkChangeReceiver<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">IntentFilter</span> intentFilter<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>        button<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Intent</span> intent<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token string">"com.example.broadcasttest.MY_BROADCAST"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                intent<span class="token punctuation">.</span><span class="token function">setComponent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ComponentName</span><span class="token punctuation">(</span><span class="token string">"com.example.broadcasttest"</span><span class="token punctuation">,</span><span class="token string">"com.example.broadcasttest.MyBroadcastReceiver"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">sendBroadcast</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">unregisterReceiver</span><span class="token punctuation">(</span>netWorkChangeReceiver<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在按钮的点击事件里面加入了发送自定义广播的逻辑。首先构建出了一个Intent对象，并把要发送的广播的值传入，然后调用了Context的sendBroadcast()方法将广播发送出去，这样所有监听com.example.broadcasttest.MY_BROADCAST这条广播的广播接收器就会收到消息。此时发出去的广播就是一条标准广播。重新运行程序，并点击一下Send Broadcast按钮<img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304171547220.png"></p><p>这样就成功完成了发送自定义广播的功能。另外，由于广播是使用Intent进行传递的，因此还可以在Intent中携带一些数据传递给广播接收器。</p><h3 id="3-2、发送有序广播"><a href="#3-2、发送有序广播" class="headerlink" title="3.2、发送有序广播"></a>3.2、发送有序广播</h3><p>广播是一种可以跨进程的通信方式，这一点从前面接收系统广播的时候就可以看出来了。因此在我们应用程序内发出的广播，其他的应用程序应该也是可以收到的。</p><p>为了验证这一点，我们需要再新建一个BroadcastTest2项目，点击Android Studio导航栏→File→New→New Project进行创建。将项目创建好之后，还需要在这个项目下定义一个广播接收器，用于接收上一小节中的自定义广播。新建AnotherBroadcastReceiver，代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>broadcasttest1</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">BroadcastReceiver</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Intent</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AnotherBroadcastReceiver</span> <span class="token keyword">extends</span> <span class="token class-name">BroadcastReceiver</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onReceive</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">Intent</span> intent<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">"Receive in AnotherBroadcastReceiver"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里仍是在广播接收器的onReceive()方法中弹出了文本信息。然后在AndroidManifest.xml中对这个广播接收器进行修改</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>application</span>        <span class="token attr-name"><span class="token namespace">android:</span>allowBackup</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>dataExtractionRules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@xml/data_extraction_rules<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>fullBackupContent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@xml/backup_rules<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@mipmap/ic_launcher<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@string/app_name<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>supportsRtl</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@style/Theme.BroadcastTest1<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">tools:</span>targetApi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>31<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>receiver</span>            <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.AnotherBroadcastReceiver<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>enabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.broadcasttest.MY_BROADCAST<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>receiver</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span>            <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.MainActivity<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.action.MAIN<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.category.LAUNCHER<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activity</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>application</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到AnotherBroadcastReceiver接收的也是com.example.broadcasttest.MY_BROADCAST这条广播。现在运行BroadcastTest1项目将这个程序安装到模拟器上，然后重新回到BroadcastTest项目的主界面，并点击一下Send Broadcast按钮，就会分别弹出两次提示信息，不过我测试失败了，查阅资料发现，安卓8.0以上已经不支持静态注册了。</p><p>重新回到BroadcastTest项目，然后修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>broadcasttest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">BroadcastReceiver</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">ComponentName</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Intent</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">IntentFilter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">ConnectivityManager</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">NetworkInfo</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">NetWorkChangeReceiver</span> netWorkChangeReceiver<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">IntentFilter</span> intentFilter<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>        button<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Intent</span> intent<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token string">"com.example.broadcasttest.MY_BROADCAST"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                intent<span class="token punctuation">.</span><span class="token function">setComponent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ComponentName</span><span class="token punctuation">(</span><span class="token string">"com.example.broadcasttest"</span><span class="token punctuation">,</span><span class="token string">"com.example.broadcasttest.MyBroadcastReceiver"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">sendOrderedBroadcast</span><span class="token punctuation">(</span>intent<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">unregisterReceiver</span><span class="token punctuation">(</span>netWorkChangeReceiver<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，发送有序广播只需要改动一行代码，即将sendBroadcast()方法改成sendOrderedBroadcast()方法。sendOrderedBroadcast()方法接收两个参数，第一个参数仍然是Intent，第二个参数是一个与权限相关的字符串，这里传入null就行了。</p><p>现在重新运行程序，并点击Send Broadcast按钮，发现两个应用程序仍然都可以接收到这条广播。看上去好像和标准广播没什么区别嘛，不过别忘了，<strong>这个时候的广播接收器是有先后顺序的，而且前面的广播接收器还可以将广播截断，以阻止其继续传播</strong></p><p>那么该如何设定广播接收器的先后顺序呢？当然是在注册的时候进行设定的了，修改AndroidManifest.xml中的代码，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>receiver</span>    <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.MyBroadcastReceiver<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>enabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span> <span class="token attr-name"><span class="token namespace">android:</span>priority</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.broadcasttest.MY_BROADCAST<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>receiver</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过android:priority属性给广播接收器设置了优先级，优先级比较高的广播接收器就可以先收到广播。这里将MyBroadcastReceiver的优先级设成了100，以保证它一定会在AnotherBroadcastReceiver之前收到广播。</p><p>既然已经获得了接收广播的优先权，那么MyBroadcastReceiver就可以选择是否允许广播继续传递了。修改MyBroadcastReceiver中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>broadcasttest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">BroadcastReceiver</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Intent</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyBroadcastReceiver</span> <span class="token keyword">extends</span> <span class="token class-name">BroadcastReceiver</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onReceive</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">Intent</span> intent<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">"receiverd in MyBroadcastReceiver"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">abortBroadcast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>书中讲述：“如果在onReceive()方法中调用了abortBroadcast()方法，就表示将这条广播截断，后面的广播接收器将无法再接收到这条广播。现在重新运行程序，并点击一下Send Broadcast按钮，你会发现，只有MyBroadcastReceiver中的Toast信息能够弹出，说明这条广播经过MyBroadcastReceiver之后确实是终止传递了。”实际上，在4.4以上，abortBroadcast()方法不能实现拦截功能了。上面的测试，并没有成功拦截。</p><h2 id="4、使用本地广播"><a href="#4、使用本地广播" class="headerlink" title="4、使用本地广播"></a>4、使用本地广播</h2><p>前面我们发送和接收的广播全部属于系统全局广播，即发出的广播可以被其他任何应用程序接收到，并且我们也可以接收来自于其他任何应用程序的广播。这样就很容易引起安全性的问题，比如说我们发送的一些携带关键性数据的广播有可能被其他的应用程序截获，或者其他的程序不停地向我们的广播接收器里发送各种垃圾广播。</p><p><strong>为了能够简单地解决广播的安全性问题，Android引入了一套本地广播机制，使用这个机制发出的广播只能够在应用程序的内部进行传递，并且广播接收器也只能接收来自本应用程序发出的广播，这样所有的安全性问题就都不存在了。</strong></p><p>本地广播的用法并不复杂，主要就是使用了一个LocalBroadcastManager来对广播进行管理，并提供了发送广播和注册广播接收器的方法。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>broadcasttest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Nullable</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>localbroadcastmanager<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">LocalBroadcastManager</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">BroadcastReceiver</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">ComponentName</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Intent</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">IntentFilter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">ConnectivityManager</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">NetworkInfo</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">IntentFilter</span> intentFilter<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">LocalReceiver</span> localReceiver<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">LocalBroadcastManager</span> localBroadcastManager<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        localBroadcastManager<span class="token operator">=</span><span class="token class-name">LocalBroadcastManager</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取实例</span>        <span class="token class-name">Button</span> button<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>        button<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Intent</span> intent<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token string">"com.example.broadcasttest.LOCAL_BROADCAST"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                localBroadcastManager<span class="token punctuation">.</span><span class="token function">sendBroadcast</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//发送本地广播</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        intentFilter<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">IntentFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        intentFilter<span class="token punctuation">.</span><span class="token function">addAction</span><span class="token punctuation">(</span><span class="token string">"com.example.broadcasttest.LOCAL_BROADCAST"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        localReceiver<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">LocalReceiver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        localBroadcastManager<span class="token punctuation">.</span><span class="token function">registerReceiver</span><span class="token punctuation">(</span>localReceiver<span class="token punctuation">,</span>intentFilter<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//注册本地广播监听器</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        localBroadcastManager<span class="token punctuation">.</span><span class="token function">unregisterReceiver</span><span class="token punctuation">(</span>localReceiver<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">class</span> <span class="token class-name">LocalReceiver</span> <span class="token keyword">extends</span> <span class="token class-name">BroadcastReceiver</span><span class="token punctuation">&#123;</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onReceive</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">Intent</span> intent<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">"received local broadcast"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>基本上就和前面所学的动态注册广播接收器以及发送广播的代码是一样的。只不过现在首先是通过LocalBroadcastManager的getInstance()方法得到了它的一个实例，然后在注册广播接收器的时候调用的是LocalBroadcastManager的registerReceiver()方法，在发送广播的时候调用的是LocalBroadcastManager的sendBroadcast()方法，这里我们在按钮的点击事件里面发出com.example.broadcasttest.LOCAL_BROADCAST广播，然后在LocalReceiver里去接收这条广播。重新运行程序，并点击SendBroadcast按钮，效果如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304181057214.png"></p><p>本地广播是无法通过静态注册的方式来接收的。其实这也完全可以理解，因为静态注册主要就是为了让程序在未启动的情况下也能收到广播，而发送本地广播时，我们的程序肯定是已经启动了，因此也完全不需要使用静态注册的功能。</p><h3 id="盘点一下使用本地广播的几点优势："><a href="#盘点一下使用本地广播的几点优势：" class="headerlink" title="盘点一下使用本地广播的几点优势："></a>盘点一下使用本地广播的几点优势：</h3><p>1、可以明确地知道正在发送的广播不会离开我们的程序，因此不必担心机密数据泄漏。</p><p>2、其他的程序无法将广播发送到我们程序的内部，因此不需要担心会有安全漏洞的隐患。</p><p>3、 发送本地广播比发送系统全局广播将会更加高效。</p><h2 id="5、广播的最佳实践——实现强制下线功能"><a href="#5、广播的最佳实践——实现强制下线功能" class="headerlink" title="5、广播的最佳实践——实现强制下线功能"></a>5、广播的最佳实践——实现强制下线功能</h2><p>强制下线功能，很多的应用程序都具备这个功能，比如你的QQ号在别处登录了，就会将你强制挤下线。其实实现强制下线功能的思路也比较简单，只需要在界面上弹出一个对话框，让用户无法进行任何其他操作，必须要点击对话框中的确定按钮，然后回到登录界面即可。可是这样就存在着一个问题，因为当我们被通知需要强制下线时可能正处于任何一个界面，难道需要在每个界面上都编写一个弹出对话框的逻辑？我们完全可以借助本章中所学的广播知识，来非常轻松地实现这一功能。</p><p>新建一个BroadcastBestPractice项目，然后开始动手吧。强制下线功能需要先关闭掉所有的活动，然后回到登录界面。先创建一个ActivityCollector类用于管理所有的活动，代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">Activity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ActivityCollector</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Activity</span><span class="token punctuation">></span></span> activities <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">addActivity</span><span class="token punctuation">(</span><span class="token class-name">Activity</span> activity<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        activities<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">removeActivity</span><span class="token punctuation">(</span><span class="token class-name">Activity</span> activity<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        activities<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">finishAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Activity</span> activity<span class="token operator">:</span>activities             <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>activity<span class="token punctuation">.</span><span class="token function">isFinishing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                activity<span class="token punctuation">.</span><span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后创建BaseActivity类作为所有活动的父类，代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>broadcastbestpractice</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Nullable</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BaseActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ActivityCollector</span><span class="token punctuation">.</span><span class="token function">addActivity</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ActivityCollector</span><span class="token punctuation">.</span><span class="token function">removeActivity</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建一个登录界面的活动，新建LoginActivity，并让Android Studio帮我们自动生成相应的布局文件。然后编辑布局文件activity_login.xml，代码如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>horizontal<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>60dp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>90dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center_vertical<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Account:<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EditText</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/account<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center_vertical<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>horizontal<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>60dp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>90dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center_vertical<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Password<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EditText</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/password<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center_vertical<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>inputType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>textPassword<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/login<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>60dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Login<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>模拟一个简单的登录功能。首先要将LoginActivity的继承结构改成继承自BaseActivity，然后调用findViewById()方法分别获取到账号输入框、密码输入框以及登录按钮的实例。接着在登录按钮的点击事件里面对输入的账号和密码进行判断，如果账号是admin并且密码是123456，就认为登录成功并跳转到MainActivity，否则就提示用户账号或密码错误。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>broadcastbestpractice</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Intent</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">EditText</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">TextView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Nullable</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginActivity</span> <span class="token keyword">extends</span> <span class="token class-name">BaseActivity</span><span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">EditText</span> accountEdit<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">EditText</span> passwordEdit<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Button</span> login<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_login<span class="token punctuation">)</span><span class="token punctuation">;</span>        accountEdit<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">EditText</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>account<span class="token punctuation">)</span><span class="token punctuation">;</span>        passwordEdit<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">EditText</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>        login <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>login<span class="token punctuation">)</span><span class="token punctuation">;</span>        login<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">String</span> account<span class="token operator">=</span>accountEdit<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> password<span class="token operator">=</span>passwordEdit<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>account<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>password<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token class-name">Intent</span> intent<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token class-name">LoginActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token class-name">LoginActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"account or password is error!"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因此，你就可以将MainActivity理解成是登录成功后进入的程序主界面了，这里我们并不需要在主界面里提供什么花哨的功能，只需要加入强制下线功能就可以了，修改activity_main.xml中的代码，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/force_offline<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Send force offline broadcast<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只有一个按钮而已，用于触发强制下线功能。然后修改MainActivity中的代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>broadcastbestpractice</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Intent</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">BaseActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> offline <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>force_offline<span class="token punctuation">)</span><span class="token punctuation">;</span>        offline<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Intent</span> intent<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token string">"com.example.broadcastbestpractice.FORCE_OFFLINE"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">sendBroadcast</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>有个重点，在按钮的点击事件里面发送了一条广播值为com.example.broadcastbestpractice.FORCE_OFFLINE，这条广播就是用于通知程序强制用户下线的。</p><p>也就是说强制用户下线的逻辑并不是写在MainActivity里的，<strong>而是应该写在接收这条广播的广播接收器里面</strong>，这样强制下线的功能就不会依附于任何的界面，不管是在程序的任何地方，只需要发出这样一条广播，就可以完成强制下线的操作了。</p><p>那么毫无疑问，接下来我们就需要创建一个广播接收器来接收这条强制下线广播，唯一的问题就是，应该在哪里创建呢？由于广播接收器里面需要弹出一个对话框来阻塞用户的正常操作，但如果创建的是一个静态注册的广播接收器，是没有办法在onReceive()方法里弹出对话框这样的UI控件的，而我们显然也不可能在每个活动中都去注册一个动态的广播接收器。那么到底应该怎么办呢？</p><p>答案其实很明显，只需要在BaseActivity中动态注册一个广播接收器就可以了，因为所有的活动都是继承自BaseActivity的。修改BaseActivity中的代码，</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>broadcastbestpractice</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">BroadcastReceiver</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">DialogInterface</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Intent</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">IntentFilter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Nullable</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AlertDialog</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BaseActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">ForeceOfflineReceiver</span> receiver<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ActivityCollector</span><span class="token punctuation">.</span><span class="token function">addActivity</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">IntentFilter</span> intentFilter<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">IntentFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        intentFilter<span class="token punctuation">.</span><span class="token function">addAction</span><span class="token punctuation">(</span><span class="token string">"com.example.broadcastbestpractice.FORCE_OFFLINE"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        receiver<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ForeceOfflineReceiver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">registerReceiver</span><span class="token punctuation">(</span>receiver<span class="token punctuation">,</span>intentFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>receiver<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">unregisterReceiver</span><span class="token punctuation">(</span>receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>            receiver<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ActivityCollector</span><span class="token punctuation">.</span><span class="token function">removeActivity</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">class</span> <span class="token class-name">ForeceOfflineReceiver</span> <span class="token keyword">extends</span> <span class="token class-name">BroadcastReceiver</span><span class="token punctuation">&#123;</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onReceive</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">Intent</span> intent<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">AlertDialog<span class="token punctuation">.</span>Builder</span> builder <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">AlertDialog<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>            builder<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Warning"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            builder<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token string">"You are forced to be offline ,Pleasr try to login again"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            builder<span class="token punctuation">.</span><span class="token function">setCancelable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            builder<span class="token punctuation">.</span><span class="token function">setPositiveButton</span><span class="token punctuation">(</span><span class="token string">"OK"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DialogInterface<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token annotation punctuation">@Override</span>                <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">DialogInterface</span> dialogInterface<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">ActivityCollector</span><span class="token punctuation">.</span><span class="token function">finishAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">Intent</span> intent<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span><span class="token class-name">LoginActivity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    context<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            builder<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ForceOfflineReceiver中的代码，这次onReceive()方法里首先使用AlertDialog.Builder来构建一个对话框，注意这里一定要调用setCancelable()方法将对话框设为不可取消，否则用户按一下Back键就可以关闭对话框继续使用程序了。</p><p>然后使用setPositiveButton()方法来给对话框注册确定按钮，当用户点击了确定按钮时，就调用ActivityCollector的finishAll()方法来销毁掉所有活动，并重新启动LoginActivity这个活动。</p><p>我们是怎么注册ForceOfflineReceiver这个广播接收器的，这里重写了onResume()和onPause()这两个生命周期函数，然后分别在这两个方法里注册和取消注册了ForceOfflineReceiver。</p><p>那么为什么要这样写呢？之前不都是在onCreate()和onDestroy()方法里来注册和取消注册广播接收器的么？这是因为我们始终需要保证只有处于栈顶的活动才能接收到这条强制下线广播，非栈顶的活动不应该也没有必要去接收这条广播，所以写在onResume()和onPause()方法里就可以很好地解决这个问题，当一个活动失去栈顶位置时就会自动取消广播接收器的注册。</p><p>这样的话，所有强制下线的逻辑就已经完成了，接下来我们还需要对AndroidManifest.xml文件进行修改，代码如下所示：</p><pre class="line-numbers language-none"><code class="language-none">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;&lt;manifest xmlns:android&#x3D;&quot;http:&#x2F;&#x2F;schemas.android.com&#x2F;apk&#x2F;res&#x2F;android&quot;    xmlns:tools&#x3D;&quot;http:&#x2F;&#x2F;schemas.android.com&#x2F;tools&quot;&gt;    &lt;application        android:allowBackup&#x3D;&quot;true&quot;        android:dataExtractionRules&#x3D;&quot;@xml&#x2F;data_extraction_rules&quot;        android:fullBackupContent&#x3D;&quot;@xml&#x2F;backup_rules&quot;        android:icon&#x3D;&quot;@mipmap&#x2F;ic_launcher&quot;        android:label&#x3D;&quot;@string&#x2F;app_name&quot;        android:supportsRtl&#x3D;&quot;true&quot;        android:theme&#x3D;&quot;@style&#x2F;Theme.BroadcastBestPractice&quot;        tools:targetApi&#x3D;&quot;31&quot;&gt;        &lt;activity  android:name&#x3D;&quot;.MainActivity&quot; android:exported&#x3D;&quot;true&quot;&gt;&lt;&#x2F;activity&gt;        &lt;activity android:name&#x3D;&quot;.LoginActivity&quot; android:exported&#x3D;&quot;true&quot;&gt;            &lt;intent-filter&gt;                &lt;action android:name&#x3D;&quot;android.intent.action.MAIN&quot; &#x2F;&gt;                &lt;category android:name&#x3D;&quot;android.intent.category.LAUNCHER&quot; &#x2F;&gt;            &lt;&#x2F;intent-filter&gt;        &lt;&#x2F;activity&gt;    &lt;&#x2F;application&gt;&lt;&#x2F;manifest&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304181525492.png"></p><p>尝试登录</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304181526620.png"></p><p>点击按钮</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304181526963.png"></p>]]></content>
      
      
      <categories>
          
          <category> Android开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android开发学习笔记(6)——数据存储全方案</title>
      <link href="//post/the_first_code6.html"/>
      <url>//post/the_first_code6.html</url>
      
        <content type="html"><![CDATA[<h1 id="第六章——数据存储全方案，详解持久化技术"><a href="#第六章——数据存储全方案，详解持久化技术" class="headerlink" title="第六章——数据存储全方案，详解持久化技术"></a>第六章——数据存储全方案，详解持久化技术</h1><p>任何一个应用程序，其实说白了就是在不停地和数据打交道，聊QQ、看新闻、刷微博，所关心的都是里面的数据，没有数据的应用程序就变成了一个空壳子，对用户来说没有任何实际用途。现在多数的数据基本都是由用户产生的，比如你发微博、评论新闻，其实都是在产生数据。</p><p>瞬时数据就是指那些存储在内存当中，有可能会因为程序关闭或其他原因导致内存被回收而丢失的数据。这对于一些关键性的数据信息来说是绝对不能容忍的，谁都不希望自己刚发出去的一条微博，刷新一下就没了吧。那么怎样才能保证一些关键性的数据不会丢失呢？这就需要用到<strong>数据持久化技术</strong>了。</p><h2 id="1、持久化技术简介"><a href="#1、持久化技术简介" class="headerlink" title="1、持久化技术简介"></a>1、持久化技术简介</h2><p>数据持久化就是指将那些内存中的瞬时数据保存到存储设备中，保证即使在手机或电脑关机的情况下，这些数据仍然不会丢失。保存在内存中的数据是处于瞬时状态的，而保存在存储设备中的数据是处于持久状态的，<strong>持久化技术则提供了一种机制可以让数据在瞬时状态和持久状态之间进行转换。</strong></p><p>持久化技术被广泛应用于各种程序设计的领域当中，而本书中要探讨的自然是Android中的数据持久化技术。<strong>Android系统中主要提供了3种方式用于简单地实现数据持久化功能，即文件存储、SharedPreferences存储以及数据库存储。</strong></p><p>除这3种方式外，你还可以将数据保存在手机的SD卡中，不过使用文件、SharedPreferences或数据库来保存数据会相对更简单一些，而且比起将数据保存在SD卡中会更加地安全。</p><h2 id="2、文件存储"><a href="#2、文件存储" class="headerlink" title="2、文件存储"></a>2、文件存储</h2><p>文件存储是Android中最基本的一种数据存储方式，它不对存储的内容进行任何的格式化处理，所有数据都是原封不动地保存到文件当中的，因而它比较适合用于存储一些简单的文本数据或二进制数据。</p><p>如果你想使用文件存储的方式来保存一些较为复杂的文本数据，就需要定义一套自己的格式规范，这样可以方便之后将数据从文件中重新解析出来。</p><h3 id="2-1、将数据存储到文件中"><a href="#2-1、将数据存储到文件中" class="headerlink" title="2.1、将数据存储到文件中"></a>2.1、将数据存储到文件中</h3><p>Context类中提供了一个openFileOutput()方法，可以用于将数据存储到指定的文件中。</p><ul><li>第一个参数是文件名，在文件创建的时候使用的就是这个名称，注意这里指定的文件名不可以包含路径，因为所有的文件都是默认存储到&#x2F;data&#x2F;data&#x2F;包名&#x2F;files&#x2F;目录下的。</li><li>第二个参数是文件的操作模式，主要有两种模式可选，MODE_PRIVATE和MODE_APPEND。其中MODE_PRIVATE是默认的操作模式，表示当指定同样文件名的时候，所写入的内容将会覆盖原文件中的内容，而MODE_APPEND则表示如果该文件已存在，就往文件里面追加内容，不存在就创建新文件。</li></ul><p>其实文件的操作模式还有另外两种：MODE_WORLD_READABLE和MODE_WORLD_WRITEABLE，这两种模式表示允许其他的应用程序对我们程序中的文件进行读写操作，不过由于这两种模式过于危险，很容易引起应用的安全性漏洞，已在Android 4.2版本中被废弃。</p><p>openFileOutput()方法返回的是一个FileOutputStream对象，得到了这个对象之后就可以使用Java流的方式将数据写入到文件中了。以下是一段简单的代码示例，展示了如何将一段文本内容保存到文件中：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token class-name">String</span> data<span class="token operator">=</span><span class="token string">"This is test data"</span><span class="token punctuation">;</span>       <span class="token class-name">FileOutputStream</span> fileOutputStream<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>       <span class="token class-name">BufferedWriter</span> bufferedWriter<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>       <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>           fileOutputStream <span class="token operator">=</span><span class="token function">openFileOutput</span><span class="token punctuation">(</span><span class="token string">"test.txt"</span><span class="token punctuation">,</span> <span class="token class-name">Context</span><span class="token punctuation">.</span><span class="token constant">MODE_PRIVATE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           bufferedWriter<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">BufferedWriter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OutputStreamWriter</span><span class="token punctuation">(</span>fileOutputStream<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           bufferedWriter<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span><span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>           <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>               <span class="token keyword">if</span> <span class="token punctuation">(</span>bufferedWriter<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                   bufferedWriter<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">&#125;</span>           <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>               e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下面就编写一个完整的例子，借此学习一下如何在Android项目中使用文件存储的技术。首先创建一个FilePersistenceTest项目，并修改activity_main.xml中的代码</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EditText</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/edit<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>hint</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Type something here<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EditText</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/edit<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>hint</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Type something here<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在布局中加入了一个EditText，用于输入文本内容。现在运行一下程序，界面上会有一个文本输入框。然后在文本输入框中随意输入点什么内容，再按下Back键，这时输入的内容肯定就已经丢失了，<strong>因为它只是瞬时数据，在活动被销毁后就会被回收</strong>。而这里我们要做的，就是在数据被回收之前，将它存储到文件当中。修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>filepersistencetest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">EditText</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">BufferedWriter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileOutputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">OutputStreamWriter</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">EditText</span> editText<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        editText <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">EditText</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>edit<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> inputText<span class="token operator">=</span>editText<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">save</span><span class="token punctuation">(</span>inputText<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token class-name">String</span> data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">FileOutputStream</span> fileOutputStream <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">OutputStreamWriter</span> outputStreamWriter <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            fileOutputStream <span class="token operator">=</span> <span class="token function">openFileOutput</span><span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">,</span> <span class="token class-name">Context</span><span class="token punctuation">.</span><span class="token constant">MODE_PRIVATE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            outputStreamWriter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OutputStreamWriter</span><span class="token punctuation">(</span>fileOutputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>            outputStreamWriter<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>outputStreamWriter <span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    outputStreamWriter<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304191020717.png"></p><p>首先在onCreate()方法中获取了EditText的实例，然后重写了onDestroy()方法，这样就可以保证在活动销毁之前一定会调用这个方法。在onDestroy()方法中我们获取了EditText中输入的内容，并调用save()方法把输入的内容存储到文件中，文件命名为data。然后按下Back键关闭程序，这时我们输入的内容就已经保存到文件中了。</p><p>那么如何才能证实数据确实已经保存成功了呢？</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304191021193.png"></p><p>这样就证实了，在EditText中输入的内容确实已经成功保存到文件中了。不过只是成功将数据保存下来还不够，我们还需要想办法在下次启动程序的时候让这些数据能够还原到EditText中，因此接下来我们就要学习一下如何从文件中读取数据。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304191023187.png"></p><h3 id="2-2、从文件中读取数据"><a href="#2-2、从文件中读取数据" class="headerlink" title="2.2、从文件中读取数据"></a>2.2、从文件中读取数据</h3><p>类似于将数据存储到文件中，Context类中还提供了一个openFileInput()方法，用于从文件中读取数据。这个方法要比openFileOutput()简单一些，它只接收一个参数，即要读取的文件名，然后系统会自动到&#x2F;data&#x2F;data&#x2F;包名&#x2F;files&#x2F;目录下去加载这个文件，并返回一个FileInputStream对象，得到了这个对象之后再通过Java流的方式就可以将数据读取出来了。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token class-name">FileInputStream</span> fileInputStream<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>      <span class="token class-name">BufferedReader</span> reader <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>      <span class="token class-name">StringBuilder</span> content<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>          fileInputStream<span class="token operator">=</span><span class="token function">openFileInput</span><span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>fileInputStream<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token class-name">String</span> line<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span>          <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>line<span class="token operator">=</span>reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>              content<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>          e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>reader<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>             <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                 reader<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                 e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">return</span> content<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这段代码中，首先通过openFileInput()方法获取到了一个FileInputStream对象，然后借助它又构建出了一个InputStreamReader对象，接着再使用InputStreamReader构建出一个BufferedReader对象，这样我们就可以通过BufferedReader进行一行行地读取，把文件中所有的文本内容全部读取出来，并存放在一个StringBuilder对象中，最后将读取到的内容返回就可以了。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>filepersistencetest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">TextUtils</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">EditText</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">BufferedReader</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">BufferedWriter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileInputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileOutputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStreamReader</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">OutputStreamWriter</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">EditText</span> editText<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        editText <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">EditText</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>edit<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> inputText <span class="token operator">=</span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">TextUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>inputText<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            editText<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>inputText<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//将输入光标移动到文本的末尾位置以便于继续输入</span>            editText<span class="token punctuation">.</span><span class="token function">setSelection</span><span class="token punctuation">(</span>inputText<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"Restoring succeeded"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> inputText<span class="token operator">=</span>editText<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">save</span><span class="token punctuation">(</span>inputText<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token class-name">String</span> data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">FileOutputStream</span> fileOutputStream <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">OutputStreamWriter</span> outputStreamWriter <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            fileOutputStream <span class="token operator">=</span> <span class="token function">openFileOutput</span><span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">,</span> <span class="token class-name">Context</span><span class="token punctuation">.</span><span class="token constant">MODE_PRIVATE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            outputStreamWriter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OutputStreamWriter</span><span class="token punctuation">(</span>fileOutputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>            outputStreamWriter<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>outputStreamWriter <span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    outputStreamWriter<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">FileInputStream</span> fileInputStream<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">BufferedReader</span> reader <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">StringBuilder</span> content<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            fileInputStream<span class="token operator">=</span><span class="token function">openFileInput</span><span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>fileInputStream<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> line<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>line<span class="token operator">=</span>reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                content<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>reader<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>               <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                   reader<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                   e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> content<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里的思路非常简单，在onCreate()方法中调用load()方法来读取文件中存储的文本内容，如果读到的内容不为null，就调用EditText的setText()方法将内容填充到EditText里，并调用setSelection()方法将输入光标移动到文本的末尾位置以便于继续输入，然后弹出一句还原成功的提示。</p><p>注意，上述代码在对字符串进行非空判断的时候使用了TextUtils.isEmpty()方法，这是一个非常好用的方法，它可以一次性进行两种空值的判断。当传入的字符串等于null或者等于空字符串的时候，这个方法都会返回true，从而使得我们不需要先单独判断这两种空值再使用逻辑运算符连接起来了。现在重新运行程序，刚才保存的Content字符串肯定会被填充到EditText中：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304191043774.png"></p><p>文件存储方面的知识，其实所用到的核心技术就是Context类中提供的openFileInput()和openFileOutput()方法，之后就是利用Java的各种流来进行读写操作。</p><p>文件存储的方式并不适合用于保存一些较为复杂的文本数据，下面学习一下Android中另一种数据持久化的方式，它比文件存储更加简单易用，而且可以很方便地对某一指定的数据进行读写操作。</p><h2 id="3、SharedPreferences存储"><a href="#3、SharedPreferences存储" class="headerlink" title="3、SharedPreferences存储"></a>3、SharedPreferences存储</h2><p>不同于文件的存储方式，SharedPreferences是使用键值对的方式来存储数据的。</p><p>也就是说，当保存一条数据的时候，需要给这条数据提供一个对应的键，这样在读取数据的时候就可以通过这个键把相应的值取出来。而且SharedPreferences还支持多种不同的数据类型存储，如果存储的数据类型是整型，那么读取出来的数据也是整型的；如果存储的数据是一个字符串，那么读取出来的数据仍然是字符串。</p><p>这样你应该就能明显地感觉到，使用SharedPreferences来进行数据持久化要比使用文件方便很多。</p><h3 id="3-1、将数据存储到SharedPreferences中"><a href="#3-1、将数据存储到SharedPreferences中" class="headerlink" title="3.1、将数据存储到SharedPreferences中"></a>3.1、将数据存储到SharedPreferences中</h3><p>要想使用SharedPreferences来存储数据，首先需要获取到SharedPreferences对象。Android中主要提供了3种方法用于得到SharedPreferences对象。</p><h4 id="a、Context类中的getSharedPreferences-方法"><a href="#a、Context类中的getSharedPreferences-方法" class="headerlink" title="a、Context类中的getSharedPreferences()方法"></a>a、Context类中的getSharedPreferences()方法</h4><p>此方法接收两个参数，第一个参数用于指定SharedPreferences文件的名称，如果指定的文件不存在则会创建一个，SharedPreferences文件都是存放在&#x2F;data&#x2F;data&#x2F;包名&#x2F;shared_prefs&#x2F;目录下的。</p><p>第二个参数用于指定操作模式，目前只有MODE_PRIVATE这一种模式可选，它是默认的操作模式，和直接传入0效果是相同的，表示只有当前的应用程序才可以对这个SharedPreferences文件进行读写。</p><p>其他几种操作模式均已被废弃，MODE_WORLD_READABLE和MODE_WORLD_WRITEABLE这两种模式是在Android 4.2版本中被废弃的，MODE_MULTI_PROCESS模式是在Android6.0版本中被废弃的。</p><h4 id="b、Activity类中的getPreferences-方法"><a href="#b、Activity类中的getPreferences-方法" class="headerlink" title="b、Activity类中的getPreferences()方法"></a>b、Activity类中的getPreferences()方法</h4><p>这个方法和Context中的getSharedPreferences()方法很相似，不过它只接收一个操作模式参数，因为使用这个方法时会自动将当前活动的类名作为SharedPreferences的文件名。</p><h4 id="c、PreferenceManager类中的getDefaultSharedPreferences-方法"><a href="#c、PreferenceManager类中的getDefaultSharedPreferences-方法" class="headerlink" title="c、PreferenceManager类中的getDefaultSharedPreferences()方法"></a>c、PreferenceManager类中的getDefaultSharedPreferences()方法</h4><p>这是一个静态方法，它接收一个Context参数，并使用当前应用程序的包名作为前缀来命名SharedPreferences文件。</p><p>得到了SharedPreferences对象之后，就可以开始向SharedPreferences文件中存储数据了，主要可以分为3步实现。</p><p>(1) 调用SharedPreferences对象的edit()方法来获取一个SharedPreferences.Editor对象。</p><p>(2) 向SharedPreferences.Editor对象中添加数据，比如添加一个布尔型数据就使用putBoolean()方法，添加一个字符串则使用putString()方法，以此类推。</p><p>(3) 调用apply()方法将添加的数据提交，从而完成数据存储操作。</p><p>通过一个例子来体验一下SharedPreferences存储的用法吧。新建一个SharedPreferencesTest项目，然后修改activity_main.xml中的代码：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/save_data<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Save data<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只是简单地放置了一个按钮，用于将一些数据存储到SharedPreferences文件当中。然后修改MainActivity中的代码:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>sharedpreferencestest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">SharedPreferences</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button<span class="token operator">=</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>save_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        button<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">SharedPreferences<span class="token punctuation">.</span>Editor</span> editor <span class="token operator">=</span><span class="token function">getSharedPreferences</span><span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">,</span><span class="token constant">MODE_PRIVATE</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">edit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                editor<span class="token punctuation">.</span><span class="token function">putString</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">"Tom"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                editor<span class="token punctuation">.</span><span class="token function">putBoolean</span><span class="token punctuation">(</span><span class="token string">"married"</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                editor<span class="token punctuation">.</span><span class="token function">putInt</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                editor<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，这里首先给按钮注册了一个点击事件，然后在点击事件中通过getSharedPreferences()方法指定SharedPreferences的文件名为data，并得到了SharedPreferences.Editor对象。接着向这个对象中添加了3条不同类型的数据，最后调用apply()方法进行提交，从而完成了数据存储的操作。</p><p>现在就可以运行一下程序了，进入程序的主界面后，点击一下Save data按钮。这时的数据应该已经保存成功了，证实一下，进入&#x2F;data&#x2F;data&#x2F;com.example.sharedpreferencestest&#x2F;shared_prefs&#x2F;目录下，可以看到生成了一个data.xml文件，如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304191101637.png"></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304191102228.png"></p><p>在按钮的点击事件中添加的所有数据都已经成功保存下来了，并且SharedPreferences文件是使用XML格式来对数据进行管理的。那么接下来我们自然要看一看，如何从SharedPreferences文件中去读取这些数据了。</p><h3 id="3-2、从SharedPreferences中读取数据"><a href="#3-2、从SharedPreferences中读取数据" class="headerlink" title="3.2、从SharedPreferences中读取数据"></a>3.2、从SharedPreferences中读取数据</h3><p>使用SharedPreferences来存储数据是非常简单的，从SharedPreferences文件中读取数据会更加地简单。</p><p>SharedPreferences对象中提供了一系列的get方法，用于对存储的数据进行读取，每种get方法都对应了SharedPreferences.Editor中的一种put方法，比如读取一个布尔型数据就使用getBoolean()方法，读取一个字符串就使用getString()方法。</p><p>这些get方法都接收两个参数，第一个参数是键，传入存储数据时使用的键就可以得到相应的值了；第二个参数是默认值，即表示当传入的键找不到对应的值时会以什么样的默认值进行返回。</p><p>在SharedPreferencesTest项目的基础上继续开发，修改activity_main.xml中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token class-name">LinearLayout</span> xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span>    android<span class="token operator">:</span>orientation<span class="token operator">=</span><span class="token string">"vertical"</span>    android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>    android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token class-name">Button</span>        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/save_data"</span>        android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"Save data"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token class-name">Button</span>        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/restore_data"</span>        android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"Restore data"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token class-name">LinearLayout</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>增加了一个还原数据的按钮，通过点击这个按钮来从SharedPreferences文件中读取数据。修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>sharedpreferencestest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">SharedPreferences</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Log</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button<span class="token operator">=</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>save_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> reStoreData<span class="token operator">=</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>restore_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        button<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">SharedPreferences<span class="token punctuation">.</span>Editor</span> editor <span class="token operator">=</span><span class="token function">getSharedPreferences</span><span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">,</span><span class="token constant">MODE_PRIVATE</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">edit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                editor<span class="token punctuation">.</span><span class="token function">putString</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">"Tom"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                editor<span class="token punctuation">.</span><span class="token function">putBoolean</span><span class="token punctuation">(</span><span class="token string">"married"</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                editor<span class="token punctuation">.</span><span class="token function">putInt</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                editor<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        reStoreData<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">SharedPreferences</span> pref<span class="token operator">=</span><span class="token function">getSharedPreferences</span><span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">,</span><span class="token constant">MODE_PRIVATE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> name<span class="token operator">=</span>pref<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> age<span class="token operator">=</span>pref<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">boolean</span> married<span class="token operator">=</span>pref<span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span><span class="token string">"married"</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span><span class="token punctuation">,</span><span class="token string">"name is "</span><span class="token operator">+</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span><span class="token punctuation">,</span><span class="token string">"age is "</span><span class="token operator">+</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"Mainactivity"</span><span class="token punctuation">,</span><span class="token string">"married is "</span><span class="token operator">+</span>married<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在还原数据按钮的点击事件中首先通过getSharedPreferences()方法得到了SharedPreferences对象，然后分别调用它的getString()、getInt()和getBoolean()方法，去获取前面所存储的姓名、年龄和是否已婚，如果没有找到相应的值，就会使用方法中传入的默认值来代替，最后通过Log将这些值打印出来。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304191619805.png"></p><h3 id="3-3、实现记住密码功能"><a href="#3-3、实现记住密码功能" class="headerlink" title="3.3、实现记住密码功能"></a>3.3、实现记住密码功能</h3><p>在上一章中的最佳实践部分已经编写过一个登录界面了，那就首先打开BroadcastBestPractice项目，来编辑一下登录界面的布局。修改activity_login.xml中的代码，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>horizontal<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>60dp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>90dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center_vertical<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Account:<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EditText</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/account<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center_vertical<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>horizontal<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>60dp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>90dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center_vertical<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Password<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EditText</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/password<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center_vertical<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>inputType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>textPassword<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>horizontal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CheckBox</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/checkbox<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Remember password<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/login<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>60dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Login<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用到了一个新控件CheckBox。这是一个复选框控件，用户可以通过点击的方式来进行选中和取消，我们就使用这个控件来表示用户是否需要记住密码。然后修改LoginActivity中的代码</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>horizontal<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>90dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center_vertical<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Account:<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EditText</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/account<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center_vertical<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>horizontal<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>60dp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>90dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center_vertical<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Password<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EditText</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/password<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center_vertical<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>inputType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>textPassword<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>horizontal<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CheckBox</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/remember_pass<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Remember password<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/login<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>60dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Login<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用到了一个新控件CheckBox。这是一个复选框控件，用户可以通过点击的方式来进行选中和取消，我们就使用这个控件来表示用户是否需要记住密码。然后修改LoginActivity中的代码，</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>broadcasttest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Intent</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">SharedPreferences</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>preference<span class="token punctuation">.</span></span><span class="token class-name">PreferenceManager</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">CheckBox</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">EditText</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Nullable</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginActivity</span> <span class="token keyword">extends</span> <span class="token class-name">BaseActivity</span><span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">EditText</span> accountEdit<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">EditText</span> passwordEdit<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Button</span> login<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">SharedPreferences</span> pref<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">SharedPreferences<span class="token punctuation">.</span>Editor</span> editor<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">CheckBox</span> checkBox<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_login<span class="token punctuation">)</span><span class="token punctuation">;</span>        pref<span class="token operator">=</span> <span class="token class-name">PreferenceManager</span><span class="token punctuation">.</span><span class="token function">getDefaultSharedPreferences</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        accountEdit<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">EditText</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>account<span class="token punctuation">)</span><span class="token punctuation">;</span>        passwordEdit<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">EditText</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>        checkBox<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">CheckBox</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>remember_pass<span class="token punctuation">)</span><span class="token punctuation">;</span>        login <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>login<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> isRemember<span class="token operator">=</span>pref<span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span><span class="token string">"remember_pass"</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>isRemember<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//一开始肯定是false</span>            <span class="token comment">//将账号喝密码都设置到文本框中</span>            <span class="token class-name">String</span> account <span class="token operator">=</span>pref<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"account"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> password <span class="token operator">=</span>pref<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            accountEdit<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>account<span class="token punctuation">)</span><span class="token punctuation">;</span>            passwordEdit<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>            checkBox<span class="token punctuation">.</span><span class="token function">setChecked</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        login<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">String</span> account<span class="token operator">=</span>accountEdit<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> password<span class="token operator">=</span>passwordEdit<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>account<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>password<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    editor<span class="token operator">=</span>pref<span class="token punctuation">.</span><span class="token function">edit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>checkBox<span class="token punctuation">.</span><span class="token function">isChecked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//检验复选框是否被选中</span>                        editor<span class="token punctuation">.</span><span class="token function">putBoolean</span><span class="token punctuation">(</span><span class="token string">"remember_pass"</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        editor<span class="token punctuation">.</span><span class="token function">putString</span><span class="token punctuation">(</span><span class="token string">"account"</span><span class="token punctuation">,</span>account<span class="token punctuation">)</span><span class="token punctuation">;</span>                        editor<span class="token punctuation">.</span><span class="token function">putString</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                        editor<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                    editor<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">Intent</span> intent<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token class-name">LoginActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token class-name">LoginActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"account or password is error!"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>首先在onCreate()方法中获取到了SharedPreferences对象。</li><li>然后调用它的getBoolean()方法去获取remember_pass这个键对应的值。（一开始当然不存在对应的值了，所以会使用默认值false，这样就什么都不会发生。）</li><li>接着在登录成功之后，会调用CheckBox的isChecked()方法来检查复选框是否被选中。（如果被选中了，则表示用户想要记住密码，这时将remember_pass设置为true，然后把account和password对应的值都存入到SharedPreferences文件当中并提交。如果没有被选中，就简单地调用一下clear()方法，将SharedPreferences文件中的数据全部清除掉。）</li></ol><p>当用户选中了记住密码复选框，并成功登录一次之后，remember_pass键对应的值就是true了，这个时候如果再重新启动登录界面，就会从SharedPreferences文件中将保存的账号和密码都读取出来，并填充到文本输入框中，然后把记住密码复选框选中，这样就完成记住密码的功能了。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304200054709.png"></p><p>这样我们就使用SharedPreferences技术将记住密码功能成功实现了。不过需要注意，这里实现的记住密码功能仍然只是个简单的示例，并不能在实际的项目中直接使用。因为将密码以明文的形式存储在SharedPreferences文件中是非常不安全的，很容易就会被别人盗取，因此在正式的项目里还需要结合一定的加密算法来对密码进行保护才行。</p><h2 id="4、SQLite数据库存储"><a href="#4、SQLite数据库存储" class="headerlink" title="4、SQLite数据库存储"></a>4、SQLite数据库存储</h2><p>SQLite是一款轻量级的关系型数据库，它的运算速度非常快，占用资源很少，通常只需要几百KB的内存就足够了，因而特别适合在移动设备上使用。SQLite不仅支持标准的SQL语法，还遵循了数据库的ACID事务。而<strong>SQLite又比一般的数据库要简单得多，它甚至不用设置用户名和密码就可以使用</strong>。Android正是把这个功能极为强大的数据库嵌入到了系统当中，使得本地持久化的功能有了一次质的飞跃。</p><p>前面所学的文件存储和SharedPreferences存储毕竟只适用于保存一些简单的数据和键值对，当需要存储大量复杂的关系型数据的时候，你就会发现以上两种存储方式很难应付得了。比如我们手机的短信程序中可能会有很多个会话，每个会话中又包含了很多条信息内容，并且大部分会话还可能各自对应了电话簿中的某个联系人。很难想象如何用文件或者SharedPreferences来存储这些数据量大、结构性复杂的数据吧？但是使用数据库就可以做得到。</p><h3 id="4-1、创建数据库"><a href="#4-1、创建数据库" class="headerlink" title="4.1、创建数据库"></a>4.1、创建数据库</h3><p>Android为了让我们能够更加方便地管理数据库，专门提供了一个SQLiteOpenHelper帮助类，借助这个类就可以非常简单地对数据库进行创建和升级。</p><p>1、SQLiteOpenHelper是一个抽象类，这意味着如果想要使用它的话，就需要创建一个自己的帮助类去继承它。</p><ul><li>SQLiteOpenHelper中有两个抽象方法，分别是onCreate()和onUpgrade()，必须在自己的帮助类里面重写这两个方法，然后分别在这两个方法中去实现创建、升级数据库的逻辑。</li></ul><p>2、SQLiteOpenHelper中还有两个非常重要的实例方法：getReadableDatabase()和getWritableDatabase()。</p><ul><li><p>这两个方法都可以创建或打开一个现有的数据库（如果数据库已存在则直接打开，否则创建一个新的数据库），并返回一个可对数据库进行读写操作的对象。</p></li><li><p>不同的是，当数据库不可写入的时候（如磁盘空间已满）,getReadableDatabase()方法返回的对象将以只读的方式去打开数据库，而getWritableDatabase()方法则将出现异常。</p></li></ul><p>3、SQLiteOpenHelper中有两个构造方法可供重写，一般使用参数少一点的那个构造方法即可。</p><ul><li>这个构造方法中接收4个参数，第一个参数是Context，必须要有它才能对数据库进行操作。</li><li>第二个参数是数据库名，创建数据库时使用的就是这里指定的名称。</li><li>第三个参数允许我们在查询数据的时候返回一个自定义的Cursor，一般都是传入null。</li><li>第四个参数表示当前数据库的版本号，可用于对数据库进行升级操作。</li></ul><p>4、构建出SQLiteOpenHelper的实例之后，再调用它的getReadableDatabase()或getWritableDatabase()方法就能够创建数据库了，数据库文件会存放在&#x2F;data&#x2F;data&#x2F;包名&#x2F;databases&#x2F;目录下。此时，重写的onCreate()方法也会得到执行，所以通常会在这里去处理一些创建表的逻辑。</p><p>接下来通过例子来更加直观地体会SQLiteOpenHelper的用法吧，首先新建一个DatabaseTest项目。这里我们希望创建一个名为BookStore.db的数据库，然后在这个数据库中新建一张Book表，表中有id（主键）、作者、价格、页数和书名等列。创建数据库表当然还是需要用建表语句的，Book表的建表语句如下所示：</p><pre class="line-numbers language-sqlite" data-language="sqlite"><code class="language-sqlite">create table Book (    id integer primary key autoincrement,    author text,    price real,    pages integer,    name text)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>SQLite不像其他的数据库拥有众多繁杂的数据类型，它的数据类型很简单，integer表示整型，real表示浮点型，text表示文本类型，blob表示二进制类型。另外，上述建表语句中我们还使用了primary key将id列设为主键，并用autoincrement关键字表示id列是自增长的。</p><p>然后需要在代码中去执行这条SQL语句，才能完成创建表的操作。新建MyDatabaseHelper类继承自SQLiteOpenHelper，代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>database<span class="token punctuation">.</span>sqlite<span class="token punctuation">.</span></span><span class="token class-name">SQLiteDatabase</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>database<span class="token punctuation">.</span>sqlite<span class="token punctuation">.</span></span><span class="token class-name">SQLiteOpenHelper</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyDatabaseHelper</span> <span class="token keyword">extends</span> <span class="token class-name">SQLiteOpenHelper</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">CREATE_BOOK</span> <span class="token operator">=</span><span class="token string">"create table Book ("</span> <span class="token operator">+</span>            <span class="token string">"    id integer primary key autoincrement,\n"</span> <span class="token operator">+</span>            <span class="token string">"    author text,"</span> <span class="token operator">+</span>            <span class="token string">"    price real,"</span> <span class="token operator">+</span>            <span class="token string">"    pages integer,"</span> <span class="token operator">+</span>            <span class="token string">"    name text)"</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Context</span> mContext<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">MyDatabaseHelper</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">SQLiteDatabase<span class="token punctuation">.</span>CursorFactory</span> factory<span class="token punctuation">,</span><span class="token keyword">int</span> version<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span>name<span class="token punctuation">,</span>factory<span class="token punctuation">,</span>version<span class="token punctuation">)</span><span class="token punctuation">;</span>        mContext<span class="token operator">=</span>context<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">SQLiteDatabase</span> sqLiteDatabase<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        sqLiteDatabase<span class="token punctuation">.</span><span class="token function">execSQL</span><span class="token punctuation">(</span><span class="token constant">CREATE_BOOK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>mContext<span class="token punctuation">,</span> <span class="token string">"Create Succeeded!"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onUpgrade</span><span class="token punctuation">(</span><span class="token class-name">SQLiteDatabase</span> sqLiteDatabase<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> i1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，我们把建表语句定义成了一个字符串常量，然后在onCreate()方法中又调用了SQLiteDatabase的execSQL()方法去执行这条建表语句，并弹出一个Toast提示创建成功，这样就可以保证在数据库创建完成的同时还能成功创建Book表。现在修改activity_main.xml中的代码，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/create_database<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Create database<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>布局文件很简单，就是加入了一个按钮，用于创建数据库。最后修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">MyDatabaseHelper</span> myDatabaseHelper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>create_database<span class="token punctuation">)</span><span class="token punctuation">;</span>        myDatabaseHelper<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">MyDatabaseHelper</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"BookStore.db"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        button<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                myDatabaseHelper<span class="token punctuation">.</span><span class="token function">getWritableDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里我们在onCreate()方法中构建了一个MyDatabaseHelper对象，并且通过构造函数的参数将数据库名指定为BookStore.db，版本号指定为1，然后在Create database按钮的点击事件里调用了getWritableDatabase()方法.这样当第一次点击Create database按钮时，就会检测到当前程序中并没有BookStore.db这个数据库，于是会创建该数据库并调用MyDatabaseHelper中的onCreate()方法，这样Book表也就得到了创建，然后会弹出一个Toast提示创建成功。再次点击Create database按钮时，会发现此时已经存在BookStore.db数据库了，因此不会再创建一次。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304200154561.png"></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304200155216.png"></p><p>如果还是使用FileExplorer，那么最多只能看到databases目录下出现了一个BookStore.db文件，Book表是无法通过FileExplorer看到的。因此这次我们准备换一种查看方式，使用adb shell来对数据库和表的创建情况进行检查</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304200157720.png"></p><p>接下来我们就要借助sqlite命令来打开数据库了，只需要键入sqlite3，后面加上数据库名即可，如图所示：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304201142793.png"></p><p>这时就已经打开了BookStore.db数据库，现在就可以对这个数据库中的表进行管理了。首先来看一下目前数据库中有哪些表，键入.table命令</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304201142960.png"></p><p>可以看到，此时数据库中有两张表，android_metadata表是每个数据库中都会自动生成的，不用管它，而另外一张Book表就是我们在MyDatabaseHelper中创建的了。这里还可以通过.schema命令来查看它们的建表语句，如图所示：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304201143137.png"></p><p>由此证明，BookStore.db数据库和Book表确实已经创建成功了。之后键入.exit或.quit命令可以退出数据库的编辑，再键入exit命令就可以退出设备控制台了。</p><h3 id="4-2、升级数据库"><a href="#4-2、升级数据库" class="headerlink" title="4.2、升级数据库"></a>4.2、升级数据库</h3><p>MyDatabaseHelper中还有一个onUpgrade()方法是用于对数据库进行升级的，它在整个数据库的管理工作当中起着非常重要的作用，可千万不能忽视它哟。目前DatabaseTest项目中已经有一张Book表用于存放书的各种详细数据，如果我们想再添加一张Category表用于记录图书的分类，该怎么做呢？比如Category表中有id（主键）、分类名和分类代码这几个列，那么建表语句就可以写成：</p><pre class="line-numbers language-sqlite" data-language="sqlite"><code class="language-sqlite">create table Category (    id integer primary key autoincrement,    category_name text,    category_code integer)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>接下来我们将这条建表语句添加到MyDatabaseHelper中，代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>database<span class="token punctuation">.</span>sqlite<span class="token punctuation">.</span></span><span class="token class-name">SQLiteDatabase</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>database<span class="token punctuation">.</span>sqlite<span class="token punctuation">.</span></span><span class="token class-name">SQLiteOpenHelper</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyDatabaseHelper</span> <span class="token keyword">extends</span> <span class="token class-name">SQLiteOpenHelper</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">CREATE_BOOK</span> <span class="token operator">=</span><span class="token string">"create table Book ("</span> <span class="token operator">+</span>            <span class="token string">"    id integer primary key autoincrement,\n"</span> <span class="token operator">+</span>            <span class="token string">"    author text,"</span> <span class="token operator">+</span>            <span class="token string">"    price real,"</span> <span class="token operator">+</span>            <span class="token string">"    pages integer,"</span> <span class="token operator">+</span>            <span class="token string">"    name text)"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">CREATE_CATEGORY</span> <span class="token operator">=</span><span class="token string">"create table Category ("</span> <span class="token operator">+</span>            <span class="token string">"    id integer primary key autoincrement,"</span> <span class="token operator">+</span>            <span class="token string">"    category_name text,"</span> <span class="token operator">+</span>            <span class="token string">"    category_code integer)"</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Context</span> mContext<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">MyDatabaseHelper</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">SQLiteDatabase<span class="token punctuation">.</span>CursorFactory</span> factory<span class="token punctuation">,</span><span class="token keyword">int</span> version<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span>name<span class="token punctuation">,</span>factory<span class="token punctuation">,</span>version<span class="token punctuation">)</span><span class="token punctuation">;</span>        mContext<span class="token operator">=</span>context<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">SQLiteDatabase</span> sqLiteDatabase<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        sqLiteDatabase<span class="token punctuation">.</span><span class="token function">execSQL</span><span class="token punctuation">(</span><span class="token constant">CREATE_BOOK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sqLiteDatabase<span class="token punctuation">.</span><span class="token function">execSQL</span><span class="token punctuation">(</span><span class="token constant">CREATE_CATEGORY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>mContext<span class="token punctuation">,</span> <span class="token string">"Create Succeeded!"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onUpgrade</span><span class="token punctuation">(</span><span class="token class-name">SQLiteDatabase</span> sqLiteDatabase<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> i1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看上去好像都挺对的吧？现在我们重新运行一下程序，并点击Createdatabase按钮，竟然没有弹出创建成功的提示。当然，你也可以通过adb工具到数据库中再去检查一下，这样你会更加确认没有创建成功，因为此时BookStore.db数据库已经存在了，之后不管我们怎样点击Create database按钮，MyDatabaseHelper中的onCreate()方法都不会再次执行，因此新添加的表也就无法得到创建了。</p><p>解决这个问题的办法也相当简单，只需要先将程序卸载掉，然后重新运行，这时BookStore.db数据库已经不存在了，如果再点击Create database按钮，MyDatabaseHelper中的onCreate()方法就会执行，这时Category表就可以创建成功了。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304201152105.png"></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304201156460.png"></p><p>不过，通过卸载程序的方式来新增一张表毫无疑问是很极端的做法，其实我们只需要巧妙地运用SQLiteOpenHelper的升级功能就可以很轻松地解决这个问题。修改MyDatabaseHelper中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyDatabaseHelper</span> <span class="token keyword">extends</span> <span class="token class-name">SQLiteOpenHelper</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onUpgrade</span><span class="token punctuation">(</span><span class="token class-name">SQLiteDatabase</span> sqLiteDatabase<span class="token punctuation">,</span> <span class="token keyword">int</span> oldVersion<span class="token punctuation">,</span> <span class="token keyword">int</span> newVersion<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        sqLiteDatabase<span class="token punctuation">.</span><span class="token function">execSQL</span><span class="token punctuation">(</span><span class="token string">"drop table if exists Book"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sqLiteDatabase<span class="token punctuation">.</span><span class="token function">execSQL</span><span class="token punctuation">(</span><span class="token string">"drop table if exists Category"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">onCreate</span><span class="token punctuation">(</span>sqLiteDatabase<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，我们在onUpgrade()方法中执行了两条DROP语句，如果发现数据库中已经存在Book表或Category表了，就将这两张表删除掉，然后再调用onCreate()方法重新创建。这里先将已经存在的表删除掉，因为如果在创建表时发现这张表已经存在了，就会直接报错。</p><p>接下来的问题就是如何让onUpgrade()方法能够执行了，还记得SQLiteOpenHelper的构造方法里接收的第四个参数吗？它表示当前数据库的版本号，之前我们传入的是1，现在只要传入一个比1大的数，就可以让onUpgrade()方法得到执行了。修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">MyDatabaseHelper</span> myDatabaseHelper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>create_database<span class="token punctuation">)</span><span class="token punctuation">;</span>        myDatabaseHelper<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">MyDatabaseHelper</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"BookStore.db"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        button<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                myDatabaseHelper<span class="token punctuation">.</span><span class="token function">getWritableDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里将数据库版本号指定为2，表示我们对数据库进行升级了。现在重新运行程序，并点击Create database按钮，这时就会再次弹出创建成功的提示。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304201206871.png"></p><p>为了验证一下Category表是不是已经创建成功了，我们在adb shell中打开BookStore.db数据库，然后键入.table命令，结果如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304201207913.png"></p><h3 id="4-3、添加数据"><a href="#4-3、添加数据" class="headerlink" title="4.3、添加数据"></a>4.3、添加数据</h3><p>我们可以对数据进行的操作无非有4种，即CRUD。其中C代表添加（Create）, R代表查询（Retrieve）, U代表更新（Update）,D代表删除（Delete）。每一种操作又各自对应了一种SQL命令，添加数据时使用insert，查询数据时使用select，更新数据时使用update，删除数据时使用delete。但是开发者的水平总会是参差不齐的，未必每一个人都能非常熟悉地使用SQL语言，因此Android也提供了一系列的辅助性方法，使得在Android中即使不去编写SQL语句，也能轻松完成所有的CRUD操作。</p><p>前面我们已经知道，调用SQLiteOpenHelper的getReadableDatabase()或getWritableDatabase()方法是可以用于创建和升级数据库的，不仅如此，这两个方法还都会返回一个SQLiteDatabase对象，借助这个对象就可以对数据进行CRUD操作了。</p><p>SQLiteDatabase中提供了一个insert()方法，这个方法就是专门用于添加数据的。它接收3个参数：</p><ul><li>第一个参数是表名，我们希望向哪张表里添加数据。</li><li>第二个参数用于在未指定添加数据的情况下给某些可为空的列自动赋值NULL，一般我们用不到这个功能，直接传入null即可。</li><li>第三个参数是一个ContentValues对象，它提供了一系列的put()方法重载，用于向ContentValues中添加数据，只需要将表中的每个列名以及相应的待添加数据传入即可。</li></ul><p>首先修改activity_main.xml中的代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token class-name">LinearLayout</span> xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span>    android<span class="token operator">:</span>orientation<span class="token operator">=</span><span class="token string">"vertical"</span>    android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>    android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token class-name">Button</span>        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/create_database"</span>        android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"Create database"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token class-name">Button</span>        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/add_data"</span>        android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"Add data"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token class-name">LinearLayout</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在布局文件中又新增了一个按钮，稍后就会在这个按钮的点击事件里编写添加数据的逻辑。接着修改MainActivity中的代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">ContentValues</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>database<span class="token punctuation">.</span>sqlite<span class="token punctuation">.</span></span><span class="token class-name">SQLiteDatabase</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">MyDatabaseHelper</span> myDatabaseHelper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>create_database<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> addButton <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>add_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        addButton<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">SQLiteDatabase</span> db<span class="token operator">=</span>myDatabaseHelper<span class="token punctuation">.</span><span class="token function">getWritableDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">ContentValues</span> contentValues<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                contentValues<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">"Tom's Life"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                contentValues<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"author"</span><span class="token punctuation">,</span><span class="token string">"Jack"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                contentValues<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"pages"</span><span class="token punctuation">,</span><span class="token number">454</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                contentValues<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"price"</span><span class="token punctuation">,</span><span class="token number">16.96</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                db<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">"Book"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span>contentValues<span class="token punctuation">)</span><span class="token punctuation">;</span>                contentValues<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                contentValues<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">"Nioooe's Life"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                contentValues<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"author"</span><span class="token punctuation">,</span><span class="token string">"Brown"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                contentValues<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"pages"</span><span class="token punctuation">,</span><span class="token number">332</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                contentValues<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"price"</span><span class="token punctuation">,</span><span class="token number">20.66</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                db<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">"Book"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span>contentValues<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        myDatabaseHelper<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">MyDatabaseHelper</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"BookStore.db"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        button<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                myDatabaseHelper<span class="token punctuation">.</span><span class="token function">getWritableDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在添加数据按钮的点击事件里面，我们先获取到了SQLiteDatabase对象，然后使用ContentValues来对要添加的数据进行组装。</p><p>这里只对Book表里其中四列的数据进行了组装，id那一列并没给它赋值。因为在前面创建表的时候，我们就将id列设置为自增长了，它的值会在入库的时候自动生成，所以不需要手动给它赋值了。</p><p>接下来调用了insert()方法将数据添加到表当中，注意这里我们实际上添加了两条数据，上述代码中使用ContentValues分别组装了两次不同的内容，并调用了两次insert()方法。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304201709930.png"></p><h3 id="4-4、更新数据"><a href="#4-4、更新数据" class="headerlink" title="4.4、更新数据"></a>4.4、更新数据</h3><p>SQLiteDatabase中也提供了一个非常好用的update()方法，用于对数据进行更新，这个方法接收4个参数:</p><ul><li>第一个参数和insert()方法一样，也是表名，在这里指定去更新哪张表里的数据。</li><li>第二个参数是ContentValues对象，要把更新数据在这里组装进去。</li><li>第三、第四个参数用于约束更新某一行或某几行中的数据，不指定的话默认就是更新所有行。</li></ul><p>那么接下来仍然是在DatabaseTest项目的基础上修改，看一下更新数据的具体用法。比如说刚才添加到数据库里的第一本书，由于过了畅销季，卖得不是很火了，现在需要通过降低价格的方式来吸引更多的顾客，我们应该怎么操作呢？首先修改activity_main.xml中的代码，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/create_database<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Create database<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/add_data<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Add data<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/update_data<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Update data<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>布局文件中的代码已经非常简单了，就是添加了一个用于更新数据的按钮。然后修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">ContentValues</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>database<span class="token punctuation">.</span>sqlite<span class="token punctuation">.</span></span><span class="token class-name">SQLiteDatabase</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">MyDatabaseHelper</span> myDatabaseHelper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>create_database<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> addButton <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>add_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> updateData<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>update_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        updateData<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">SQLiteDatabase</span> db <span class="token operator">=</span>myDatabaseHelper<span class="token punctuation">.</span><span class="token function">getWritableDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">ContentValues</span> contentValues<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                contentValues<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"price"</span><span class="token punctuation">,</span><span class="token number">9.99</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                db<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">"Book"</span><span class="token punctuation">,</span>contentValues<span class="token punctuation">,</span><span class="token string">"name = ?"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"Tom's Life"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>        <span class="token punctuation">&#125;</span>        <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304201725115.png"></p><p>这里在更新数据按钮的点击事件里面构建了一个ContentValues对象，并且只给它指定了一组数据，说明我们只是想把价格这一列的数据更新成9.99。然后调用了SQLiteDatabase的update()方法去执行具体的更新操作，可以看到，这里使用了第三、第四个参数来指定具体更新哪几行。第三个参数对应的是SQL语句的where部分，表示更新所有name等于？的行，而？是一个占位符，可以通过第四个参数提供的一个字符串数组为第三个参数中的每个占位符指定相应的内容。</p><p>现在重新运行一下程序，点击一下Update data按钮后，再次输入查询语句查看表中的数据情况，可以看到，Tom’s Life 这本书的价格已经被成功改为9.99了。</p><h3 id="4-5、删除数据"><a href="#4-5、删除数据" class="headerlink" title="4.5、删除数据"></a>4.5、删除数据</h3><p>SQLiteDatabase中提供了一个delete()方法，专门用于删除数据，这个方法接收3个参数，第一个参数仍然是表名，第二、第三个参数又是用于约束删除某一行或某几行的数据，不指定的话默认就是删除所有行。修改activity_main.xml中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token class-name">LinearLayout</span> xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span>    android<span class="token operator">:</span>orientation<span class="token operator">=</span><span class="token string">"vertical"</span>    android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>    android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span><span class="token operator">></span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token operator">&lt;</span><span class="token class-name">Button</span>        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/delete_data"</span>        android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"Delete data"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token class-name">LinearLayout</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">ContentValues</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>database<span class="token punctuation">.</span>sqlite<span class="token punctuation">.</span></span><span class="token class-name">SQLiteDatabase</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">MyDatabaseHelper</span> myDatabaseHelper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>create_database<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> addButton <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>add_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> updateData<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>update_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> deleteData<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>delete_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        deleteData<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">SQLiteDatabase</span> db<span class="token operator">=</span>myDatabaseHelper<span class="token punctuation">.</span><span class="token function">getWritableDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                db<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">"Book"</span><span class="token punctuation">,</span><span class="token string">"pages > ?"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"500"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span>        <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，我们在删除按钮的点击事件里指明去删除Book表中的数据，并且通过第二、第三个参数来指定仅删除那些页数超过500页的书。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304201740982.png"></p><h3 id="4-6、查询数据"><a href="#4-6、查询数据" class="headerlink" title="4.6、查询数据"></a>4.6、查询数据</h3><p>SQLiteDatabase中还提供了一个query()方法用于对数据进行查询。这个方法的参数非常复杂，最短的一个方法重载也需要传入7个参数。</p><p> <img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304201743161.png"></p><ul><li>第一个参数不用说，当然还是表名，表示我们希望从哪张表中查询数据。</li><li>第二个参数用于指定去查询哪几列，如果不指定则默认查询所有列。</li><li>第三、第四个参数用于约束查询某一行或某几行的数据，不指定则默认查询所有行的数据。</li><li>第五个参数用于指定需要去group by的列，不指定则表示不对查询结果进行group by操作。</li><li>第六个参数用于对group by之后的数据进行进一步的过滤，不指定则表示不进行过滤。</li><li>第七个参数用于指定查询结果的排序方式，不指定则表示使用默认的排序方式。更多详细的内容可以参考下表。其他几个query()方法的重载其实也大同小异，可以自己去研究一下。</li></ul><p>虽然query()方法的参数非常多，但是不要对它产生畏惧，因为我们不必为每条查询语句都指定所有的参数，多数情况下只需要传入少数几个参数就可以完成查询操作了。调用query()方法后会返回一个Cursor对象，查询到的所有数据都将从这个对象中取出。下面还是让我们通过例子的方式来体验一下查询数据的具体用法，修改activity_main.xml中的代码，如下所示</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    ...    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/query_data<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Query data<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>添加了一个按钮用于查询数据。然后修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">SuppressLint</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">ContentValues</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>database<span class="token punctuation">.</span></span><span class="token class-name">Cursor</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>database<span class="token punctuation">.</span>sqlite<span class="token punctuation">.</span></span><span class="token class-name">SQLiteDatabase</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Log</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">MyDatabaseHelper</span> myDatabaseHelper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>create_database<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> addButton <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>add_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> updateData<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>update_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> deleteData<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>delete_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> queryData<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>query_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        queryData<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">SQLiteDatabase</span> db <span class="token operator">=</span>myDatabaseHelper<span class="token punctuation">.</span><span class="token function">getWritableDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Cursor</span> cursor<span class="token operator">=</span>db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"Book"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">moveToFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>                    <span class="token annotation punctuation">@SuppressLint</span><span class="token punctuation">(</span><span class="token string">"Range"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> name<span class="token operator">=</span>cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token annotation punctuation">@SuppressLint</span><span class="token punctuation">(</span><span class="token string">"Range"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> author <span class="token operator">=</span>cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">"author"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token annotation punctuation">@SuppressLint</span><span class="token punctuation">(</span><span class="token string">"Range"</span><span class="token punctuation">)</span>  <span class="token keyword">int</span> pages<span class="token operator">=</span>cursor<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">"pages"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token annotation punctuation">@SuppressLint</span><span class="token punctuation">(</span><span class="token string">"Range"</span><span class="token punctuation">)</span>  <span class="token keyword">double</span> price<span class="token operator">=</span>cursor<span class="token punctuation">.</span><span class="token function">getDouble</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">"price"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span><span class="token punctuation">,</span><span class="token string">"book name is "</span><span class="token operator">+</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span><span class="token punctuation">,</span><span class="token string">"author name is "</span><span class="token operator">+</span>author<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span><span class="token punctuation">,</span><span class="token string">"book pages is "</span> <span class="token operator">+</span>pages<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span><span class="token punctuation">,</span><span class="token string">"book price is "</span><span class="token operator">+</span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">moveToNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                cursor<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>       <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>       <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>首先在查询按钮的点击事件里面调用了SQLiteDatabase的query()方法去查询数据。这里的query()方法非常简单，只是使用了第一个参数指明去查询Book表，后面的参数全部为null。这就表示希望查询这张表中的所有数据。查询完之后就得到了一个Cursor对象，接着我们调用它的moveToFirst()方法将数据的指针移动到第一行的位置，然后进入了一个循环当中，去遍历查询到的每一行数据。在这个循环中可以通过Cursor的getColumnIndex()方法获取到某一列在表中对应的位置索引，然后将这个索引传入到相应的取值方法中，就可以得到从数据库中读取到的数据了。接着我们使用Log的方式将取出的数据打印出来，借此来检查一下读取工作有没有成功完成。最后别忘了调用close()方法来关闭Cursor。现在再次重新运行程序，点击一下Query data按钮后，查看logcat的打印内容，结果如图：</p><p>![image-20230420180221930](&#x2F;Users&#x2F;whitebird&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230420180221930.png)</p><p>这个例子只是对查询数据的用法进行了最简单的示范，在真正的项目中你可能会遇到比这要复杂得多的查询功能，更多高级的用法还需要你自己去慢慢摸索，毕竟query()方法中还有那么多的参数我们都还没用到呢。</p><h3 id="4-7、使用SQL操作数据库"><a href="#4-7、使用SQL操作数据库" class="headerlink" title="4.7、使用SQL操作数据库"></a>4.7、使用SQL操作数据库</h3><p>虽然Android已经给我们提供了很多非常方便的API用于操作数据库，不过总会有一些人不习惯去使用这些辅助性的方法，而是更加青睐于直接使用SQL来操作数据库。Android充分考虑到这种的编程习惯，同样提供了一系列的方法，使得可以直接通过SQL来操作数据库。下面简略演示一下，如何直接使用SQL来完成前面几小节中学过的CRUD操作。</p><ul><li>添加数据的方法如下：</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java">db<span class="token punctuation">.</span><span class="token function">execSQL</span><span class="token punctuation">(</span><span class="token string">"insert into Book(name,author,pages,price)values(?,?,?,?)"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"Mike'Life"</span><span class="token punctuation">,</span><span class="token string">"Tom"</span><span class="token punctuation">,</span><span class="token string">"333"</span><span class="token punctuation">,</span><span class="token string">"17.99"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                db<span class="token punctuation">.</span><span class="token function">execSQL</span><span class="token punctuation">(</span><span class="token string">"insert into Book(name,author,pages,price)values(?,?,?,?)"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"LLLL'Life"</span><span class="token punctuation">,</span><span class="token string">"Cim"</span><span class="token punctuation">,</span><span class="token string">"444"</span><span class="token punctuation">,</span><span class="token string">"27.99"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>更新数据的方法如下：</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java">db<span class="token punctuation">.</span><span class="token function">execSQL</span><span class="token punctuation">(</span><span class="token string">"update Book set price = ? where name = ? "</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"10.99"</span><span class="token punctuation">,</span><span class="token string">"The Da Vinci Code"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>删除数据的方法如下：</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java">db<span class="token punctuation">.</span><span class="token function">execSQL</span><span class="token punctuation">(</span><span class="token string">"delete from Book where pages > ? "</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> <span class="token string">"500"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>查询数据的方法如下：</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java">db<span class="token punctuation">.</span><span class="token function">rawQuery</span><span class="token punctuation">(</span><span class="token string">"select * from Book"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>除了查询数据的时候调用的是SQLiteDatabase的rawQuery()方法，其他的操作都是调用的execSQL()方法。</p><h2 id="5、使用LitePal操作数据库"><a href="#5、使用LitePal操作数据库" class="headerlink" title="5、使用LitePal操作数据库"></a>5、使用LitePal操作数据库</h2><p>新建一个LitePalTest项目，然后开始我们本节的学习之旅吧。</p><h3 id="5-1、LitePal简介"><a href="#5-1、LitePal简介" class="headerlink" title="5.1、LitePal简介"></a>5.1、LitePal简介</h3><p>现在开源的热潮让所有Android开发者都大大受益，GitHub上面有成百上千的优秀Android开源项目，很多之前我们要写很久才能实现的功能，使用开源库可能短短几分钟就能实现了。除此之外，公司里的代码非常强调稳定性，而我们自己写出的代码往往越复杂就越容易出问题。相反，开源项目的代码都是经过时间验证的，通常比我们自己的代码要稳定得多。因此，现在有很多公司为了追求开发效率以及项目稳定性，都会选择使用开源库。本书中我们将会学习多个开源库的使用方法，而现在你将正式开始接触第一个开源库——LitePal。</p><p>LitePal是一款开源的Android数据库框架，它采用了对象关系映射（ORM）的模式，并将我们平时开发最常用到的一些数据库功能进行了封装，使得不用编写一行SQL语句就可以完成各种建表和増删改查的操作。LitePal的项目主页上也有详细的使用文档，地址是：<a href="https://github.com/guolindev/LitePal%E3%80%82">https://github.com/guolindev/LitePal。</a></p><h3 id="5-2、配置LitePal"><a href="#5-2、配置LitePal" class="headerlink" title="5.2、配置LitePal"></a>5.2、配置LitePal</h3><p>那么怎样才能在项目中使用开源库呢？过去的方式比较复杂，通常需要下载开源库的Jar包或者源码，然后再集成到项目当中。而现在就简单得多了，大多数的开源项目都会将版本提交到jcenter上，只需要在app&#x2F;build.gradle文件中声明该开源库的引用就可以了。因此，要使用LitePal的第一步，就是编辑app&#x2F;build.gradle文件，在dependencies闭包中添加如下内容：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">implementation 'org.litepal.guolindev:core:3.2.3'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304201851477.png"></p><p>这样就把LitePal成功引入到当前项目中了，接下来需要配置litepal.xml文件。右击app&#x2F;src&#x2F;main目录→New→Directory，创建一个assets目录，然后在assets目录右击→New→File 再新建一个litepal.xml文件（.xml后缀要保留），接着编辑litepal.xml文件中的内容，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>litepal</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dbname</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>BookStore<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>list</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>list</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>litepal</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，<dbname>标签用于指定数据库名，<version>标签用于指定数据库版本号，<list>标签用于指定所有的映射模型，稍后就会用到</p><h3 id="5-3、创建和升级数据库"><a href="#5-3、创建和升级数据库" class="headerlink" title="5.3、创建和升级数据库"></a>5.3、创建和升级数据库</h3><p>之前创建数据库是通过自定义一个类继承自SQLiteOpenHelper，然后在onCreate()方法中编写建表语句来实现的，而使用LitePal就不用再这么麻烦了。先将activity_main.xml布局文件从DatabaseTest项目复制到LitePalTest项目中来。</p><p>LitePal采取的是对象关系映射（ORM）的模式，对象关系映射，简单点说，我们使用的编程语言是面向对象语言，而使用的数据库则是关系型数据库，那么将面向对象的语言和面向关系的数据库之间建立一种映射关系，这就是对象关系映射了。</p><p>对象关系映射模式，它赋予了我们一个强大的功能，就是可以用面向对象的思维来操作数据库，而不用再和SQL语句打交道了，为了创建一张Book表，需要先分析表中应该包含哪些列，然后再编写出一条建表语句，最后在自定义的SQLiteOpenHelper中去执行这条建表语句。但是使用LitePal，就可以用面向对象的思维来实现同样的功能了，定义一个Book类，代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>litepal</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Book</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> author<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> pages<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> price<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> id<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getAuthor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> author<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAuthor</span><span class="token punctuation">(</span><span class="token class-name">String</span> author<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>author <span class="token operator">=</span> author<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> price<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token keyword">double</span> price<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> pages<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPages</span><span class="token punctuation">(</span><span class="token keyword">int</span> pages<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>pages <span class="token operator">=</span> pages<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这是一个典型的Java bean，在Book类中定义了id、author、price、pages、name这几个字段，并生成了相应的getter和setter方法。Book类就会对应数据库中的Book表，而类中的每一个字段分别对应了表中的每一个列，这就是对象关系映射最直观的体验。</p><p>接下来我们还需要将Book类添加到映射模型列表当中，修改litepal.xml中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">?</span><span class="token operator">></span><span class="token generics"><span class="token punctuation">&lt;</span>litepal<span class="token punctuation">></span></span>    <span class="token operator">&lt;</span>dbname value<span class="token operator">=</span><span class="token string">"BookStore"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>version value<span class="token operator">=</span><span class="token string">"1"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token generics"><span class="token punctuation">&lt;</span>list<span class="token punctuation">></span></span>        <span class="token operator">&lt;</span>mapping <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"com.example.litepal.Book"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>mapping<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>list<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>litepal<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里使用<code>&lt;mapping&gt;</code>标签来声明要配置的映射模型类，注意一定要使用完整的类名。不管有多少模型类需要映射，都使用同样的方式配置在<code>&lt;list&gt;</code>标签下即可。这样就已经把所有工作都完成了，现在只要进行任意一次数据库的操作，BookStore.db数据库应该就会自动创建出来。那么我们修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>litepal</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> createdatabase<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>create_database<span class="token punctuation">)</span><span class="token punctuation">;</span>        createdatabase<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">LitePal</span><span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment">//可能会爆红，解决方法https://blog.csdn.net/qq_42924347/article/details/123809960</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，调用LitePal.getDatabase()方法就是一次最简单的数据库操作，只要点击一下按钮，数据库就会自动创建完成了。只要点击一下按钮，数据库就会自动创建完成了。运行一下程序，然后点击Createdatabase按钮，接着通过adb shell查看一下数据库创建情况，如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304211519961.png"></p><p>可以看到，这里有3张表的建表语句，其中android_metadata表仍然不用管，table_schema表是LitePal内部使用的，也可以直接忽视，book表就是根据我们定义的Book类以及类中的字段来自动生成的了。</p><p>虽说功能是实现了，但你有没有发现一个问题，就是升级数据库的时候我们需要先把之前的表drop掉，然后再重新创建才行。这其实是一个非常严重的问题，因为这样会造成数据丢失，每当升级一次数据库，之前表中的数据就全没了。当然如果你是非常有经验的程序员，也可以通过复杂的逻辑控制来避免这种情况，但是维护成本很高。而有了LitePal，这些就都不再是问题了，使用LitePal来升级数据库非常非常简单，你完全不用思考任何的逻辑，只需要改你想改的任何内容，然后将版本号加1就行了。比如我们想要向Book表中添加一个press（出版社）列，直接修改Book类中的代码，添加一个press字段即可，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>litepal</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Book</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> author<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> pages<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> price<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> press<span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getPress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> press<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPress</span><span class="token punctuation">(</span><span class="token class-name">String</span> press<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>press <span class="token operator">=</span> press<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>与此同时，我们还想再添加一张Category表，那么只需要新建一个Category类就可以了，代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>litepal</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Category</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> categoryName<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> categorycode<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCategorycode</span><span class="token punctuation">(</span><span class="token keyword">int</span> categorycode<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>categorycode <span class="token operator">=</span> categorycode<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCategoryName</span><span class="token punctuation">(</span><span class="token class-name">String</span> categoryName<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>categoryName <span class="token operator">=</span> categoryName<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>改完了所有我们想改的东西，只需要记得将版本号加1就行了。当然由于这里还添加了一个新的模型类，因此也需要将它添加到映射模型列表中。修改litepal.xml中的代码，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>litepal</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dbname</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>BookStore<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>list</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapping</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.litepal.Book<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapping</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.litepal.Category<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>list</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>litepal</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在重新运行一下程序，然后点击Create database按钮，再查看一下最新的建表语句，结果如图:</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304211547707.png"></p><p>可以看到，book表中新增了一个press列，category表也创建成功了，当然LitePal还自动帮我们做了一项非常重要的工作，就是保留之前表中的所有数据，这样就再也不用担心数据丢失的问题了。</p><h3 id="5-4、使用LitePal添加方法"><a href="#5-4、使用LitePal添加方法" class="headerlink" title="5.4、使用LitePal添加方法"></a>5.4、使用LitePal添加方法</h3><p>首先回顾一下之前添加数据的方法，我们需要创建出一个ContentValues对象，然后将所有要添加的数据put到这个ContentValues对象当中，最后再调用SQLiteDatabase的insert()方法将数据添加到数据库表当中。</p><p>而使用LitePal来添加数据，这些操作可以简单到让你惊叹！只需要创建出模型类的实例，再将所有要存储的数据设置好，最后调用一下save()方法就可以了。</p><p>下面开始来动手实现，观察现有的模型类，你会发现它们都是没有继承结构的。没错，因为LitePal进行表管理操作时不需要模型类有任何的继承结构，但是进行CRUD操作时就不行了，必须要继承自<strong>LitePalSupport类</strong>（书中的DataSupport类已经被弃用）才行，因此这里我们需要先把继承结构给加上。修改Book类中的代码，如下所示：</p><pre class="line-numbers language-none"><code class="language-none">package com.example.litepal;import org.litepal.crud.LitePalSupport;public class Book extends LitePalSupport &#123;...&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接着我们开始向Book表中添加数据，修改MainActivity中的代码，如下所示</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>litepal</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>litepal<span class="token punctuation">.</span></span><span class="token class-name">LitePal</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">kotlin<span class="token punctuation">.</span>experimental<span class="token punctuation">.</span></span><span class="token class-name">BitwiseOperationsKt</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> createdatabase<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>create_database<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> add_data<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>add_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        add_data<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Book</span> book<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Book</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                book<span class="token punctuation">.</span><span class="token function">setAuthor</span><span class="token punctuation">(</span><span class="token string">"Whitebird"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                book<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"Whitebird's life"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                book<span class="token punctuation">.</span><span class="token function">setPages</span><span class="token punctuation">(</span><span class="token number">345</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                book<span class="token punctuation">.</span><span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token number">99.99</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                book<span class="token punctuation">.</span><span class="token function">setPress</span><span class="token punctuation">(</span><span class="token string">"UnKnow"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                book<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        createdatabase<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">LitePal</span><span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在添加数据按钮的点击事件里面，首先是创建出了一个Book的实例，然后调用Book类中的各种set方法对数据进行设置，最后再调用book.save()方法就能完成数据添加操作了。</p><p>那么这个save()方法是从哪儿来的呢？当然是从LitePalSupport类中继承而来的了。除了save()方法之外，LitePalSupport类还给我们提供了丰富的CRUD方法，现在重新运行程序，点击一下Add data按钮，此时数据应该已经添加成功了，打开BookStore.db数据库，输入SQL查询语句select *fromBook，结果如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304211558056.png"></p><h3 id="5-5、使用LitePal更新数据"><a href="#5-5、使用LitePal更新数据" class="headerlink" title="5.5、使用LitePal更新数据"></a>5.5、使用LitePal更新数据</h3><p>使用LitePal更新数据。更新数据要比添加数据稍微复杂一点，因为它的API接口比较多，这里我们只介绍最常用的几种更新方式。·</p><p>首先，最简单的一种更新方式就是对已存储的对象重新设值，然后重新调用save()方法即可。那么这里我们就要了解一个概念，什么是已存储的对象？对于LitePal来说，对象是否已存储就是根据调用model.isSaved()方法的结果来判断的，返回true就表示已存储，返回false就表示未存储。</p><p>那么接下来的问题就是，什么情况下会返回true，什么情况下会返回false呢？实际上只有在两种情况下model.isSaved()方法才会返回true，一种情况是已经调用过model.save()方法去添加数据了，此时model会被认为是已存储的对象。另一种情况是model对象是通过LitePal提供的查询API查出来的，由于是从数据库中查到的对象，因此也会被认为是已存储的对象。由于查询API我们暂时还没学到，因此只能先通过第一种情况来进行验证。修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>litepal</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>litepal<span class="token punctuation">.</span></span><span class="token class-name">LitePal</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">kotlin<span class="token punctuation">.</span>experimental<span class="token punctuation">.</span></span><span class="token class-name">BitwiseOperationsKt</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> createdatabase<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>create_database<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> add_data<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>add_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> update_data<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>update_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        update_data<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Book</span> book<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Book</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                book<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"The first day"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                book<span class="token punctuation">.</span><span class="token function">setAuthor</span><span class="token punctuation">(</span><span class="token string">"Tom"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                book<span class="token punctuation">.</span><span class="token function">setPages</span><span class="token punctuation">(</span><span class="token number">132</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                book<span class="token punctuation">.</span><span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token number">23.33</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                book<span class="token punctuation">.</span><span class="token function">setPress</span><span class="token punctuation">(</span><span class="token string">"Unknow"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                book<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                book<span class="token punctuation">.</span><span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token number">10.99</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                book<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                        <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在更新数据按钮的点击事件里面，先是通过上一小节中学习的知识添加了一条Book数据，然后调用setPrice()方法将这本书的价格进行了修改，之后再次调用了save()方法。此时LitePal会发现当前的Book对象是已存储的，因此不会再向数据库中去添加一条新数据，而是会直接更新当前的数据。现在重新运行一下程序，然后点击Update data按钮，我们再次输入查询语句查看表中的数据情况，结果如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304211620899.png"></p><p>可以看到，Book表中新增了一条书的数据，但这本书的价格并不是一开始设置的23.33，而是10.99，说明我们的更新操作确实生效了。但是这种更新方式只能对已存储的对象进行操作，限制性比较大，接下来我们学习另外一种更加灵巧的更新方式。修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>litepal</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>litepal<span class="token punctuation">.</span></span><span class="token class-name">LitePal</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">kotlin<span class="token punctuation">.</span>experimental<span class="token punctuation">.</span></span><span class="token class-name">BitwiseOperationsKt</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> createdatabase<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>create_database<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> add_data<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>add_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> update_data<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>update_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        update_data<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Book</span> book<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Book</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                book<span class="token punctuation">.</span><span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token number">99.99</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                book<span class="token punctuation">.</span><span class="token function">setPress</span><span class="token punctuation">(</span><span class="token string">"Another"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                book<span class="token punctuation">.</span><span class="token function">updateAll</span><span class="token punctuation">(</span><span class="token string">"name = ? and author = ?"</span><span class="token punctuation">,</span><span class="token string">"The first day"</span><span class="token punctuation">,</span><span class="token string">"Tom"</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>        <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，这里首先new出了一个Book的实例，然后直接调用setPrice()和setPress()方法来设置要更新的数据，最后再调用updateAll()方法去执行更新操作。</p><p>注意updateAll()方法中可以指定一个条件约束，和SQLiteDatabase中update()方法的where参数部分有点类似，但更加简洁，如果不指定条件语句的话，就表示更新所有数据。现在重新运行程序并点击Update data按钮，我们再次查询一下表中的数据情况，结果如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304211627809.png"></p><p>LitePal的更新API明显比SQLiteDatabase的update()方法要好用多。</p><p>不过，在使用updateAll()方法时，还有一个非常重要的知识点，就是当你想把一个字段的值更新成默认值时，是不可以使用上面的方式来set数据的。我们都知道，在Java中任何一种数据类型的字段都会有默认值，例如int类型的默认值是0, boolean类型的默认值是false, String类型的默认值是null。那么当new出一个Book对象时，其实所有字段都已经被初识化成默认值了，比如说pages字段的值就是0。因此，如果我们想把数据库表中的pages列更新成0，直接调用book.setPages(0)是不可以的，因为即使不调用这行代码，pages字段本身也是0, LitePal此时是不会对这个列进行更新的。</p><p><strong>对于所有想要将为数据更新成默认值的操作，LitePal统一提供了一个setToDefault()方法，然后传入相应的列名就可以实现了。比如我们可以这样写：</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Book</span> book <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Book</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>book<span class="token punctuation">.</span><span class="token function">setToDefault</span><span class="token punctuation">(</span><span class="token string">"pages"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>book<span class="token punctuation">.</span><span class="token function">updateAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这段代码的意思是，将所有书的页数都更新为0，因为updateAll()方法中没有指定约束条件，因此更新操作对所有数据都生效了。</p><h3 id="5-6、使用LitePal删除数据"><a href="#5-6、使用LitePal删除数据" class="headerlink" title="5.6、使用LitePal删除数据"></a>5.6、使用LitePal删除数据</h3><p>使用LitePal删除数据的方式主要有两种，第一种比较简单，就是直接调用已存储对象的delete()方法就可以了，对于已存储对象的概念，我们在上一小节中已经学习过了。也就是说，调用过save()方法的对象，或者是通过LitePal提供的查询API查出来的对象，都是可以直接使用delete()方法来删除数据的。这种方式比较简单，我们就不进行代码演示了，下面直接来看另外一种删除数据的方式。修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>litepal<span class="token punctuation">.</span></span><span class="token class-name">LitePal</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">kotlin<span class="token punctuation">.</span>experimental<span class="token punctuation">.</span></span><span class="token class-name">BitwiseOperationsKt</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> createdatabase<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>create_database<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> add_data<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>add_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> update_data<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>update_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> deleteData<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>delete_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        deleteData<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">LitePal</span><span class="token punctuation">.</span><span class="token function">deleteAll</span><span class="token punctuation">(</span><span class="token class-name">Book</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token string">"price &lt; ? "</span><span class="token punctuation">,</span><span class="token string">"40"</span><span class="token punctuation">)</span>               <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里调用了LitePal.deleteAll()方法来删除数据，其中deleteAll()方法的第一个参数用于指定删除哪张表中的数据，Book.class就意味着删除Book表中的数据，后面的参数用于指定约束条件。现在重新运行程序，并点击一下Delete data按钮，然后查询表中的数据情况，如图：</p><p>![image-20230421164456427](&#x2F;Users&#x2F;whitebird&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230421164456427.png)</p><p>另外，deleteAll()方法如果不指定约束条件，就意味着你要删除表中的所有数据，这一点和updateAll()方法是比较相似的。</p><h3 id="5-7、使用LitePal查询数据"><a href="#5-7、使用LitePal查询数据" class="headerlink" title="5.7、使用LitePal查询数据"></a>5.7、使用LitePal查询数据</h3><p>想想之前我们所使用的query()方法，冗长的参数列表让人看得头疼，即使多数参数都是用不到的，也不得不传入null，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Cursor</span> cursor <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"Book"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>像这样的代码恐怕是没人会喜欢的。为此LitePal在查询API方面做了非常多的优化，基本上可以满足绝大多数场景的查询需求，并且代码十分整洁。</p><p>首先分析一下上述代码，query()方法中使用了第一个参数指明去查询Book表，后面的参数全部为null，这就表示希望查询这张表中的所有数据。那么使用LitePal如何完成同样的功能呢？非常简单，只需要这样写：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Book</span><span class="token punctuation">></span></span> books <span class="token operator">=</span> <span class="token class-name">LitePal</span><span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token class-name">Book</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>没有冗长的参数列表，只需要调用一下findAll()方法，然后通过Book.class参数指定查询Book表就可以。</p><p>另外，findAll()方法的返回值是一个Book类型的List集合，也就是说，我们不用像之前那样再通过Cursor对象一行行去取值了，LitePal已经自动帮我们完成了赋值操作。下面通过一个完整的例子来实践一下吧，修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>litepal</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Log</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>litepal<span class="token punctuation">.</span></span><span class="token class-name">LitePal</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">kotlin<span class="token punctuation">.</span>experimental<span class="token punctuation">.</span></span><span class="token class-name">BitwiseOperationsKt</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> createdatabase<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>create_database<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> add_data<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>add_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> update_data<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>update_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> deleteData<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>delete_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> queryData<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>query_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        queryData<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Book</span><span class="token punctuation">></span></span> books <span class="token operator">=</span> <span class="token class-name">LitePal</span><span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token class-name">Book</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Book</span> book<span class="token operator">:</span> books<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span><span class="token punctuation">,</span><span class="token string">"book name is "</span> <span class="token operator">+</span> book<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span><span class="token punctuation">,</span><span class="token string">"book author is "</span> <span class="token operator">+</span> book<span class="token punctuation">.</span><span class="token function">getAuthor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span><span class="token punctuation">,</span><span class="token string">"book pages is "</span> <span class="token operator">+</span> book<span class="token punctuation">.</span><span class="token function">getPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span><span class="token punctuation">,</span><span class="token string">"book price is "</span> <span class="token operator">+</span> book<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span><span class="token punctuation">,</span><span class="token string">"book press is "</span> <span class="token operator">+</span> book<span class="token punctuation">.</span><span class="token function">getPress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                  <span class="token punctuation">&#125;</span>      <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在重新运行一下程序，点击Querydata按钮，然后查看logcat的打印内容，结果如图：</p><p>![image-20230421165711733](&#x2F;Users&#x2F;whitebird&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230421165711733.png)</p><p>Book表中剩下2条数据，由此可见，我们已经将这条数据成功查询出来了。除了findAll()方法之外，LitePal还提供了很多其他非常有用的查询API。</p><p>比如想要查询Book表中的第一条数据就可以这样写：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Book</span> firstBook <span class="token operator">=</span> <span class="token class-name">LitePal</span><span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token class-name">Book</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查询Book表中的最后一条数据就可以这样写：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Book</span> lastBook <span class="token operator">=</span> <span class="token class-name">LitePal</span><span class="token punctuation">.</span><span class="token function">findLast</span><span class="token punctuation">(</span><span class="token class-name">Book</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我们还可以通过连缀查询来定制更多的查询功能。</p><ul><li>select()方法用于指定查询哪几列的数据，对应了SQL当中的select关键字。比如只查name和author这两列的数据，就可以这样写：</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Book</span><span class="token punctuation">></span></span> books <span class="token operator">=</span> <span class="token class-name">LitePal</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">"author"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token class-name">Book</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>where()方法用于指定查询的约束条件，对应了SQL当中的where关键字。比如只查页数大于400的数据，就可以这样写：</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Book</span><span class="token punctuation">></span></span> books <span class="token operator">=</span> <span class="token class-name">LitePal</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">"pages > ?"</span><span class="token punctuation">,</span><span class="token string">"400"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token class-name">Book</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>order()方法用于指定结果的排序方式，对应了SQL当中的order by关键字。比如将查询结果按照书价从高到低排序，就可以这样写</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Book</span><span class="token punctuation">></span></span> books <span class="token operator">=</span> <span class="token class-name">LitePal</span><span class="token punctuation">.</span><span class="token function">order</span><span class="token punctuation">(</span><span class="token string">"price desc"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token class-name">Book</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中desc表示降序排列，asc或者不写表示升序排列。</p><ul><li>limit()方法用于指定查询结果的数量，比如只查表中的前3条数据，就可以这样写：</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Book</span><span class="token punctuation">></span></span> books <span class="token operator">=</span> <span class="token class-name">LitePal</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token class-name">Book</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>offset()方法用于指定查询结果的偏移量，比如查询表中的第2条、第3条、第4条数据，就可以这样写：</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Book</span><span class="token punctuation">></span></span> books <span class="token operator">=</span> <span class="token class-name">LitePal</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token class-name">Book</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>由于limit(3)查询到的是前3条数据，这里我们再加上offset(1)进行一个位置的偏移，就能实现查询第2条、第3条、第4条数据的功能了。limit()和offset()方法共同对应了SQL当中的limit关键字。当然，你还可以对这5个方法进行任意的连缀组合，来完成一个比较复杂的查询操作：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Book</span><span class="token punctuation">></span></span> books <span class="token operator">=</span> <span class="token class-name">LitePal</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">"author"</span><span class="token punctuation">,</span><span class="token string">"pages"</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">"pages > ?"</span><span class="token punctuation">.</span><span class="token string">"400"</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">order</span><span class="token punctuation">(</span><span class="token string">"pages"</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token class-name">Book</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这段代码就表示，查询Book表中第11～20条满足页数大于400这个条件的name、author和pages这3列数据，并将查询结果按照页数升序排列。</p><p>LitePal的查询功能非常强大，并且代码明显更加简洁。我们需要用到一个方法的时候直接连缀一下就可以了，不需要的话就可以不写，而不是像之前的query()方法，不管需不需要用到，都必须要传固定的参数进去才行。</p><p>当前，如果你实在有一些特殊需求，上述的API都满足不了你的时候，LitePal仍然支持使用原生的SQL来进行查询：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Cursor</span> c <span class="token operator">=</span> <span class="token class-name">LitePal</span><span class="token punctuation">.</span><span class="token function">findBySQL</span><span class="token punctuation">(</span><span class="token string">"select * from Book where pages > ? and price &lt; ? "</span><span class="token punctuation">,</span><span class="token string">"400"</span><span class="token punctuation">,</span><span class="token string">"20"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>调用DataSupport.findBySQL()方法来进行原生查询，其中第一个参数用于指定SQL语句，后面的参数用于指定占位符的值。注意findBySQL()方法返回的是一个Cursor对象，接下来你还需要通过之前所学的老方式将数据一一取出才行。</p>]]></content>
      
      
      <categories>
          
          <category> Android开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android开发学习笔记(7)——跨程序共享数据</title>
      <link href="//post/the_first_code7.html"/>
      <url>//post/the_first_code7.html</url>
      
        <content type="html"><![CDATA[<h1 id="第七章——跨程序共享数据，探究内容提供器"><a href="#第七章——跨程序共享数据，探究内容提供器" class="headerlink" title="第七章——跨程序共享数据，探究内容提供器"></a>第七章——跨程序共享数据，探究内容提供器</h1><p>在上一章中我们学了Android数据持久化的技术，包括文件存储、SharedPreferences存储以及数据库存储。使用这些持久化技术所保存的数据都只能在当前应用程序中访问。</p><p>虽然文件和SharedPreferences存储中提供了MODE_WORLD_READABLE和MODE_WORLD_WRITEABLE这两种操作模式，用于供给其他的应用程序访问当前应用的数据，但这两种模式在<strong>Android 4.2</strong>版本中都已被废弃了。为什么呢？因为Android官方已经不再推荐使用这种方式来实现跨程序数据共享的功能，而是应该使用更加安全可靠的内容提供器技术。</p><p>为什么要将我们程序中的数据共享给其他程序呢？</p><p>当然，这个是要视情况而定的，比如说账号和密码这样的隐私数据显然是不能共享给其他程序的，不过一些可以让其他程序进行二次开发的基础性数据，我们还是可以选择将其共享的。例如系统的电话簿程序，它的数据库中保存了很多的联系人信息，如果这些数据都不允许第三方的程序进行访问的话，恐怕很多应用的功能都要大打折扣了。除了电话簿之外，还有短信、媒体库等程序都实现了跨程序数据共享的功能，而使用的技术当然就是内容提供器了，下面我们就来对这一技术进行深入的探讨。</p><h2 id="1、内容提供器简介"><a href="#1、内容提供器简介" class="headerlink" title="1、内容提供器简介"></a>1、内容提供器简介</h2><p>内容提供器（Content Provider）主要用于在不同的应用程序之间实现数据共享的功能，它提供了一套完整的机制，允许一个程序访问另一个程序中的数据，同时还能保证被访数据的安全性。目前，使用内容提供器是Android实现跨程序共享数据的标准方式。</p><p>不同于文件存储和SharedPreferences存储中的两种全局可读写操作模式，内容提供器可以选择只对哪一部分数据进行共享，从而保证我们程序中的隐私数据不会有泄漏的风险。</p><p>不过在正式开始学习内容提供器之前，我们需要先掌握另外一个非常重要的知识——<strong>Android运行时权限</strong>，因为待会的内容提供器示例中会使用到运行时权限的功能。当然不光是内容提供器，以后我们的开发过程中也会经常使用到运行时权限，所以我们先要了解下Android运行时权限。</p><h2 id="2、运行时权限"><a href="#2、运行时权限" class="headerlink" title="2、运行时权限"></a>2、运行时权限</h2><p>Android的权限机制，从系统的第一个版本开始就已经存在了。但其实之前Android的权限机制在保护用户安全和隐私等方面起到的作用比较有限，尤其是一些大家都离不开的常用软件，非常容易“店大欺客”。为此，Android开发团队在Android 6.0系统中引用了运行时权限这个功能，从而更好地保护了用户的安全和隐私，那么本节我们就来详细学习一下这个6.0系统中引入的新特性。</p><h3 id="2-1、Android权限机制详解"><a href="#2-1、Android权限机制详解" class="headerlink" title="2.1、Android权限机制详解"></a>2.1、Android权限机制详解</h3><p>首先来回顾一下过去Android的权限机制是什么样的。在第5章写BroadcastTest项目的时候第一次接触了Android权限相关的内容，当时为了要访问系统的网络状态以及监听开机广播，于是在AndroidManifest.xml文件中添加了这样两句权限声明：</p><pre class="line-numbers language-none"><code class="language-none">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;&lt;manifest xmlns:android&#x3D;&quot;http:&#x2F;&#x2F;schemas.android.com&#x2F;apk&#x2F;res&#x2F;android&quot;    package&#x3D;&quot;com.example.broadcasttest&quot;&gt;    &lt;uses-permission android:name&#x3D;&quot;android.permission.ACCESS_NETWORK_STATE&quot; &#x2F;&gt;    &lt;uses-permission android:name&#x3D;&quot;android.permission.RECEIVE_BOOT_COMPLETED&quot; &#x2F;&gt;    ...&lt;&#x2F;manifest&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因为访问系统的网络状态以及监听开机广播涉及了用户设备的安全性，因此必须在AndroidManifest.xml中加入权限声明，否则我们的程序就会崩溃。加入了这两句权限声明后，对于用户来说到底有什么影响呢？为什么这样就可以保护用户设备的安全性了呢？其实用户主要在以下两个方面得到了保护，一方面，如果用户在低于6.0系统的设备上安装该程序，会在安装界面给出下图所示的提醒。这样用户就可以清楚地知晓该程序一共申请了哪些权限，从而决定是否要安装这个程序</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304230141455.png"></p><p>另一方面，用户可以随时在应用程序管理界面查看任意一个程序的权限申请情况，以此保证应用程序不会出现各种滥用权限的情况。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304230141798.png"></p><p>这种权限机制的设计思路其实非常简单，就是用户如果认可你所申请的权限，那么就会安装你的程序，如果不认可你所申请的权限，那么拒绝安装就可以了。但是理想是美好的，现实却很残酷，因为很多我们所离不开的常用软件普遍存在着滥用权限的情况，不管到底用不用得到，反正先把权限申请了再说。比如说微信所申请的权限列表如图所示：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304230142987.png"></p><p>这只是微信所申请的一半左右的权限，因为权限太多一屏截不下来。其中有一些权限我并不认可，比如微信为什么要读取我手机的短信和彩信？但是我不认可又能怎样，难道我拒绝安装微信？</p><p>Android开发团队当然也意识到了这个问题，于是在6.0系统中加入了运行时权限功能。也就是说，用户不需要在安装软件的时候一次性授权所有申请的权限，而是可以在软件的使用过程中再对某一项权限申请进行授权。比如说一款相机应用在运行时申请了地理位置定位权限，就算我拒绝了这个权限，但是我应该仍然可以使用这个应用的其他功能，而不是像之前那样直接无法安装它。</p><p>当然，并不是所有权限都需要在运行时申请，对于用户来说，不停地授权也很烦琐。Android现在将所有的权限归成了两类，一类是普通权限，一类是危险权限。准确地讲，其实还有第三类特殊权限，不过这种权限使用得很少，因此我们不讨论。</p><ul><li><strong>普通权限：</strong>指的是那些不会直接威胁到用户的安全和隐私的权限，对于这部分权限申请，系统会自动帮我们进行授权，而不需要用户再去手动操作了，比如在BroadcastTest项目中申请的两个权限就是普通权限。</li><li><strong>危险权限：</strong>则表示那些可能会触及用户隐私或者对设备安全性造成影响的权限，如获取设备联系人信息、定位设备的地理位置等，对于这部分权限申请，必须要由用户手动点击授权才可以，否则程序就无法使用相应的功能。</li></ul><p>但是，Android中一共有上百种权限，我们怎么从中区分哪些是普通权限，哪些是危险权限呢？其实并没有那么难，因为危险权限总共就那么几个，除了危险权限之外，剩余的就都是普通权限了。下表列出了Android中所有的危险权限，一共是9组24个权限</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304230150413.png"></p><p>你并不需要了解表格中每个权限的作用，只要把它当成一个参照表来查看就行了。每当要使用一个权限时，可以先到这张表中来查一下，如果是属于这张表中的权限，那么就需要进行运行时权限处理，如果不在这张表中，那么只需要在AndroidManifest.xml文件中添加一下权限声明就可以了。</p><p>另外注意一下，表格中每个危险权限都属于一个权限组，我们在进行运行时权限处理时使用的是权限名，但是用户一旦同意授权了，那么该权限所对应的权限组中所有的其他权限也会同时被授权。</p><p>访问：<a href="https://developer.android.com/reference/android/Manifest.permission%E5%8F%AF%E4%BB%A5%E6%9F%A5%E7%9C%8BAndroid%E7%B3%BB%E7%BB%9F%E4%B8%AD%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9D%83%E9%99%90%E5%88%97%E8%A1%A8%E3%80%82">https://developer.android.com/reference/android/Manifest.permission可以查看Android系统中完整的权限列表。</a></p><h3 id="2-2、在程序运行时申请权限"><a href="#2-2、在程序运行时申请权限" class="headerlink" title="2.2、在程序运行时申请权限"></a>2.2、在程序运行时申请权限</h3><p>新建一个RuntimePermissionTest项目，在这个项目的基础上来学习运行时权限的使用方法。简单起见就使用CALL_PHONE这个权限来作为本小节中的示例。CALL_PHONE这个权限是编写拨打电话功能的时候需要声明的，因为拨打电话会涉及用户手机的资费问题，因而被列为了危险权限。在Android 6.0系统出现之前，拨打电话功能的实现其实非常简单，修改activity_main.xml布局文件，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/make_call<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Make Call<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在布局文件中只是定义了一个按钮，当点击按钮时就去触发拨打电话的逻辑。接着修改MainActivity中的代码，如下所示</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>runtimepermissiontest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Intent</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">Uri</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> make_call<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>make_call<span class="token punctuation">)</span><span class="token punctuation">;</span>        make_call<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Intent</span> intent<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token class-name">Intent</span><span class="token punctuation">.</span><span class="token constant">ACTION_CALL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    intent<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">"tel:10086"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SecurityException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在按钮的点击事件中，构建了一个隐式Intent , Intent的action指定为Intent.ACTION_ CALL，这是一个系统内置的打电话的动作，然后在data部分指定了协议是tel，号码是10086。</p><p>（在2.3.3小节中就已经见过了，当时指定的action是Intent.ACTION_DIAL，表示打开拨号界面，这个是不需要声明权限的，而Intent.ACTION_ CALL则可以直接拨打电话，因此必须声明权限。）</p><p>另外为了防止程序崩溃，我们将所有操作都放在了异常捕获代码块当中。那么接下来修改AndroidManifest.xml文件，在其中声明如下权限：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.permission.CALL_PHONE<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>application</span>        <span class="token attr-name"><span class="token namespace">android:</span>allowBackup</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>dataExtractionRules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@xml/data_extraction_rules<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>fullBackupContent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@xml/backup_rules<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@mipmap/ic_launcher<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@string/app_name<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>supportsRtl</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@style/Theme.RuntimePermissionTest<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">tools:</span>targetApi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>31<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span>            <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.MainActivity<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.action.MAIN<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.category.LAUNCHER<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activity</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>application</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样我们就将拨打电话的功能成功实现了，并且在低于Android 6.0系统的手机上都是可以正常运行的，但是如果我们在6.0或者更高版本系统的手机上运行，点击Make Call按钮就没有任何效果，这时观察logcat中的打印日志，你会看到如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304231112779.png"></p><p>错误信息中提醒我们“Permission Denial”，可以看出，是由于权限被禁止所导致的，因为6.0及以上系统在使用危险权限时都必须进行运行时权限处理。那么下面我们就来尝试修复这个问题，修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>runtimepermissiontest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">NonNull</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">ActivityCompat</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">ContextCompat</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Intent</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>pm<span class="token punctuation">.</span></span><span class="token class-name">PackageManager</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">Uri</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Intent</span> intent<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token class-name">Intent</span><span class="token punctuation">.</span><span class="token constant">ACTION_CALL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            intent<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">"tel:10086"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SecurityException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onRequestPermissionsResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> permissions<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grantResults<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onRequestPermissionsResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span> permissions<span class="token punctuation">,</span> grantResults<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>requestCode<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>grantResults<span class="token punctuation">.</span>length<span class="token operator">></span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span>grantResults<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token class-name">PackageManager</span><span class="token punctuation">.</span><span class="token constant">PERMISSION_GRANTED</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"You denied the permission"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> make_call<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>make_call<span class="token punctuation">)</span><span class="token punctuation">;</span>        make_call<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ContextCompat</span><span class="token punctuation">.</span><span class="token function">checkSelfPermission</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span></span>Manifest</span><span class="token punctuation">.</span>permission<span class="token punctuation">.</span><span class="token constant">CALL_PHONE</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">PackageManager</span><span class="token punctuation">.</span><span class="token constant">PERMISSION_GRANTED</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                   <span class="token class-name">ActivityCompat</span><span class="token punctuation">.</span><span class="token function">requestPermissions</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span></span>Manifest</span><span class="token punctuation">.</span>permission<span class="token punctuation">.</span><span class="token constant">CALL_PHONE</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                   <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面的代码将运行时权限的完整流程都覆盖了，下面我们来具体解析一下:</p><p><strong>运行时权限的核心就是在程序运行过程中由用户授权我们去执行某些危险操作，程序是不可以擅自做主去执行这些危险操作的。</strong></p><p>因此，第一步就是要先判断用户是不是已经给过我们授权了。借助的是ContextCompat.checkSelfPermission()方法。checkSelfPermission()方法接收两个参数，第一个参数是Context，第二个参数是具体的权限名，比如打电话的权限名就是android.Manifest.permission.CALL_PHONE，然后我们使用方法的返回值和PackageManager. PERMISSION_GRANTED做比较，相等就说明用户已经授权，不等就表示用户没有授权。</p><ul><li>如果已经授权的话就简单了，直接去执行拨打电话的逻辑操作就可以了，这里我们把拨打电话的逻辑封装到了call()方法当中。</li><li>如果没有授权的话，则需要调用ActivityCompat. requestPermissions()方法来向用户申请授权，requestPermissions()方法接收3个参数，第一个参数要求是Activity的实例，第二个参数是一个String数组，我们把要申请的权限名放在数组中即可，第三个参数是请求码，只要是唯一值就可以了，这里传入了1。</li></ul><p>调用完了requestPermissions()方法之后，系统会弹出一个权限申请的对话框，然后用户可以选择同意或拒绝我们的权限申请，不论是哪种结果，最终都会回调到onRequestPermissionsResult()方法中，而授权的结果则会封装在grantResults参数当中。这里我们只需要判断一下最后的授权结果，如果用户同意的话就调用call()方法来拨打电话，如果用户拒绝的话我们只能放弃操作，并且弹出一条失败提示。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304231320216.png"></p><p>由于用户还没有授权过我们拨打电话权限，因此第一次运行会弹出这样一个权限申请的对话框，用户可以选择同意或者拒绝，比如说这里点击了DENY，结果如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304231320814.png"></p><p>由于用户没有同意授权，我们只能弹出一个操作失败的提示。下面我们再次点击Make Call按钮，仍然会弹出权限申请的对话框，这次点击ALLOW，结果如图</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304231321010.png"></p><p>可以看到，这次我们就成功进入到拨打电话界面了，并且由于用户已经完成了授权操作，之后再点击Make Call按钮就不会再弹出权限申请对话框了，而是可以直接拨打电话。用户随时都可以将授予程序的危险权限进行关闭，进入Settings → Apps→ RuntimePermissionTest → Permissions，在这里我们就可以对任何授予过的危险权限进行关闭了，界面如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304231323257.png"></p><h2 id="3、访问其他程序中的数据"><a href="#3、访问其他程序中的数据" class="headerlink" title="3、访问其他程序中的数据"></a>3、访问其他程序中的数据</h2><p>内容提供器的用法一般有两种：</p><ul><li>一种是使用现有的内容提供器来读取和操作相应程序中的数据。</li><li>一种是创建自己的内容提供器给我们程序的数据提供外部访问接口。</li></ul><p>使用现有的内容提供器：如果一个应用程序通过内容提供器对其数据提供了外部访问接口，那么任何其他的应用程序就都可以对这部分数据进行访问。Android系统中自带的电话簿、短信、媒体库等程序都提供了类似的访问接口，这就使得第三方应用程序可以充分地利用这部分数据来实现更好的功能。下面我们就来看一看，内容提供器到底是如何使用的。</p><h3 id="3-1、ContentResolver的基本用法"><a href="#3-1、ContentResolver的基本用法" class="headerlink" title="3.1、ContentResolver的基本用法"></a>3.1、ContentResolver的基本用法</h3><p>对于每一个应用程序来说，如果想要访问内容提供器中共享的数据，就一定要借助ContentResolver类，可以通过Context中的getContentResolver()方法获取到该类的实例。ContentResolver中提供了一系列的方法用于对数据进行CRUD操作，其中insert()方法用于添加数据，update()方法用于更新数据，delete()方法用于删除数据，query()方法用于查询数据。不同于SQLiteDatabase, ContentResolver中的增删改查方法都是不接收表名参数的，而是使用一个Uri参数代替，这个参数被称为内容URI。</p><p><strong>内容URI给内容提供器中的数据建立了唯一标识符，它主要由两部分组成：authority和path。</strong></p><ul><li>authority是用于对不同的应用程序做区分的，一般为了避免冲突，都会采用程序包名的方式来进行命名。比如某个程序的包名是com.example.app，那么该程序对应的authority就可以命名为com.example.app.provider。</li><li>path则是用于对同一应用程序中不同的表做区分的，通常都会添加到authority的后面。比如某个程序的数据库里存在两张表：table1和table2，这时就可以将path分别命名为&#x2F;table1和&#x2F;table2，然后把authority和path进行组合，内容URI就变成了com.example.app.provider&#x2F;table1和com.example.app.provider&#x2F;table2。</li></ul><p>不过，目前还很难辨认出这两个字符串就是两个内容URI，我们还需要在字符串的头部加上协议声明。因此，内容URI最标准的格式写法如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">content<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token punctuation">.</span>provider<span class="token operator">/</span>table1content<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token punctuation">.</span>provider<span class="token operator">/</span>table2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>内容URI可以非常清楚地表达出我们想要访问哪个程序中哪张表里的数据。</strong>也正是因此，ContentResolver中的增删改查方法才都接收Uri对象作为参数，因为如果使用表名的话，系统将无法得知我们期望访问的是哪个应用程序里的表。在得到了内容URI字符串之后，我们还需要将它解析成Uri对象才可以作为参数传入。解析的方法也相当简单，代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Uri</span> uri <span class="token operator">=</span> <span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">"content://com.example.app.provider/table1"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>只需要调用Uri.parse()方法，就可以将内容URI字符串解析成Uri对象了。现在我们就可以使用这个Uri对象来查询table1表中的数据了，代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Cursor</span> cursor <span class="token operator">=</span> <span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span>projection<span class="token punctuation">,</span>selection<span class="token punctuation">,</span>selectionArgs<span class="token punctuation">,</span>sortOrder<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这些参数和SQLiteDatabase中query()方法里的参数很像，但总体来说要简单一些，毕竟这是在访问其他程序中的数据，没必要构建过于复杂的查询语句。下表对使用到的这部分参数进行了详细的解释。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304231403945.png"></p><p>查询完成后返回的仍然是一个Cursor对象，这时就可以将数据从Cursor对象中逐个读取出来了。读取的思路仍然是通过移动游标的位置来遍历Cursor的所有行，然后再取出每一行中相应列的数据，代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>cursor <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">moveToNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> column1 <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">"column1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> column2 <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">"column2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    cursor<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>掌握了最难的查询操作，剩下的增加、修改、删除操作就更不在话下了。我们先来看看如何向table1表中添加一条数据，代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">ContentValues</span> values <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"column1"</span><span class="token punctuation">,</span><span class="token string">"text"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"column2"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，仍然是将待添加的数据组装到ContentValues中，然后调用ContentResolver的insert()方法，将Uri和ContentValues作为参数传入即可。现在如果我们想要更新这条新添加的数据，把column1的值清空，可以借助ContentResolver的update()方法实现，代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">ContentValues</span> values <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"column1"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span>values<span class="token punctuation">,</span><span class="token string">"column1 = ? and column2 = ? "</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span><span class="token string">"text"</span><span class="token punctuation">,</span><span class="token string">"1"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>注意上述代码使用了selection和selectionArgs参数来对想要更新的数据进行约束，以防止所有的行都会受影响。最后，可以调用ContentResolver的delete()方法将这条数据删除掉，代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span><span class="token string">"column2 = ? "</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span><span class="token string">"1"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>到这里为止，我们就把ContentResolver中的增删改查方法全部学完了。那么接下来，就利用目前所学，看一看如何读取系统电话簿中的联系人信息。</p><h3 id="3-2、获取系统联系人"><a href="#3-2、获取系统联系人" class="headerlink" title="3.2、获取系统联系人"></a>3.2、获取系统联系人</h3><p>由于我们之前一直使用的都是模拟器，电话簿里面并没有联系人存在，所以现在需要自己手动添加几个，以便稍后进行读取。打开电话簿程序，界面如图</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304241607871.png"></p><p>目前电话簿里是没有任何联系人的，我们可以通过点击添加账号按钮来对联系人进行创建。这里就先创建两个联系人吧，分别填入他们的姓名和手机号：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304241611414.png"></p><p>这样准备工作就做好了，现在新建一个ContactsTest项目。首先还是来编写一下布局文件，这里我们希望读取出来的联系人信息能够在ListView中显示，因此，修改activity_main.xml中的代码，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/contacts_view<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>LinearLayout里就只放置了一个ListView。这里使用ListView而不是RecyclerView，是因为我们要将关注的重点放在读取系统联系人上面，如果使用RecyclerView的话，代码偏多，会容易让我们找不着重点。接着修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>contactstest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">NonNull</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">ActivityCompat</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">ContextCompat</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">PackageManagerCompat</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">SuppressLint</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>pm<span class="token punctuation">.</span></span><span class="token class-name">PackageManager</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>database<span class="token punctuation">.</span></span><span class="token class-name">Cursor</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>provider<span class="token punctuation">.</span></span><span class="token class-name">ContactsContract</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ArrayAdapter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ListView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ArrayAdapter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> adapter<span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> contactList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ListView</span> contactView<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">ListView</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>contacts_view<span class="token punctuation">)</span><span class="token punctuation">;</span>        adapter<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayAdapter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span></span>R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>simple_list_item_1<span class="token punctuation">,</span>contactList<span class="token punctuation">)</span><span class="token punctuation">;</span>        contactView<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>adapter<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ContextCompat</span><span class="token punctuation">.</span><span class="token function">checkSelfPermission</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span></span>Manifest</span><span class="token punctuation">.</span>permission<span class="token punctuation">.</span><span class="token constant">READ_CONTACTS</span><span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token class-name">PackageManager</span><span class="token punctuation">.</span><span class="token constant">PERMISSION_GRANTED</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">ActivityCompat</span><span class="token punctuation">.</span><span class="token function">requestPermissions</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span></span>Manifest</span><span class="token punctuation">.</span>permission<span class="token punctuation">.</span><span class="token constant">READ_CONTACTS</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token function">readContacts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">readContacts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Cursor</span> cursor <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//查询联系人数据</span>            cursor<span class="token operator">=</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token class-name">ContactsContract<span class="token punctuation">.</span>CommonDataKinds<span class="token punctuation">.</span>Phone</span><span class="token punctuation">.</span><span class="token constant">CONTENT_URI</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>cursor<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">moveToNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token comment">//获取联系人姓名</span>                    <span class="token annotation punctuation">@SuppressLint</span><span class="token punctuation">(</span><span class="token string">"Range"</span><span class="token punctuation">)</span>   <span class="token class-name">String</span> displayname<span class="token operator">=</span>cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token class-name">ContactsContract<span class="token punctuation">.</span>CommonDataKinds<span class="token punctuation">.</span>Phone</span><span class="token punctuation">.</span><span class="token constant">DISPLAY_NAME</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment">//获取联系人手机号</span>                    <span class="token annotation punctuation">@SuppressLint</span><span class="token punctuation">(</span><span class="token string">"Range"</span><span class="token punctuation">)</span>   <span class="token class-name">String</span> number<span class="token operator">=</span>cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token class-name">ContactsContract<span class="token punctuation">.</span>CommonDataKinds<span class="token punctuation">.</span>Phone</span><span class="token punctuation">.</span><span class="token constant">NUMBER</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    contactList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>displayname<span class="token operator">+</span><span class="token string">"\n"</span><span class="token operator">+</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                adapter<span class="token punctuation">.</span><span class="token function">notifyDataSetChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>cursor<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                cursor<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onRequestPermissionsResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> permissions<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grantResults<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onRequestPermissionsResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span> permissions<span class="token punctuation">,</span> grantResults<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>requestCode<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>grantResults<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> grantResults<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token class-name">PackageManager</span><span class="token punctuation">.</span><span class="token constant">PERMISSION_GRANTED</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token function">readContacts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"You denied the permission"</span><span class="token punctuation">,</span><span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在onCreate()方法中，我们首先获取了ListView控件的实例，并给它设置好了适配器，然后开始调用运行时权限的处理逻辑，因为READ_CONTACTS权限是属于危险权限的。这里在用户授权之后调用readContacts()方法来读取系统联系人信息。</p><p>下面重点看一下readContacts()方法，这里使用了ContentResolver的query()方法来查询系统的联系人数据。不过，传入的Uri参数为什么没有调用Uri.parse()方法去解析一个内容URI字符串呢？这是因为ContactsContract.CommonDataKinds.Phone类已经帮我们做好了封装，提供了一个CONTENT_URI常量，而这个常量就是使用Uri.parse()方法解析出来的结果。</p><p>接着我们对Cursor对象进行遍历，将联系人姓名和手机号这些数据逐个取出，联系人姓名这一列对应的常量是ContactsContract.CommonDataKinds. Phone.DISPLAY_NAME，联系人手机号这一列对应的常量是ContactsContract.CommonData-Kinds.Phone.NUMBER。两个数据都取出之后，将它们进行拼接，并且在中间加上换行符，然后将拼接后的数据添加到ListView的数据源里，并通知刷新一下ListView。最后千万不要忘记将Cursor对象关闭掉。</p><p>读取系统联系人的权限千万不能忘记声明。修改AndroidManifest.xml中的代码，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.permission.READ_CONTACTS<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    ...    ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">></span></span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304241644639.png"></p><h2 id="4、创建自己的内容提供器"><a href="#4、创建自己的内容提供器" class="headerlink" title="4、创建自己的内容提供器"></a>4、创建自己的内容提供器</h2><p>上一节当中，思路还是非常简单的，只需要获取到该应用程序的内容URI，然后借助ContentResolver进行CRUD操作就可以了。那些提供外部访问接口的应用程序都是如何实现这种功能的呢？它们又是怎样保证数据的安全性，使得隐私数据不会泄漏出去？学习完本节的知识后，疑惑将会被一一解开。</p><h3 id="4-1、创建内容提供器的步骤"><a href="#4-1、创建内容提供器的步骤" class="headerlink" title="4.1、创建内容提供器的步骤"></a>4.1、创建内容提供器的步骤</h3><p>前面已经提到过，如果想要实现跨程序共享数据的功能，官方推荐的方式就是使用内容提供器，可以通过新建一个类去继承ContentProvider的方式来创建一个自己的内容提供器。ContentProvider类中有6个抽象方法，我们在使用子类继承它的时候，需要将这6个方法全部重写。新建MyProvider继承自ContentProvider，代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>contactstest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">ContentProvider</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">ContentValues</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>database<span class="token punctuation">.</span></span><span class="token class-name">Cursor</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">Uri</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">CancellationSignal</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">NonNull</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Nullable</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyProvider</span> <span class="token keyword">extends</span> <span class="token class-name">ContentProvider</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>      <span class="token annotation punctuation">@Nullable</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Cursor</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">Uri</span> uri<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strings<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strings1<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">String</span> s1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token annotation punctuation">@Nullable</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Uri</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">Uri</span> uri<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">ContentValues</span> contentValues<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">Uri</span> uri<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">ContentValues</span> contentValues<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strings<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">Uri</span> uri<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strings<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Nullable</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getType</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">Uri</span> uri<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1、onCreate()</p><p>初始化内容提供器的时候调用。通常会在这里完成对数据库的创建和升级等操作，返回true表示内容提供器初始化成功，返回false则表示失败。</p><p>2、query()</p><p>从内容提供器中查询数据。使用uri参数来确定查询哪张表，projection参数用于确定查询哪些列，selection和selectionArgs参数用于约束查询哪些行，sortOrder参数用于对结果进行排序，查询的结果存放在Cursor对象中返回。</p><p>3、insert()</p><p>向内容提供器中添加一条数据。使用uri参数来确定要添加到的表，待添加的数据保存在values参数中。添加完成后，返回一个用于表示这条新记录的URI。</p><p>4、update()</p><p>更新内容提供器中已有的数据。使用uri参数来确定更新哪一张表中的数据，新数据保存在values参数中，selection和selectionArgs参数用于约束更新哪些行，受影响的行数将作为返回值返回。</p><p>5、delete()</p><p>从内容提供器中删除数据。使用uri参数来确定删除哪一张表中的数据，selection和selectionArgs参数用于约束删除哪些行，被删除的行数将作为返回值返回。</p><p>6、getType()</p><p>根据传入的内容URI来返回相应的MIME类型</p><p>可以看到，几乎每一个方法都会带有Uri这个参数，这个参数也正是调用ContentResolver的增删改查方法时传递过来的。 </p><p>而现在，我们需要对传入的Uri参数进行解析，从中分析出调用方期望访问的表和数据。回顾一下，一个标准的内容URI写法是这样的：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">content<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token punctuation">.</span>provider<span class="token operator">/</span>table1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这就表示调用方期望访问的是com.example.app这个应用的table1表中的数据。除此之外，我们还可以在这个内容URI的后面加上一个id，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">content<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token punctuation">.</span>provider<span class="token operator">/</span>table1<span class="token operator">/</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>内容URI的格式主要就只有以上两种，以路径结尾就表示期望访问该表中所有的数据，以id结尾就表示期望访问该表中拥有相应id的数据。我们可以使用通配符的方式来分别匹配这两种格式的内容URI，规则如下。</p><ul><li>星号（*） 表示匹配任意长度的任意字符。</li><li>井号（#） 表示匹配任意长度的数字。</li></ul><p>所以，一个能够匹配任意表的内容URI格式就可以写成:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">content<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token punctuation">.</span>provider<span class="token comment">/*</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>而一个能够匹配table1表中任意一行数据的内容URI格式就可以写成：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">content<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token punctuation">.</span>provider<span class="token operator">/</span>table1<span class="token operator">/</span>#<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接着，再借助UriMatcher这个类就可以轻松地实现匹配内容URI的功能。UriMatcher中提供了一个addURI()方法，这个方法接收3个参数，可以分别把authority、path和一个自定义代码传进去。这样，当调用UriMatcher的match()方法时，就可以将一个Uri对象传入，返回值是某个能够匹配这个Uri对象所对应的自定义代码，利用这个代码，我们就可以判断出调用方期望访问的是哪张表中的数据了。修改MyProvider中的代码，如下所示</p><pre class="line-numbers language-none"><code class="language-none">package com.example.contactstest;import android.content.ContentProvider;import android.content.ContentValues;import android.content.UriMatcher;import android.database.Cursor;import android.net.Uri;import android.os.Bundle;import android.os.CancellationSignal;import androidx.annotation.NonNull;import androidx.annotation.Nullable;public class MyProvider extends ContentProvider &#123;    public static final int TABLE1_DIR&#x3D;0;    public static final int TABLE1_ITEM&#x3D;1;    public static final int TABLE2_DIR&#x3D;2;    public static final int TABLE2_ITEM&#x3D;3;    private static UriMatcher uriMatcher;    static &#123;        uriMatcher&#x3D;new UriMatcher(UriMatcher.NO_MATCH);        uriMatcher.addURI(&quot;com.example.app.provider&quot;,&quot;table1&quot;,TABLE1_DIR);        uriMatcher.addURI(&quot;com.example.app.provider&quot;,&quot;table1&#x2F;#&quot;,TABLE1_ITEM);        uriMatcher.addURI(&quot;com.example.app.provider&quot;,&quot;table2&quot;,TABLE2_DIR);        uriMatcher.addURI(&quot;com.example.app.provider&quot;,&quot;table2&#x2F;#&quot;,TABLE2_ITEM);    &#125;    @Override    public boolean onCreate() &#123;        return false;    &#125;    @Nullable    @Override    public Cursor query(@NonNull Uri uri, @Nullable String[] strings, @Nullable String s, @Nullable String[] strings1, @Nullable String s1) &#123;        switch (uriMatcher.match(uri))&#123;            case TABLE1_DIR:                &#x2F;&#x2F;查询table1表中的所有数据                break;            case TABLE1_ITEM:                &#x2F;&#x2F;查询table1表中的单条数据                break;            case TABLE2_DIR:                &#x2F;&#x2F;查询table2表中的所有数据                break;            case TABLE2_ITEM:                &#x2F;&#x2F;查询table2表中的单条数据                break;        &#125;           return null;    &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，MyProvider中新增了4个整型常量，其中TABLE1_DIR表示访问table1表中的所有数据，TABLE1_ITEM表示访问table1表中的单条数据，TABLE2_DIR表示访问table2表中的所有数据，TABLE2_ITEM表示访问table2表中的单条数据。</p><p>接着在静态代码块里我们创建了UriMatcher的实例，并调用addURI()方法，将期望匹配的内容URI格式传递进去，注意这里传入的路径参数是可以使用通配符的。然后，当query()方法被调用的时候，就会通过UriMatcher的match()方法对传入的Uri对象进行匹配，如果发现UriMatcher中某个内容URI格式成功匹配了该Uri对象，则会返回相应的自定义代码，然后我们就可以判断出调用方期望访问的到底是什么数据了。</p><p>上述代码只是以query()方法为例做了个示范，其实insert()、update()、delete()这几个方法的实现也是差不多的，它们都会携带Uri这个参数，然后同样利用UriMatcher的match()方法判断出调用方期望访问的是哪张表，再对该表中的数据进行相应的操作就可以了。</p><p>即getType()方法。它是所有的内容提供器都必须提供的一个方法，用于获取Uri对象所对应的MIME类型。一个内容URI所对应的MIME字符串主要由3部分组成，Android对这3个部分做了如下格式规定。</p><p>1、必须以vnd开头。</p><p>2、如果内容URI以路径结尾，则后接android.cursor.dir&#x2F;，如果内容URI以id结尾，则后接android.cursor.item&#x2F;</p><p>3、最后接上vnd.<authority>.<path></p><p>所以，对于<code>content://com.example.app.provider/table1</code>这个内容URI，它所对应的MIME类型就可以写成：</p><pre class="line-numbers language-none"><code class="language-none">vnd.android.cursor.dir&#x2F;vnd.com.example.app.provider.table1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>对于<code>content://com.example.app.provider/table1/1</code>这个内容URI，它所对应的MIME类型就可以写成：</p><pre class="line-numbers language-none"><code class="language-none">vnd.android.cursor.item&#x2F;vnd.com.example.app.provider.table1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以继续完善MyProvider中的内容了，这次来实现getType()方法中的逻辑，代码如下所示</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token annotation punctuation">@Nullable</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getType</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">Uri</span> uri<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>uriMatcher<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token constant">TABLE1_DIR</span><span class="token operator">:</span>                <span class="token keyword">return</span> <span class="token string">"vnd.android.cursor.dir/vnd.com.example.app.provider.table1"</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token constant">TABLE1_ITEM</span><span class="token operator">:</span>                <span class="token keyword">return</span> <span class="token string">"vnd.android.cursor.item/vnd.com.example.app.provider.table1"</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token constant">TABLE2_DIR</span><span class="token operator">:</span>                <span class="token keyword">return</span> <span class="token string">"vnd.android.cursor.dir/vnd.com.example.app.provider.table2"</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token constant">TABLE2_ITEM</span><span class="token operator">:</span>                <span class="token keyword">return</span> <span class="token string">"vnd.android.cursor.item/vnd.com.example.app.provider.table2"</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>到这里，一个完整的内容提供器就创建完成了，现在任何一个应用程序都可以使用ContentResolver来访问我们程序中的数据。那么,如何才能保证隐私数据不会泄漏出去呢？</p><p>内容提供器的良好机制使得这个问题在不知不觉中已经被解决了。因为所有的CRUD操作都一定要匹配到相应的内容URI格式才能进行的，而我们不可能向UriMatcher中添加隐私数据的URI，所以这部分数据根本无法被外部程序访问到，安全问题也就不存在了。实战一下，真正体验一回跨程序数据共享的功能。</p><h3 id="4-2、实现跨程序数据共享"><a href="#4-2、实现跨程序数据共享" class="headerlink" title="4.2、实现跨程序数据共享"></a>4.2、实现跨程序数据共享</h3><ol><li>在上一章中DatabaseTest项目的基础上继续开发，通过内容提供器来给它加入外部访问接口。</li><li>打开DatabaseTest项目，首先将MyDatabaseHelper中使用Toast弹出创建数据库成功的提示去除掉，因为跨程序访问时我们不能直接使用Toast。</li><li>然后，创建一个内容提供器，右击com.exampledatabasetest包→New→Other→Content Provider。</li></ol><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304241748638.png"></p><p>接着我们修改DatabaseProvider中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">ContentProvider</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">ContentValues</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">UriMatcher</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>database<span class="token punctuation">.</span></span><span class="token class-name">Cursor</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>database<span class="token punctuation">.</span>sqlite<span class="token punctuation">.</span></span><span class="token class-name">SQLiteDatabase</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">Uri</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DatabaseProvider</span> <span class="token keyword">extends</span> <span class="token class-name">ContentProvider</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">BOOK_DIR</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">BOOK_ITEM</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">CATEGORY_DIR</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">CATEGORY_ITEM</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">AUTHORITY</span> <span class="token operator">=</span> <span class="token string">"com.example.databasetest.provider"</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">UriMatcher</span> uriMatcher<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">MyDatabaseHelper</span> dbHelper<span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token punctuation">&#123;</span>        uriMatcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UriMatcher</span><span class="token punctuation">(</span><span class="token class-name">UriMatcher</span><span class="token punctuation">.</span><span class="token constant">NO_MATCH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        uriMatcher<span class="token punctuation">.</span><span class="token function">addURI</span><span class="token punctuation">(</span><span class="token constant">AUTHORITY</span><span class="token punctuation">,</span><span class="token string">"book"</span><span class="token punctuation">,</span><span class="token constant">BOOK_DIR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        uriMatcher<span class="token punctuation">.</span><span class="token function">addURI</span><span class="token punctuation">(</span><span class="token constant">AUTHORITY</span><span class="token punctuation">,</span><span class="token string">"book/#"</span><span class="token punctuation">,</span><span class="token constant">BOOK_ITEM</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        uriMatcher<span class="token punctuation">.</span><span class="token function">addURI</span><span class="token punctuation">(</span><span class="token constant">AUTHORITY</span><span class="token punctuation">,</span><span class="token string">"category"</span><span class="token punctuation">,</span><span class="token constant">CATEGORY_DIR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        uriMatcher<span class="token punctuation">.</span><span class="token function">addURI</span><span class="token punctuation">(</span><span class="token constant">AUTHORITY</span><span class="token punctuation">,</span><span class="token string">"category/#"</span><span class="token punctuation">,</span><span class="token constant">CATEGORY_ITEM</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">DatabaseProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> uri<span class="token punctuation">,</span> <span class="token class-name">String</span> selection<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> selectionArgs<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//删除数据</span>        <span class="token class-name">SQLiteDatabase</span> db<span class="token operator">=</span>dbHelper<span class="token punctuation">.</span><span class="token function">getWritableDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> deleteRows<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>uriMatcher<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token constant">BOOK_DIR</span><span class="token operator">:</span>                deleteRows<span class="token operator">=</span>db<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">"book"</span><span class="token punctuation">,</span>selection<span class="token punctuation">,</span>selectionArgs<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token constant">BOOK_ITEM</span><span class="token operator">:</span>                <span class="token class-name">String</span> bookid<span class="token operator">=</span>uri<span class="token punctuation">.</span><span class="token function">getPathSegments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                deleteRows<span class="token operator">=</span>db<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">"book"</span><span class="token punctuation">,</span><span class="token string">"id = ?"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>bookid<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token constant">CATEGORY_DIR</span><span class="token operator">:</span>                deleteRows<span class="token operator">=</span>db<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">"Category"</span><span class="token punctuation">,</span>selection<span class="token punctuation">,</span>selectionArgs<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token constant">CATEGORY_ITEM</span><span class="token operator">:</span>                <span class="token class-name">String</span> categoryid<span class="token operator">=</span>uri<span class="token punctuation">.</span><span class="token function">getPathSegments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                deleteRows<span class="token operator">=</span>db<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">"Category"</span><span class="token punctuation">,</span><span class="token string">"id = ?"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>categoryid<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> deleteRows<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getType</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> uri<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>uriMatcher<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token constant">BOOK_DIR</span><span class="token operator">:</span>                <span class="token keyword">return</span> <span class="token string">"vnd.android.cursor.dir/vnd.com.example.databasetest.provider.book"</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token constant">BOOK_ITEM</span><span class="token operator">:</span>                <span class="token keyword">return</span> <span class="token string">"vnd.android.cursor.item/vnd.com.example.databasetest.provider.book"</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token constant">CATEGORY_DIR</span><span class="token operator">:</span>                <span class="token keyword">return</span> <span class="token string">"vnd.android.cursor.dir/vnd.com.example.databasetest.provider.category"</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token constant">CATEGORY_ITEM</span><span class="token operator">:</span>                <span class="token keyword">return</span> <span class="token string">"vnd.android.cursor.item/vnd.com.example.databasetest.provider.category"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Uri</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> uri<span class="token punctuation">,</span> <span class="token class-name">ContentValues</span> values<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SQLiteDatabase</span> db <span class="token operator">=</span> dbHelper<span class="token punctuation">.</span><span class="token function">getWritableDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Uri</span> uriReturn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>uriMatcher<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token constant">BOOK_DIR</span><span class="token operator">:</span>            <span class="token keyword">case</span> <span class="token constant">CATEGORY_DIR</span><span class="token operator">:</span>            <span class="token keyword">case</span> <span class="token constant">BOOK_ITEM</span><span class="token operator">:</span>                <span class="token keyword">long</span> newBookId <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">"Book"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>                uriReturn <span class="token operator">=</span> <span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">"content://"</span> <span class="token operator">+</span> <span class="token constant">AUTHORITY</span> <span class="token operator">+</span> <span class="token string">"/book/"</span> <span class="token operator">+</span> newBookId<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token constant">CATEGORY_ITEM</span><span class="token operator">:</span>                <span class="token keyword">long</span> newCategoryId <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">"Category"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>                uriReturn <span class="token operator">=</span> <span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">"content://"</span> <span class="token operator">+</span> <span class="token constant">AUTHORITY</span> <span class="token operator">+</span> <span class="token string">"/category/"</span> <span class="token operator">+</span> newCategoryId<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> uriReturn<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       dbHelper<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">MyDatabaseHelper</span><span class="token punctuation">(</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"BookStore.db"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Cursor</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> uri<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> projection<span class="token punctuation">,</span> <span class="token class-name">String</span> selection<span class="token punctuation">,</span>                        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> selectionArgs<span class="token punctuation">,</span> <span class="token class-name">String</span> sortOrder<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token class-name">SQLiteDatabase</span> db<span class="token operator">=</span>dbHelper<span class="token punctuation">.</span><span class="token function">getReadableDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token class-name">Cursor</span> cursor<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>     <span class="token keyword">switch</span> <span class="token punctuation">(</span>uriMatcher<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         <span class="token keyword">case</span> <span class="token constant">BOOK_DIR</span><span class="token operator">:</span>             cursor <span class="token operator">=</span>db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"Book"</span><span class="token punctuation">,</span>projection<span class="token punctuation">,</span>selection<span class="token punctuation">,</span>selectionArgs<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span>sortOrder<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">break</span><span class="token punctuation">;</span>         <span class="token keyword">case</span> <span class="token constant">CATEGORY_DIR</span><span class="token operator">:</span>             cursor <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"Category"</span><span class="token punctuation">,</span>projection<span class="token punctuation">,</span>selection<span class="token punctuation">,</span>selectionArgs<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span>sortOrder<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">break</span><span class="token punctuation">;</span>         <span class="token keyword">case</span> <span class="token constant">BOOK_ITEM</span><span class="token operator">:</span>             <span class="token class-name">String</span> bookId <span class="token operator">=</span> uri<span class="token punctuation">.</span><span class="token function">getPathSegments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             cursor <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"Book"</span><span class="token punctuation">,</span>projection<span class="token punctuation">,</span><span class="token string">"id = ?"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span> bookId <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span>sortOrder<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">break</span><span class="token punctuation">;</span>         <span class="token keyword">case</span> <span class="token constant">CATEGORY_ITEM</span><span class="token operator">:</span>             <span class="token class-name">String</span> categoryId <span class="token operator">=</span> uri<span class="token punctuation">.</span><span class="token function">getPathSegments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             cursor <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"Category"</span><span class="token punctuation">,</span>projection<span class="token punctuation">,</span><span class="token string">"id = ?"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span> categoryId <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span>sortOrder<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">break</span><span class="token punctuation">;</span>         <span class="token keyword">default</span><span class="token operator">:</span>             <span class="token keyword">break</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> cursor<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> uri<span class="token punctuation">,</span> <span class="token class-name">ContentValues</span> values<span class="token punctuation">,</span> <span class="token class-name">String</span> selection<span class="token punctuation">,</span>                      <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> selectionArgs<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SQLiteDatabase</span> db <span class="token operator">=</span> dbHelper<span class="token punctuation">.</span><span class="token function">getWritableDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> updateRows <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>uriMatcher<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token constant">BOOK_DIR</span><span class="token operator">:</span>                updateRows <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">"Book"</span><span class="token punctuation">,</span>values<span class="token punctuation">,</span>selection<span class="token punctuation">,</span>selectionArgs<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token constant">BOOK_ITEM</span><span class="token operator">:</span>                <span class="token class-name">String</span> bookId <span class="token operator">=</span> uri<span class="token punctuation">.</span><span class="token function">getPathSegments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                updateRows <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">"Book"</span><span class="token punctuation">,</span>values<span class="token punctuation">,</span><span class="token string">"id = ?"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> bookId <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token constant">CATEGORY_DIR</span><span class="token operator">:</span>                updateRows <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">"Category"</span><span class="token punctuation">,</span>values<span class="token punctuation">,</span>selection<span class="token punctuation">,</span>selectionArgs<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token constant">CATEGORY_ITEM</span><span class="token operator">:</span>                <span class="token class-name">String</span> categoryId <span class="token operator">=</span> uri<span class="token punctuation">.</span><span class="token function">getPathSegments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                updateRows <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">"Category"</span><span class="token punctuation">,</span>values<span class="token punctuation">,</span><span class="token string">"id = ?"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> categoryId <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> updateRows<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>首先在类的一开始，同样是定义了4个常量，分别用于表示访问Book表中的所有数据、访问Book表中的单条数据、访问Category表中的所有数据和访问Category表中的单条数据。然后，在静态代码块里对UriMatcher进行了初始化操作，将期望匹配的几种URI格式添加了进去。</p><ul><li><p>onCreate()方法，这个方法的代码很短，就是创建了一个MyDatabaseHelper的实例，然后返回true表示内容提供器初始化成功，这时数据库就已经完成了创建或升级操作。</p></li><li><p>query()方法，在这个方法中先获取到了SQLiteDatabase的实例，然后根据传入的Uri参数判断出用户想要访问哪张表，再调用SQLiteDatabase的query()进行查询，并将Cursor对象返回就好了。</p><p>注意，当访问单条数据的时候有一个细节，这里调用了Uri对象的getPathSegments()方法，它会将内容URI权限之后的部分以“&#x2F;”符号进行分割，并把分割后的结果放入到一个字符串列表中，那这个列表的第0个位置存放的就是路径，第1个位置存放的就是id了。得到了id之后，再通过selection和selectionArgs参数进行约束，就实现了查询单条数据的功能。</p></li><li><p>insert()方法，同样它也是先获取到了SQLiteDatabase的实例，然后根据传入的Uri参数判断出用户想要往哪张表里添加数据，再调用SQLiteDatabase的insert()方法进行添加就可以了。</p><p>注意insert()方法，要求返回一个能够表示这条新增数据的URI，所以我们还需要调用Uri.parse()方法来将一个内容URI解析成Uri对象，当然这个内容URI是以新增数据的id结尾的。</p></li><li><p>update()方法，也是先获取SQLiteDatabase的实例，然后根据传入的Uri参数判断出用户想要更新哪张表里的数据，再调用SQLiteDatabase的update()方法进行更新就好了，受影响的行数将作为返回值返回。</p></li><li><p>delete()方法，仍然是先获取到SQLiteDatabase的实例，然后根据传入的Uri参数判断出用户想要删除哪张表里的数据，再调用SQLiteDatabase的delete()方法进行删除就好了，被删除的行数将作为返回值返回。</p></li><li><p>getType()方法，这个方法中的代码完全是按照上一节中介绍的格式规则编写的，这样我们就将内容提供器中的代码全部编写完了。</p></li></ul><p>注意，内容提供器一定要在AndroidManifest.xml文件中注册才可以使用。不过幸运的是，由于我们是使用Android Studio的快捷方式创建的内容提供器，因此注册这一步已经被自动完成了。打开AndroidManifest.xml文件瞧一瞧，代码如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>provider</span>      <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.DatabaseProvider<span class="token punctuation">"</span></span>      <span class="token attr-name"><span class="token namespace">android:</span>authorities</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.databasetest.provider<span class="token punctuation">"</span></span>      <span class="token attr-name"><span class="token namespace">android:</span>enabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>      <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>provider</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304241847689.png"></p><p>可以看到，<code>&lt;application&gt;</code>标签内出现了一个新的标签<code>&lt;provider&gt;</code>，使用它来对DatabaseProvider这个内容提供器进行注册。<code>android:name</code>属性指定了DatabaseProvider的类名，<code>android:authorities</code>属性指定了DatabaseProvider的authority，而enabled和exported属性则是根据刚才勾选的状态自动生成的，这里表示允许DatabaseProvider被其他应用程序进行访问。现在DatabaseTest这个项目就已经拥有了跨程序共享数据的功能了。</p><ul><li>首先，需要将DatabaseTest程序从模拟器中删除掉，以防止上一章中产生的遗留数据对我们造成干扰。</li><li>然后，运行一下项目，将DatabaseTest程序重新安装在模拟器上了。</li><li>接着，关闭掉DatabaseTest这个项目，并创建一个新项目ProviderTest，我们就将通过这个程序去访问DatabaseTest中的数据。</li></ul><p>还是先来编写一下布局文件吧，修改activity_main.xml中的代码，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/add_data<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Add To Book<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/query_data<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Query From Book<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/update_data<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Update Book<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/delete_data<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Delete From Book<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>布局文件很简单，里面放置了4个按钮，分别用于添加、查询、修改和删除数据。然后修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>providertest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">SuppressLint</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">ContentValues</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>database<span class="token punctuation">.</span></span><span class="token class-name">Cursor</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">Uri</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Log</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> newId<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> adddata<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>add_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        adddata<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Uri</span> uri<span class="token operator">=</span> <span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">"content://com.example.databasetest.provider/book"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">ContentValues</span> contentValues<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                contentValues<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">"A king"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                contentValues<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"author"</span><span class="token punctuation">,</span><span class="token string">"Tom"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                contentValues<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"price"</span><span class="token punctuation">,</span><span class="token number">22.85</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                contentValues<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"pages"</span><span class="token punctuation">,</span><span class="token number">1040</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Uri</span> newUri<span class="token operator">=</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span>contentValues<span class="token punctuation">)</span><span class="token punctuation">;</span>                newId<span class="token operator">=</span>newUri<span class="token punctuation">.</span><span class="token function">getPathSegments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token class-name">Button</span> queryData<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>query_data<span class="token punctuation">)</span><span class="token punctuation">;</span>     queryData<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token annotation punctuation">@Override</span>         <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>             <span class="token class-name">Uri</span> uri<span class="token operator">=</span><span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">"content://com.example.databasetest.provider/book"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token class-name">Cursor</span> cursor<span class="token operator">=</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">if</span> <span class="token punctuation">(</span>cursor<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                 <span class="token keyword">while</span> <span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">moveToNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                     <span class="token annotation punctuation">@SuppressLint</span><span class="token punctuation">(</span><span class="token string">"Range"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> name<span class="token operator">=</span>cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token annotation punctuation">@SuppressLint</span><span class="token punctuation">(</span><span class="token string">"Range"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> author<span class="token operator">=</span>cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">"author"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token annotation punctuation">@SuppressLint</span><span class="token punctuation">(</span><span class="token string">"Range"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> pages<span class="token operator">=</span>cursor<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">"pages"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token annotation punctuation">@SuppressLint</span><span class="token punctuation">(</span><span class="token string">"Range"</span><span class="token punctuation">)</span> <span class="token keyword">double</span> price <span class="token operator">=</span>cursor<span class="token punctuation">.</span><span class="token function">getDouble</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">"price"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span><span class="token punctuation">,</span><span class="token string">"book name is "</span><span class="token operator">+</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span><span class="token punctuation">,</span><span class="token string">"book author is "</span><span class="token operator">+</span>author<span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span><span class="token punctuation">,</span><span class="token string">"book pages is "</span><span class="token operator">+</span>pages<span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span><span class="token punctuation">,</span><span class="token string">"book price is "</span><span class="token operator">+</span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">&#125;</span>                 cursor<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">&#125;</span>         <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token class-name">Button</span> updateData<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>update_data<span class="token punctuation">)</span><span class="token punctuation">;</span>     updateData<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token annotation punctuation">@Override</span>         <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>             <span class="token class-name">Uri</span> uri<span class="token operator">=</span><span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">"content://com.example.databasetest.provider/book/"</span><span class="token operator">+</span>newId<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token class-name">ContentValues</span> contentValues<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             contentValues<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">"Two kings"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             contentValues<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"price"</span><span class="token punctuation">,</span><span class="token number">9.99</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             contentValues<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"pages"</span><span class="token punctuation">,</span><span class="token number">666</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span>contentValues<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token class-name">Button</span> deleteData<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>delete_data<span class="token punctuation">)</span><span class="token punctuation">;</span>     deleteData<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token annotation punctuation">@Override</span>         <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>             <span class="token class-name">Uri</span> uri<span class="token operator">=</span><span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">"content://com.example.databasetest.provider/book/"</span><span class="token operator">+</span>newId<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304242313149.png"></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304242314544.png"></p><p>分别在这4个按钮的点击事件里面处理了增删改查的逻辑。</p><p>添加数据的时候，首先调用了Uri.parse()方法将一个内容URI解析成Uri对象，然后把要添加的数据都存放到ContentValues对象中，接着调用ContentResolver的insert()方法执行添加操作就可以了。注意insert()方法会返回一个Uri对象，这个对象中包含了新增数据的id，我们通过getPathSegments()方法将这个id取出，稍后会用到它。</p><p>查询数据的时候，同样是调用了Uri.parse()方法将一个内容URI解析成Uri对象，然后调用ContentResolver的query()方法去查询数据，查询的结果当然还是存放在Cursor对象中的。之后对Cursor进行遍历，从中取出查询结果，并一一打印出来。</p><p>更新数据的时候，也是先将内容URI解析成Uri对象，然后把想要更新的数据存放到ContentValues对象中，再调用ContentResolver的update()方法执行更新操作就可以了。注意这里我们为了不想让Book表中的其他行受到影响，在调用Uri.parse()方法时，给内容URI的尾部增加了一个id，而这个id正是添加数据时所返回的。这就表示我们只希望更新刚刚添加的那条数据，Book表中的其他行都不会受影响。</p><p>删除数据的时候，也是使用同样的方法解析了一个以id结尾的内容URI，然后调用ContentResolver的delete()方法执行删除操作就可以了。由于我们在内容URI里指定了一个id，因此只会删掉拥有相应id的那行数据，Book表中的其他数据都不会受影响。</p><p>由此可以看出，我们的跨程序共享数据功能已经成功实现了！经过测试，单开ProviderTest程序取数据完全OK。 现在不仅是ProviderTest程序，任何一个程序都可以轻松访问DatabaseTest中的数据，而且还丝毫不用担心隐私数据泄漏的问题。</p><h2 id="5、Git时间——版本控制工具进阶"><a href="#5、Git时间——版本控制工具进阶" class="headerlink" title="5、Git时间——版本控制工具进阶"></a>5、Git时间——版本控制工具进阶</h2><p>在上一次学习了关于Git最基本的用法，包括安装Git、创建代码仓库，以及提交本地代码。本节中将要学习更多的使用技巧，准备工作，给一个项目创建代码仓库，这里就选择在ProviderTest项目中创建吧，打开Git Bash，进入到这个项目的根目录下面，然后执行<code>git init</code>命令，如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304242333849.png"></p><h3 id="5-1、忽略文件"><a href="#5-1、忽略文件" class="headerlink" title="5.1、忽略文件"></a>5.1、忽略文件</h3><p>代码仓库现在已经创建好了，接下来应该去提交ProviderTest项目中的代码。在提交之前你也许应该思考一下，是不是所有的文件都需要加入到版本控制当中呢？在第1章介绍Android项目结构的时候有提到过，build目录下的文件都是编译项目时自动生成的，我们不应该将这部分文件添加到版本控制当中，那么如何才能实现这样的效果呢？</p><p><strong>Git提供了一种可配性很强的机制来允许用户将指定的文件或目录排除在版本控制之外，它会检查代码仓库的目录下是否存在一个名为.gitignore的文件，如果存在的话，就去一行行读取这个文件中的内容，并把每一行指定的文件或目录排除在版本控制之外。注意.gitignore中指定的文件或目录是可以使用“*”通配符的。</strong></p><p>我们并不需要自己去创建.gitignore文件，Android Studio在创建项目的时候会自动帮我们创建出两个.gitignore文件，一个在根目录下面，一个在app模块下面。首先看一下根目录下面的.gitignore文件，如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304242335470.png"></p><p>这是Android Studio自动生成的一些默认配置，通常情况下，这部分内容都是不用添加到版本控制当中的。除了*.iml表示指定任意以.iml结尾的文件，其他都是指定的具体的文件名或者目录名，上面配置中的所有内容都不会被添加到版本控制当中，因为基本都是一些由IDE自动生成的配置。</p><p>再来看一下app模块下面的.gitignore文件，这个就简单多了，如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304242336931.png"></p><p>由于app模块下面基本都是我们编写的代码，因此默认情况下只有其中的build目录不会被添加到版本控制当中。当然，我们完全可以对以上两个文件进行任意地修改，来满足特定的需求。比如说，app模块下面的所有测试文件都只是给我自己使用的，我并不想把它们添加到版本控制中，那么就可以这样修改app&#x2F;.gitignore文件中的内容：</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;build&#x2F;src&#x2F;test&#x2F;src&#x2F;androidTest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>只需添加这样两行配置，因为所有的测试文件都是放在这两个目录下的。现在我们可以提交代码了，先使用add命令将所有的文件进行添加，如下所示：</p><pre class="line-numbers language-none"><code class="language-none">git add .<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后执行commit命令完成提交，如下所示：</p><pre class="line-numbers language-none"><code class="language-none">git commit -m &quot;First commit.&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5-2、查看修改内容"><a href="#5-2、查看修改内容" class="headerlink" title="5.2、查看修改内容"></a>5.2、查看修改内容</h3><p>在进行了第一次代码提交之后，我们后面还可能会对项目不断地进行维护或添加新功能等。比较理想的情况是每当完成了一小块功能，就执行一次提交。但是如果某个功能牵扯到的代码比较多，有可能写到后面的时候我们就已经忘记前面修改了什么东西了。遇到这种情况时不用担心，Git全都帮你记着呢！如何使用Git来查看自上次提交后文件修改的内容，只需要使用status命令就可以了，在项目的根目录下输入如下命令：</p><pre class="line-numbers language-none"><code class="language-none">git status<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后，Git会提示目前项目中没有任何可提交的文件，因为我们刚刚才提交过嘛。现在对ProviderTest项目中的代码稍做一下改动，修改MainActivity中的代码，如下所示:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>        addData<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">//添加数据</span>                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"price"</span><span class="token punctuation">,</span><span class="token string">"21.85"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里对要添加的书的单价进行了修改，然后重新输入git status命令，这次结果如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304242346969.png"></p><p>可以看到，Git提醒我们MainActivity.java这个文件已经发生了更改，那么如何才能看到更改的内容呢？这就需要借助diff命令了，用法如下所示：</p><pre class="line-numbers language-none"><code class="language-none">git diff<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304242346953.png"></p><p>这样可以查看到所有文件的更改内容，如果你只想查看MainActivity.java这个文件的更改内容，可以使用如下命令：</p><pre class="line-numbers language-none"><code class="language-none">git diff app&#x2F;src&#x2F;main&#x2F;java&#x2F;com&#x2F;example&#x2F;providertest&#x2F;MainActivity.java<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>图片和上图一样，因为刚刚测试，只改了MainActivity.java这个文件的内容。</p><p>其中，减号代表删除的部分，加号代表添加的部分。从图中我们就可以明显地看出，书的价格由22.85被修改成了21.85。</p><h3 id="5-3、撤销未提交的修改"><a href="#5-3、撤销未提交的修改" class="headerlink" title="5.3、撤销未提交的修改"></a>5.3、撤销未提交的修改</h3><p>有时候我们的代码可能会写得过于草率，以至于原本正常的功能，结果反倒被我们改出了问题。遇到这种情况时也不用着急，因为只要代码还未提交，所有修改的内容都是可以撤销的。比如，在上一小节中我们修改了MainActivity里一本书的价格，现在如果想要撤销这个修改就可以使用checkout命令，用法如下所示：</p><pre class="line-numbers language-none"><code class="language-none">git checkout app&#x2F;src&#x2F;main&#x2F;java&#x2F;com&#x2F;example&#x2F;providertest&#x2F;MainActivity.java<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>执行了这个命令之后，我们对MainActivity.java这个文件所做的一切修改就应该都被撤销了。</p><p>这种撤销方式只适用于那些还没有执行过add命令的文件，如果某个文件已经被添加过了，这种方式就无法撤销其更改的内容，我们来做个试验瞧一瞧。首先，仍然是将MainActivity中那本书的价格改成21.85，然后输入如下命令：</p><pre class="line-numbers language-none"><code class="language-none">git add .<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304242357805.png"></p><p>现在我们再执行一遍checkout命令，你会发现MainActivity仍然是处于已添加状态，所修改的内容无法撤销掉。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304242358328.png"></p><p>这种情况应该怎么办？难道我们还没法后悔了？当然不是，只不过对于已添加的文件我们应该先对其取消添加，然后才可以撤回提交。取消添加使用的是reset命令，用法如下所示：</p><pre class="line-numbers language-none"><code class="language-none">git reset HEAD app&#x2F;src&#x2F;main&#x2F;java&#x2F;com&#x2F;example&#x2F;providertest&#x2F;MainActivity.java<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后再运行一遍git status命令，你就会发现MainActivity.java这个文件重新变回了未添加状态，此时就可以使用checkout命令来将修改的内容进行撤销了。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304242359054.png"></p><h3 id="5-4、查看提交记录"><a href="#5-4、查看提交记录" class="headerlink" title="5.4、查看提交记录"></a>5.4、查看提交记录</h3><p>当ProviderTest这个项目开发了几个月之后，可能已经执行过上百次的提交操作了，这个时候估计你早就已经忘记每次提交都修改了哪些内容。忠实的Git一直都帮我们清清楚楚地记录着。可以使用log命令查看历史提交信息，用法如下所示：</p><pre class="line-numbers language-none"><code class="language-none">git log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>由于目前我们只执行过一次提交，所以能看到的信息很少，如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304250001822.png"></p><p>可以看到，每次提交记录都会包含提交id、提交人、提交日期以及提交描述这4个信息。那么，我们再次将书价修改成11.11，然后执行一次提交操作，如下所示：</p><pre class="line-numbers language-none"><code class="language-none">git add .git commit -m &quot;Change price&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>现在，重新执行git log命令，结果如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304250003653.png"></p><p>当提交记录非常多的时候，如果我们只想查看其中一条记录，可以在命令中指定该记录的id，并加上-1参数表示只想看到一行记录，如下所示：</p><pre class="line-numbers language-none"><code class="language-none">git log 47f653.......68b3 -1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304250005606.png"></p><p>而如果想要查看这条提交记录具体修改了什么内容，可以在命令中加入-p参数，命令如下：</p><pre class="line-numbers language-none"><code class="language-none">git log 47f653.......68b3 -1 -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在本章中，先了解了Android的权限机制，并且学会了如何在6.0以上的系统中使用运行时权限，然后又重点学习了内容提供器的相关内容，以实现跨程序数据共享的功能，还学习了怎样创建自己的内容提供器来共享数据。不过，只有真正需要将数据共享出去的时候我们才应该创建内容提供器，仅仅是用于程序内部访问的数据就没有必要这么做，所以千万别对它进行滥用。</p>]]></content>
      
      
      <categories>
          
          <category> Android开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android开发学习笔记(8)——运用手机多媒体</title>
      <link href="//post/the_first_code8.html"/>
      <url>//post/the_first_code8.html</url>
      
        <content type="html"><![CDATA[<h1 id="第八章——丰富你的程序，运用手机多媒体"><a href="#第八章——丰富你的程序，运用手机多媒体" class="headerlink" title="第八章——丰富你的程序，运用手机多媒体"></a>第八章——丰富你的程序，运用手机多媒体</h1><p>本章将对Android中一些常用的多媒体功能的使用技巧进行学习。前面的7章内容，一直都是使用模拟器来运行程序的，不过本章涉及的一些功能必须要在真正的Android手机上运行才看得到效果。因此，首先我们就来学习一下，如何使用Android手机来运行程序。</p><h2 id="1、使用通知"><a href="#1、使用通知" class="headerlink" title="1、使用通知"></a>1、使用通知</h2><p>通知（Notification）是Android系统中比较有特色的一个功能，当某个应用程序希望向用户发出一些提示信息，而该应用程序又不在前台运行时，就可以借助通知来实现。发出一条通知后，手机最上方的状态栏中会显示一个通知的图标，下拉状态栏后可以看到通知的详细内容。Android的通知功能获得了大量用户的认可和喜爱，就连iOS系统也在5.0版本之后加入了类似的功能。</p><h3 id="1-1、通知的基本用法"><a href="#1-1、通知的基本用法" class="headerlink" title="1.1、通知的基本用法"></a>1.1、通知的基本用法</h3><p>通知的用法还是比较灵活的，既可以在活动里创建，也可以在广播接收器里创建，还可以在下一章中即将学习的在服务里创建。相比于广播接收器和服务，在活动里创建通知的场景还是比较少的，因为一般只有当程序进入到后台的时候我们才需要使用通知。</p><p>无论是在哪里创建通知，整体的步骤都是相同的。首先需要一个NotificationManager来对通知进行管理，可以调用Context的getSystemService()方法获取到。getSystemService()方法接收一个字符串参数用于确定获取系统的哪个服务，这里我们传入Context.NOTIFICATION_SERVICE即可。因此，获取NotificationManager的实例就可以写成：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">NotificationManager</span> manager <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">NotificationManager</span><span class="token punctuation">)</span><span class="token function">getSystemService</span><span class="token punctuation">(</span><span class="token class-name">Context</span><span class="token punctuation">.</span><span class="token constant">NOTIFICATION_SERVICE</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接下来，需要使用一个Builder构造器来创建Notification对象，但问题在于，几乎Android系统的每一个版本都会对通知这部分功能进行或多或少的修改，API不稳定性问题在通知上面突显得尤其严重。那么该如何解决这个问题呢？其实解决方案我们之前已经见过好几回了，就是使用support库中提供的兼容API。support-v4库中提供了一个NotificationCompat类，使用这个类的构造器来创建Notification对象，就可以保证我们的程序在所有Android系统版本上都能正常工作了，代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Notification</span> notification <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>Android O 版本后，NotificationCompat.Builder（）失效。书中上述方法被以下方法取代:</strong></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304270052345.png"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">String</span> channelId<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Notification</span> notification <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"default"</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">setContentTitle</span><span class="token punctuation">(</span><span class="token string">"This is content title"</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">setContentText</span><span class="token punctuation">(</span><span class="token string">"This is content text"</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">setWhen</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">setSmallIcon</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>small_icon<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">setLargeIcon</span><span class="token punctuation">(</span><span class="token class-name">BitmapFactory</span><span class="token punctuation">.</span><span class="token function">decodeResource</span><span class="token punctuation">(</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>large_icon<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一共调用了5个设置方法：</p><ul><li>setContentTitle()方法用于指定通知的标题内容，下拉系统状态栏就可以看到这部分内容。</li><li>setContentText()方法用于指定通知的正文内容，同样下拉系统状态栏就可以看到这部分内容。</li><li>setWhen()方法用于指定通知被创建的时间，以毫秒为单位，当下拉系统状态栏时，这里指定的时间会显示在相应的通知上。</li><li>setSmallIcon()方法用于设置通知的小图标，注意只能使用纯alpha图层的图片进行设置，小图标会显示在系统状态栏上。</li><li>setLargeIcon()方法用于设置通知的大图标，当下拉系统状态栏时，就可以看到设置的大图标了。</li></ul><p>以上工作都完成之后，只需要调用NotificationManager的notify()方法就可以让通知显示出来了。notify()方法接收两个参数，第一个参数是id，要保证为每个通知所指定的id都是不同的。第二个参数则是Notification对象，这里直接将我们刚刚创建好的Notification对象传入即可。因此，显示一个通知就可以写成：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">manager<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>notification<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>到这里就已经把创建通知的每一个步骤都分析完了，下面就让我们通过一个具体的例子来看一看通知到底是长什么样的。新建一个NotificationTest项目，并修改activity_main.xml中的代码，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/send_notice<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Send notice<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>布局文件非常简单，里面只有一个Send notice按钮，用于发出一条通知。接下来修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>notificationtest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">NotificationCompat</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">Notification</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">NotificationChannel</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">NotificationManager</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span></span><span class="token class-name">BitmapFactory</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Build</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> sendNotice<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>send_notice<span class="token punctuation">)</span><span class="token punctuation">;</span>        sendNotice<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">switch</span> <span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>send_notice<span class="token operator">:</span>                        <span class="token class-name">NotificationManager</span> manager<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">NotificationManager</span><span class="token punctuation">)</span> <span class="token function">getSystemService</span><span class="token punctuation">(</span><span class="token constant">NOTIFICATION_SERVICE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Build</span><span class="token punctuation">.</span><span class="token constant">VERSION</span><span class="token punctuation">.</span><span class="token constant">SDK_INT</span> <span class="token operator">>=</span> <span class="token class-name">Build<span class="token punctuation">.</span>VERSION_CODES<span class="token punctuation">.</span>O</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            <span class="token class-name">String</span> channelId <span class="token operator">=</span> <span class="token string">"default"</span><span class="token punctuation">;</span>                            <span class="token class-name">String</span> channelName <span class="token operator">=</span> <span class="token string">"默认通知"</span><span class="token punctuation">;</span>                            manager<span class="token punctuation">.</span><span class="token function">createNotificationChannel</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">NotificationChannel</span><span class="token punctuation">(</span>channelId<span class="token punctuation">,</span> channelName<span class="token punctuation">,</span> <span class="token class-name">NotificationManager</span><span class="token punctuation">.</span><span class="token constant">IMPORTANCE_HIGH</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                        <span class="token comment">//small_icon和large_icon是自己在网上找的图片</span>                        <span class="token class-name">Notification</span> notification <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"default"</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">setContentTitle</span><span class="token punctuation">(</span><span class="token string">"My notification"</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">setContentText</span><span class="token punctuation">(</span><span class="token string">"Hello World!"</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">setWhen</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">setSmallIcon</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>small_icon<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">setLargeIcon</span><span class="token punctuation">(</span><span class="token class-name">BitmapFactory</span><span class="token punctuation">.</span><span class="token function">decodeResource</span><span class="token punctuation">(</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                        <span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>large_icon<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        manager<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>notification<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">default</span><span class="token operator">:</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由于版本问题，需要开启渠道才能显示通知，详细原因见博客：<a href="https://blog.csdn.net/qq_32534441/article/details/103501273">https://blog.csdn.net/qq_32534441/article/details/103501273</a></p><p>可以看到，我们在Send notice按钮的点击事件里面完成了通知的创建工作。现在可以来运行一下程序了，点击Send notice按钮，会在系统状态栏看到图标，如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304270114603.png"></p><p>当你下拉系统状态栏并点击这条通知的时候，会发现没有任何效果。要想实现通知的点击效果，还需要在代码中进行相应的设置，这就涉及了一个新的概念：PendingIntent。</p><p>PendingIntent从名字上看起来就和Intent有些类似，它们之间也确实存在着不少共同点。比如它们都可以去指明某一个“意图”，都可以用于启动活动、启动服务以及发送广播等。不同的是，Intent更加倾向于去立即执行某个动作，而PendingIntent更加倾向于在某个合适的时机去执行某个动作。所以，<strong>也可以把PendingIntent简单地理解为延迟执行的Intent。</strong></p><p>PendingIntent的用法同样很简单，它主要提供了几个静态方法用于获取PendingIntent的实例，可以根据需求来选择是使用getActivity()方法、getBroadcast()方法，还是getService()方法。这几个方法所接收的参数都是相同的：</p><ul><li>第一个参数依旧是Context，不用多做解释。</li><li>第二个参数一般用不到，通常都是传入0即可。</li><li>第三个参数是一个Intent对象，我们可以通过这个对象构建出PendingIntent的“意图”。</li><li>第四个参数用于确定PendingIntent的行为，有FLAG_ONE_SHOT、FLAG_NO_CREATE、FLAG_CANCEL_CURRENT和FLAG_UPDATE_CURRENT这4种值可选，每种值的具体含义你可以查看文档，通常情况下这个参数传入0就可以了。</li></ul><p>对PendingIntent有了一定的了解后，我们再回过头来看一下NotificationCompat.Builder。这个构造器还可以再连缀一个setContentIntent()方法，接收的参数正是一个PendingIntent对象。因此，这里就可以通过PendingIntent构建出一个延迟执行的“意图”，当用户点击这条通知时就会执行相应的逻辑。</p><p>现在我们来优化一下NotificationTest项目，给刚才的通知加上点击功能，让用户点击它的时候可以启动另一个活动。首先需要准备好另一个活动，右击com.example.notificationtest包→New→Activity→Empty Activity，新建NotificationActivity，布局起名为notification_layout。然后修改notification_layout.xml中的代码，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RelativeLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_centerInParent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>24sp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>This is notification layout<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RelativeLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样就把NotificationActivity这个活动准备好了，下面我们修改MainActivity中的代码，给通知加入点击功能，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>notificationtest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">NotificationCompat</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">Notification</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">NotificationChannel</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">NotificationManager</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">PendingIntent</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Intent</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span></span><span class="token class-name">BitmapFactory</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Build</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> sendNotice<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>send_notice<span class="token punctuation">)</span><span class="token punctuation">;</span>        sendNotice<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">switch</span> <span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>send_notice<span class="token operator">:</span>                        <span class="token class-name">Intent</span> intent <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token class-name">NotificationActivity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token class-name">PendingIntent</span> pendingIntent<span class="token operator">=</span><span class="token class-name">PendingIntent</span><span class="token punctuation">.</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>intent<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token class-name">NotificationManager</span> manager<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">NotificationManager</span><span class="token punctuation">)</span> <span class="token function">getSystemService</span><span class="token punctuation">(</span><span class="token constant">NOTIFICATION_SERVICE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Build</span><span class="token punctuation">.</span><span class="token constant">VERSION</span><span class="token punctuation">.</span><span class="token constant">SDK_INT</span> <span class="token operator">>=</span> <span class="token class-name">Build<span class="token punctuation">.</span>VERSION_CODES<span class="token punctuation">.</span>O</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            <span class="token class-name">String</span> channelId <span class="token operator">=</span> <span class="token string">"default"</span><span class="token punctuation">;</span>                            <span class="token class-name">String</span> channelName <span class="token operator">=</span> <span class="token string">"默认通知"</span><span class="token punctuation">;</span>                            manager<span class="token punctuation">.</span><span class="token function">createNotificationChannel</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">NotificationChannel</span><span class="token punctuation">(</span>channelId<span class="token punctuation">,</span> channelName<span class="token punctuation">,</span> <span class="token class-name">NotificationManager</span><span class="token punctuation">.</span><span class="token constant">IMPORTANCE_HIGH</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                        <span class="token class-name">Notification</span> notification <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"default"</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">setContentTitle</span><span class="token punctuation">(</span><span class="token string">"My notification"</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">setContentText</span><span class="token punctuation">(</span><span class="token string">"Hello World!"</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">setWhen</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">setSmallIcon</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>mipmap<span class="token punctuation">.</span>ic_launcher<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">setLargeIcon</span><span class="token punctuation">(</span><span class="token class-name">BitmapFactory</span><span class="token punctuation">.</span><span class="token function">decodeResource</span><span class="token punctuation">(</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>mipmap<span class="token punctuation">.</span>ic_launcher<span class="token punctuation">)</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">setContentIntent</span><span class="token punctuation">(</span>pendingIntent<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        manager<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>notification<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">default</span><span class="token operator">:</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，这里先是使用Intent表达出我们想要启动NotificationActivity的“意图”，然后将构建好的Intent对象传入到PendingIntent的getActivity()方法里，以得到PendingIntent的实例，接着在NotificationCompat.Builder中调用setContentIntent()方法，把它作为参数传入即可。现在重新运行一下程序，并点击Send notice按钮，依旧会发出一条通知。然后下拉系统状态栏，点击一下该通知，就会看到NotificationActivity这个活动的界面了，如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304271410388.png"></p><p>然而，点击之后系统状态上的通知图标还没有消失。如果我们没有在代码中对该通知进行取消，它就会一直显示在系统的状态栏上。解决的方法有两种，一种是在NotificationCompat.Builder中再连缀一个setAutoCancel()方法，一种是显式地调用NotificationManager的cancel()方法将它取消，两种方法我们都学习一下。第一种方法写法如下</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Notification</span> notification <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"default"</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                        <span class="token punctuation">.</span><span class="token function">setAutoCancel</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，setAutoCancel()方法传入true，就表示当点击了这个通知的时候，通知会自动取消掉（亲测有效）。第二种方法写法如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>notificationtest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">NotificationManager</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NotificationActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_notification<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">NotificationManager</span> notificationManager<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">NotificationManager</span><span class="token punctuation">)</span> <span class="token function">getSystemService</span><span class="token punctuation">(</span><span class="token constant">NOTIFICATION_SERVICE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        notificationManager<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>亲测有效！这个1是什么意思呢？还记得在创建通知的时候给每条通知指定的id吗？当时我们给这条通知设置的id就是1。因此，如果你想取消哪条通知，在cancel()方法中传入该通知的id就行了。</p><h3 id="1-2、通知的进阶技巧"><a href="#1-2、通知的进阶技巧" class="headerlink" title="1.2、通知的进阶技巧"></a>1.2、通知的进阶技巧</h3><p>上一小节中创建的通知属于最基本的通知，实际上，NotificationCompat.Builder中提供了非常丰富的API来让我们创建出更加多样的通知效果。从中选一些比较常用的API来进行学习。先来看看setSound()方法吧，它可以在通知发出的时候播放一段音频，这样就能够更好地告知用户有通知到来。setSound()方法接收一个Uri参数，所以在指定音频文件的时候还需要先获取到音频文件对应的URI。比如说，每个手机的&#x2F;system&#x2F;media&#x2F;audio&#x2F;ringtones目录下都有很多的音频文件，我们可以从中随便选一个音频文件，那么在代码中就可以这样指定：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Notification</span> notification <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"default"</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                        <span class="token punctuation">.</span><span class="token function">setSound</span><span class="token punctuation">(</span><span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">fromFile</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"/system/media/audio/ringtones/Luna.ogg"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>除了允许播放音频外，我们还可以在通知到来的时候让手机进行振动，使用的是vibrate这个属性。它是一个长整型的数组，用于设置手机静止和振动的时长，以毫秒为单位。下标为0的值表示手机静止的时长，下标为1的值表示手机振动的时长，下标为2的值又表示手机静止的时长，以此类推。所以，如果想要让手机在通知到来的时候立刻振动1秒，然后静止1秒，再振动1秒，代码就可以写成：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Notification</span> notification <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"default"</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                        <span class="token punctuation">.</span><span class="token function">setVibrate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>不过，想要控制手机振动还需要声明权限。因此，我们还得编辑AndroidManifest.xml文件，加入如下声明：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.permission.POST_NOTIFICATIONS<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.permission.VIBRATE<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下面我们来看一下如何在通知到来时控制手机LED灯的显示。现在的手机基本上都会前置一个LED灯，当有未接电话或未读短信，而此时手机又处于锁屏状态时，LED灯就会不停地闪烁，提醒用户去查看。我们可以使用setLights()方法来实现这种效果，setLights()方法接收3个参数：</p><ul><li>第一个参数用于指定LED灯的颜色；</li><li>第二个参数用于指定LED灯亮起的时长，以毫秒为单位；</li><li>第三个参数用于指定LED灯暗去的时长，也是以毫秒为单位。</li></ul><p>所以，当通知到来时，如果想要实现LED灯以绿色的灯光一闪一闪的效果，就可以写成：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Notification</span> notification <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"default"</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                        <span class="token punctuation">.</span><span class="token function">setLights</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">GREEN</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>如果你不想进行那么多繁杂的设置，也可以直接使用通知的默认效果，它会根据当前手机的环境来决定播放什么铃声，以及如何振动，写法如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Notification</span> notification <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"default"</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                        <span class="token punctuation">.</span><span class="token function">setDefaults</span><span class="token punctuation">(</span><span class="token class-name">NotificationCompat</span><span class="token punctuation">.</span><span class="token constant">DEFAULT_ALL</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>注意，以上所涉及的这些进阶技巧都要在手机上运行才能看得到效果，模拟器是无法表现出振动以及LED灯闪烁等功能的。</p><h3 id="1-3、通知的高级功能"><a href="#1-3、通知的高级功能" class="headerlink" title="1.3、通知的高级功能"></a>1.3、通知的高级功能</h3><p>继续观察NotificationCompat.Builder这个类，你会发现里面还有很多API是我们没有使用过的。下面我们就来学习一些更加强大的API的用法，从而构建出更加丰富的通知效果。</p><p>setStyle()方法，这个方法允许我们构建出富文本的通知内容。也就是说通知中不光可以有文字和图标，还可以包含更多的东西。setStyle()方法接收一个NotificationCompat.Style参数，这个参数就是用来构建具体的富文本信息的，如长文字、图片等。</p><p>在开始使用setStyle()方法之前，我们先来做一个试验吧，之前的通知内容都比较短，如果设置成很长的文字会是什么效果呢？比如这样写：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Notification</span> notification <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"default"</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">setContentTitle</span><span class="token punctuation">(</span><span class="token string">"My notification"</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">setContentText</span><span class="token punctuation">(</span><span class="token string">"Learn how to build notifications,send and sync data, and use voice actions.Get the official Android IDE and developer tools to build apps for Android."</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在重新运行程序并触发通知，效果如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304271531659.png"></p><p>可以看到，通知内容是无法显示完整的，多余的部分会用省略号来代替。其实这也很正常，因为通知的内容本来就应该言简意赅，详细内容放到点击后打开的活动当中会更加合适。但是如果你真的非常需要在通知当中显示一段长文字，Android也是支持的，通过setStyle()方法就可以做到，具体写法如下:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Notification</span> notification <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"default"</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">setContentTitle</span><span class="token punctuation">(</span><span class="token string">"My notification"</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>BigTextStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bigText</span><span class="token punctuation">(</span><span class="token string">"Learn how to build notifications,send and sync data, and use voice actions.Get the official Android IDE and developer tools to build apps for Android."</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在setStyle()方法中创建了一个NotificationCompat.BigTextStyle对象，这个对象就是用于封装长文字信息的，我们调用它的bigText()方法并将文字内容传入就可以了。再次重新运行程序并触发通知：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304271536523.png"></p><p>除了显示长文字之外，通知里还可以显示一张大图片，具体用法也是基本相似的:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Notification</span> notification <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"default"</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">setContentTitle</span><span class="token punctuation">(</span><span class="token string">"My notification"</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>BigPictureStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bigPicture</span><span class="token punctuation">(</span><span class="token class-name">BitmapFactory</span><span class="token punctuation">.</span><span class="token function">decodeResource</span><span class="token punctuation">(</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>img<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304271542035.png"></p><p>这样我们就把setStyle()方法中的重要内容基本都掌握了。</p><ul><li>PRIORITY_DEFAULT表示默认的重要程度，和不设置效果是一样的；</li><li>PRIORITY_MIN表示最低的重要程度，系统可能只会在特定的场景才显示这条通知，比如用户下拉状态栏的时候；</li><li>PRIORITY_LOW表示较低的重要程度，系统可能会将这类通知缩小，或改变其显示的顺序，将其排在更重要的通知之后；</li><li>PRIORITY_HIGH表示较高的重要程度，系统可能会将这类通知放大，或改变其显示的顺序，将其排在比较靠前的位置；</li><li>PRIORITY_MAX表示最高的重要程度，这类通知消息必须要让用户立刻看到，甚至需要用户做出响应操作。具体写法如下</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Notification</span> notification <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"default"</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                        <span class="token punctuation">.</span><span class="token function">setPriority</span><span class="token punctuation">(</span><span class="token class-name">NotificationCompat</span><span class="token punctuation">.</span><span class="token constant">PRIORITY_MAX</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这里我们将通知的重要程度设置成了最高，表示这是一条非常重要的通知，要求用户必须立刻看到。</p><h2 id="2、调用摄像头和相册"><a href="#2、调用摄像头和相册" class="headerlink" title="2、调用摄像头和相册"></a>2、调用摄像头和相册</h2><p>平时在使用QQ或微信的时候经常要和别人分享图片，这些图片可以是用手机摄像头拍的，也可以是从相册中选取的。几乎在每一个应用程序中都会有，那么本节我们就学习一下调用摄像头和相册方面的知识。</p><h3 id="2-1、调用摄像头拍照"><a href="#2-1、调用摄像头拍照" class="headerlink" title="2.1、调用摄像头拍照"></a>2.1、调用摄像头拍照</h3><p>现在很多的应用都会要求用户上传一张图片来作为头像，这时打开摄像头拍张照是最简单快捷的。下面就让我们通过一个例子来学习一下，如何才能在应用程序里调用手机的摄像头进行拍照。新建一个CameraAlbumTest项目，然后修改activity_main.xml中的代码，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/take_photo<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Take Photo<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageView</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/picture<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center_horizontal<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，布局文件中只有两个控件，一个Button和一个ImageView。Button是用于打开摄像头进行拍照的，而ImageView则是用于将拍到的图片显示出来。然后开始编写调用摄像头的具体逻辑，修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>cameraalbumtest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Nullable</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">FileProvider</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Intent</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span></span><span class="token class-name">Bitmap</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span></span><span class="token class-name">BitmapFactory</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">Uri</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Build</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>provider<span class="token punctuation">.</span></span><span class="token class-name">MediaStore</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ImageView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileNotFoundException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">ImageView</span> imageView<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">TAKE_PHOTO</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Uri</span> imageUri<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//获取button和imageView</span>        <span class="token class-name">Button</span> takePhoto <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>take_photo<span class="token punctuation">)</span><span class="token punctuation">;</span>        imageView<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">ImageView</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>picture<span class="token punctuation">)</span><span class="token punctuation">;</span>        takePhoto<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">//创建File对象，用于存储拍照后的图片</span>                <span class="token class-name">File</span> outputImage<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token function">getExternalCacheDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"out_put.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>outputImage<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        outputImage<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                    outputImage<span class="token punctuation">.</span><span class="token function">createNewFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Build</span><span class="token punctuation">.</span><span class="token constant">VERSION</span><span class="token punctuation">.</span><span class="token constant">SDK_INT</span><span class="token operator">>=</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    imageUri<span class="token operator">=</span> <span class="token class-name">FileProvider</span><span class="token punctuation">.</span><span class="token function">getUriForFile</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"com.example.cameraalbumtest.fileprovider"</span><span class="token punctuation">,</span>outputImage<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    imageUri<span class="token operator">=</span><span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">fromFile</span><span class="token punctuation">(</span>outputImage<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token comment">//启动相机程序</span>                <span class="token class-name">Intent</span> intent<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token string">"android.media.action.IMAGE_CAPTURE"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token class-name">MediaStore</span><span class="token punctuation">.</span><span class="token constant">EXTRA_OUTPUT</span><span class="token punctuation">,</span>imageUri<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">startActivityForResult</span><span class="token punctuation">(</span>intent<span class="token punctuation">,</span><span class="token constant">TAKE_PHOTO</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onActivityResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> <span class="token keyword">int</span> resultCode<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Intent</span> data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onActivityResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span> resultCode<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>requestCode<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token constant">TAKE_PHOTO</span><span class="token operator">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>requestCode <span class="token operator">==</span> <span class="token constant">RESULT_OK</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">Bitmap</span> bitmap <span class="token operator">=</span> <span class="token class-name">BitmapFactory</span><span class="token punctuation">.</span><span class="token function">decodeStream</span><span class="token punctuation">(</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">openInputStream</span><span class="token punctuation">(</span>imageUri<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        imageView<span class="token punctuation">.</span><span class="token function">setImageBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述代码稍微有点复杂，我们来仔细地分析一下。</p><p>在MainActivity中要做的第一件事自然是分别获取到Button和ImageView的实例，并给Button注册上点击事件，然后在Button的点击事件里开始处理调用摄像头的逻辑，我们重点看一下这部分代码。</p><p>首先这里创建了一个File对象，用于存放摄像头拍下的图片，这里我们把图片命名为output_image.jpg，并将它存放在手机SD卡的应用关联缓存目录下。</p><p><strong>什么叫作应用关联缓存目录呢？</strong>就是指SD卡中专门用于存放当前应用缓存数据的位置，调用getExternalCacheDir()方法可以得到这个目录，具体的路径是&#x2F;sdcard&#x2F;Android&#x2F;data&#x2F;包名&#x2F;cache。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304271630923.png"></p><p>那么为什么要使用应用关联缓存目录来存放图片呢？因为从Android 6.0系统开始，读写SD卡被列为了危险权限，如果将图片存放在SD卡的任何其他目录，都要进行运行时权限处理才行，而使用应用关联目录则可以跳过这一步。</p><p>接着会进行一个判断，如果运行设备的系统版本低于Android 7.0，就调用Uri的fromFile()方法将File对象转换成Uri对象，这个Uri对象标识着output_image.jpg这张图片的本地真实路径。否则，就调用FileProvider的getUriForFile()方法将File对象转换成一个封装过的Uri对象。getUriForFile()方法接收3个参数：</p><ul><li>第一个参数要求传入Context对象</li><li>第二个参数可以是任意唯一的字符串</li><li>第三个参数则是我们刚刚创建的File对象</li></ul><p>之所以要进行这样一层转换，是因为从Android 7.0系统开始，直接使用本地真实路径的Uri被认为是不安全的，会抛出一个FileUriExposedException异常。而FileProvider则是一种特殊的内容提供器，它使用了和内容提供器类似的机制来对数据进行保护，可以选择性地将封装过的Uri共享给外部，从而提高了应用的安全性。</p><p>接下来构建出了一个Intent对象，并将这个Intent的action指定为android.media. action.IMAGE_CAPTURE，再调用Intent的putExtra()方法指定图片的输出地址，这里填入刚刚得到的Uri对象，最后调用startActivityForResult()来启动活动。由于我们使用的是一个隐式Intent，系统会找出能够响应这个Intent的活动去启动，这样照相机程序就会被打开，拍下的照片将会输出到output_image.jpg中。</p><p>注意，刚才我们是使用startActivityForResult()来启动活动的，因此拍完照后会有结果返回到onActivityResult()方法中。如果发现拍照成功，就可以调用BitmapFactory的decodeStream()方法将output_image.jpg这张照片解析成Bitmap对象，然后把它设置到ImageView中显示出来。不过现在还没结束，刚才提到了内容提供器，那么我们自然要在AndroidManifest.xml中对内容提供器进行注册了，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>application</span>        <span class="token attr-name"><span class="token namespace">android:</span>allowBackup</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>dataExtractionRules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@xml/data_extraction_rules<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>fullBackupContent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@xml/backup_rules<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@mipmap/ic_launcher<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@string/app_name<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>supportsRtl</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@style/Theme.CameraAlbumTest<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">tools:</span>targetApi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>31<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span>            <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.MainActivity<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.action.MAIN<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.category.LAUNCHER<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activity</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>provider</span>            <span class="token attr-name"><span class="token namespace">android:</span>authorities</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.cameraalbumtest.fileprovider<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>androidx.core.content.FileProvider<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>grantUriPermissions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta-data</span>            <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.support.FILE_PROVIDER_PATHS<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@xml/file_paths<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>provider</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>application</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，android:name属性的值是固定的，android:authorities属性的值必须要和刚才FileProvider.getUriForFile()方法中的第二个参数一致。另外，这里还在<code>&lt;provider&gt;</code>标签的内部使用<code>&lt;meta-data&gt;</code>来指定Uri的共享路径，并引用了一个@xml&#x2F;file_paths资源。当然，这个资源现在还是不存在的，下面我们就来创建它。右击res目录→New→Directory，创建一个xml目录，接着右击xml目录→New→File，创建一个file_paths.xml文件。然后修改file_paths.xml文件中的内容，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>paths</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>external-path</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my_images<span class="token punctuation">"</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>paths</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>其中，external-path就是用来指定Uri共享的，name属性的值可以随便填，path属性的值表示共享的具体路径。这里设置空值就表示将整个SD卡进行共享，你也可以仅共享我们存放output_image.jpg这张图片的路径。</p><p><strong>注意：</strong>上面的path属性设置空值时，会有爆红，但是不会影响运行结果，经测试一样OK。</p><p>另外，还有一点要注意，在Android 4.4系统之前，访问SD卡的应用关联目录也是要声明权限的，从4.4系统开始不再需要权限声明。那么我们为了能够兼容老版本系统的手机，还需要在AndroidManifest.xml中声明一下访问SD卡的权限：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.permission.WRITE_EXTERNAL_STORAGE<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                ...        ...        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">></span></span>        <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样代码就都编写完了，现在将程序运行到手机上，然后点击Take Photo按钮就可以进行拍照了，如图所示：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304271706437.png"></p><h3 id="2-2、从相册中选择照片"><a href="#2-2、从相册中选择照片" class="headerlink" title="2.2、从相册中选择照片"></a>2.2、从相册中选择照片</h3><p>直接从相册里选取一张现有的照片会比打开相机拍一张照片更加常用。下面我们就来看一下，如何才能实现从相册中选择照片的功能。还是在CameraAlbumTest项目的基础上进行修改，编辑activity_main.xml文件，在布局中添加一个按钮用于从相册中选择照片，代码如下所示</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/take_photo<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Take Photo<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageView</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/picture<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center_horizontal<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/choose_from_album<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Choose From Album<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后修改MainActivity中的代码，加入从相册选择照片的逻辑，代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>cameraalbumtest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token namespace">android<span class="token punctuation">.</span></span><span class="token class-name">Manifest</span><span class="token punctuation">.</span>permission<span class="token punctuation">.</span><span class="token constant">WRITE_EXTERNAL_STORAGE</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">NonNull</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Nullable</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">ActivityCompat</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">ContextCompat</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">FileProvider</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span></span><span class="token class-name">Manifest</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">SuppressLint</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">TargetApi</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">Activity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">ContentUris</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Intent</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>pm<span class="token punctuation">.</span></span><span class="token class-name">PackageManager</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>database<span class="token punctuation">.</span></span><span class="token class-name">Cursor</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span></span><span class="token class-name">Bitmap</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span></span><span class="token class-name">BitmapFactory</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">Uri</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Build</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>provider<span class="token punctuation">.</span></span><span class="token class-name">DocumentsContract</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>provider<span class="token punctuation">.</span></span><span class="token class-name">MediaStore</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">ImageView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileNotFoundException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Target</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">ImageView</span> imageView<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">TAKE_PHOTO</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">CHOOSE_PHOTO</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Uri</span> imageUri<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">openAlbum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//获取内容</span>        <span class="token class-name">Intent</span> intent<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token string">"android.intent.action.GET_CONTENT"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//表示获取图片类型的内容</span>        intent<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token string">"image/*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//启动选择图片的Activity，等待用户选择一张图片并返回结果。</span>        <span class="token function">startActivityForResult</span><span class="token punctuation">(</span>intent<span class="token punctuation">,</span><span class="token constant">CHOOSE_PHOTO</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> takePhoto <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>take_photo<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> choosePhoto<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>choose_from_album<span class="token punctuation">)</span><span class="token punctuation">;</span>        choosePhoto<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span><span class="token comment">//运行时权限处理，动态申请WRITE_EXTERNAL_STORAGE</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ContextCompat</span><span class="token punctuation">.</span><span class="token function">checkSelfPermission</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token class-name">Manifest</span><span class="token punctuation">.</span>permission<span class="token punctuation">.</span><span class="token constant">WRITE_EXTERNAL_STORAGE</span><span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token class-name">PackageManager</span><span class="token punctuation">.</span><span class="token constant">PERMISSION_GRANTED</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token comment">//没有权限就申请</span>                    <span class="token class-name">ActivityCompat</span><span class="token punctuation">.</span><span class="token function">requestPermissions</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name">Manifest</span><span class="token punctuation">.</span>permission<span class="token punctuation">.</span><span class="token constant">WRITE_EXTERNAL_STORAGE</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">//有直接打开相册</span>                    <span class="token function">openAlbum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        imageView<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">ImageView</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>picture<span class="token punctuation">)</span><span class="token punctuation">;</span>        takePhoto<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">//创建File对象，用于存储拍照后的图片</span>                <span class="token class-name">File</span> outputImage<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token function">getExternalCacheDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"out_put.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>outputImage<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        outputImage<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                    outputImage<span class="token punctuation">.</span><span class="token function">createNewFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Build</span><span class="token punctuation">.</span><span class="token constant">VERSION</span><span class="token punctuation">.</span><span class="token constant">SDK_INT</span><span class="token operator">>=</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    imageUri<span class="token operator">=</span> <span class="token class-name">FileProvider</span><span class="token punctuation">.</span><span class="token function">getUriForFile</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"com.example.cameraalbumtest.fileprovider"</span><span class="token punctuation">,</span>outputImage<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    imageUri<span class="token operator">=</span><span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">fromFile</span><span class="token punctuation">(</span>outputImage<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token comment">//启动相机程序</span>                <span class="token class-name">Intent</span> intent<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token string">"android.media.action.IMAGE_CAPTURE"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token class-name">MediaStore</span><span class="token punctuation">.</span><span class="token constant">EXTRA_OUTPUT</span><span class="token punctuation">,</span>imageUri<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">startActivityForResult</span><span class="token punctuation">(</span>intent<span class="token punctuation">,</span><span class="token constant">TAKE_PHOTO</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@SuppressLint</span><span class="token punctuation">(</span><span class="token string">"Range"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">getImagePath</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> uri<span class="token punctuation">,</span> <span class="token class-name">String</span> selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> path <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token comment">//通过Uri和Selection来获取真是的路径图片</span>        <span class="token class-name">Cursor</span> cursor <span class="token operator">=</span> <span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span>selection<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>cursor <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">moveToFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                path <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token class-name">MediaStore<span class="token punctuation">.</span>Images<span class="token punctuation">.</span>Media</span><span class="token punctuation">.</span><span class="token constant">DATA</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            cursor<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> path<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onRequestPermissionsResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> permissions<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grantResults<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onRequestPermissionsResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span> permissions<span class="token punctuation">,</span> grantResults<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>requestCode<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>grantResults<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> grantResults<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token class-name">PackageManager</span><span class="token punctuation">.</span><span class="token constant">PERMISSION_GRANTED</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token function">openAlbum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"You denied the permission"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onActivityResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> <span class="token keyword">int</span> resultCode<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Intent</span> data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onActivityResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span> resultCode<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>requestCode<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token constant">TAKE_PHOTO</span><span class="token operator">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>resultCode <span class="token operator">==</span> <span class="token constant">RESULT_OK</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">Bitmap</span> bitmap <span class="token operator">=</span> <span class="token class-name">BitmapFactory</span><span class="token punctuation">.</span><span class="token function">decodeStream</span><span class="token punctuation">(</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">openInputStream</span><span class="token punctuation">(</span>imageUri<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        imageView<span class="token punctuation">.</span><span class="token function">setImageBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token keyword">case</span> <span class="token constant">CHOOSE_PHOTO</span><span class="token operator">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>resultCode<span class="token operator">==</span><span class="token constant">RESULT_OK</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token comment">//判断手机系统版本号</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Build</span><span class="token punctuation">.</span><span class="token constant">VERSION</span><span class="token punctuation">.</span><span class="token constant">SDK_INT</span><span class="token operator">>=</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        <span class="token comment">//4.4以上系统使用这个方法处理图片</span>                        <span class="token function">handleImageOnkitkat</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                        <span class="token comment">//4/4以下系统使用这个方法处理图片</span>                        <span class="token function">handleImageBeforeKitkat</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@TargetApi</span><span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">)</span>    <span class="token comment">//安卓版本大于4.4</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">handleImageOnkitkat</span><span class="token punctuation">(</span><span class="token class-name">Intent</span> data<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> imagePath<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token comment">//从Intent中获取选择的图片Uri</span>        <span class="token class-name">Uri</span> uri <span class="token operator">=</span>data<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">DocumentsContract</span><span class="token punctuation">.</span><span class="token function">isDocumentUri</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">//判断Uri的类型，如果是Document类型的Uri，则需要通过Document id来处理。如果是Content类型的Uri，则直接使用普通方式。</span>            <span class="token comment">//如果是Media Provider类型的Uri（即"com.android.providers.media.documents"），则需要从document id中截取出图片的ID，再根据图片的ID查询MediaStore.Images表，获取图片路径。</span>            <span class="token class-name">String</span> documentid<span class="token operator">=</span><span class="token class-name">DocumentsContract</span><span class="token punctuation">.</span><span class="token function">getDocumentId</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"com.android.providers.media.documents"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>uri<span class="token punctuation">.</span><span class="token function">getAuthority</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token class-name">String</span> id<span class="token operator">=</span>documentid<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> selection<span class="token operator">=</span><span class="token class-name">MediaStore<span class="token punctuation">.</span>Images<span class="token punctuation">.</span>Media</span><span class="token punctuation">.</span>_ID<span class="token operator">+</span><span class="token string">"="</span><span class="token operator">+</span>id<span class="token punctuation">;</span>                imagePath<span class="token operator">=</span><span class="token function">getImagePath</span><span class="token punctuation">(</span><span class="token class-name">MediaStore<span class="token punctuation">.</span>Images<span class="token punctuation">.</span>Media</span><span class="token punctuation">.</span><span class="token constant">EXTERNAL_CONTENT_URI</span><span class="token punctuation">,</span>selection<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"com.android.providers.downloads.documents"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>uri<span class="token punctuation">.</span><span class="token function">getAuthority</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">//如果是Download Provider类型的Uri（即"com.android.providers.downloads.documents"），则需要从document id中截取出下载管理器的ID，然后根据该ID查询Downloads表获取下载文件的路径。</span>                <span class="token class-name">Uri</span> contenturi<span class="token operator">=</span> <span class="token class-name">ContentUris</span><span class="token punctuation">.</span><span class="token function">withAppendedId</span><span class="token punctuation">(</span><span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">"content://downloads/public_downloads"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>documentid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                imagePath<span class="token operator">=</span><span class="token function">getImagePath</span><span class="token punctuation">(</span>contenturi<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">//如果是Content类型的Uri，则直接使用getContentResolver().query()方法查询Uri对应的数据，然后获取图片路径。</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>uri<span class="token punctuation">.</span><span class="token function">getScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            imagePath<span class="token operator">=</span><span class="token function">getImagePath</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>uri<span class="token punctuation">.</span><span class="token function">getScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//如果是file类型的uri,直接获取图片路径</span>            imagePath<span class="token operator">=</span>uri<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">displayImage</span><span class="token punctuation">(</span>imagePath<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//安卓版本小于4.4</span>    <span class="token keyword">private</span>  <span class="token keyword">void</span> <span class="token function">handleImageBeforeKitkat</span><span class="token punctuation">(</span><span class="token class-name">Intent</span> data<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Uri</span> uri <span class="token operator">=</span>data<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> imagePath<span class="token operator">=</span><span class="token function">getImagePath</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">displayImage</span><span class="token punctuation">(</span>imagePath<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">displayImage</span><span class="token punctuation">(</span><span class="token class-name">String</span> imagePath<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>imagePath <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Bitmap</span> bitmap <span class="token operator">=</span> <span class="token class-name">BitmapFactory</span><span class="token punctuation">.</span><span class="token function">decodeFile</span><span class="token punctuation">(</span>imagePath<span class="token punctuation">)</span><span class="token punctuation">;</span>            imageView<span class="token punctuation">.</span><span class="token function">setImageBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"failed to get image"</span><span class="token punctuation">,</span><span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，在Choose From Album按钮的点击事件里我们先是进行了一个运行时权限处理，动态申请WRITE_EXTERNAL_STORAGE这个危险权限。</p><p>为什么需要申请这个权限呢？因为相册中的照片都是存储在SD卡上的，要从SD卡中读取照片就需要申请这个权限。WRITE_EXTERNAL_STORAGE表示同时授予程序对SD卡读和写的能力。当用户授权了权限申请之后会调用openAlbum()方法，这里先是构建出了一个Intent对象，并将它的action指定为android.intent.action.GET_CONTENT。接着给这个Intent对象设置一些必要的参数，然后调用startActivityForResult()方法就可以打开相册程序选择照片了.</p><p>注意，在调用startActivityForResult()方法的时候，我们给第二个参数传入的值变成了CHOOSE_PHOTO，这样当从相册选择完图片回到onActivityResult()方法时，就会进入CHOOSE_PHOTO的case来处理图片。</p><p>接下来的逻辑就比较复杂了，首先为了兼容新老版本的手机，我们做了一个判断，如果是4.4及以上系统的手机就调用handleImageOnKitKat()方法来处理图片，否则就调用handleImageBeforeKitkat()方法来处理图片。之所以要这样做，是因为Android系统从4.4版本开始，选取相册中的图片不再返回图片真实的Uri了，而是一个封装过的Uri，因此如果是4.4版本以上的手机就需要对这个Uri进行解析才行。</p><p>现在将程序重新运行到手机上，然后点击一下Choose From Album按钮，首先会弹出权限申请框，如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304281350692.png"></p><p>点击允许之后就会打开手机相册，如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304281351054.png"></p><p>然后，随意选择一张照片，回到我们程序的界面，选中的照片应该就会显示出来了，如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304281353009.png"></p><p>不过，目前我们的实现还不算完美，因为某些照片即使经过裁剪后体积仍然很大，直接加载到内存中有可能会导致程序崩溃。更好的做法是根据项目的需求先对照片进行适当的压缩，然后再加载到内存中。至于如何对照片进行压缩，就要考验你查阅资料的能力了，这里就不再展开进行讲解了。</p><h2 id="3、播放多媒体文件"><a href="#3、播放多媒体文件" class="headerlink" title="3、播放多媒体文件"></a>3、播放多媒体文件</h2><p>Android在播放音频和视频方面也是做了相当不错的支持，它提供了一套较为完整的API，使得开发者可以很轻松地编写出一个简易的音频或视频播放器，下面我们就来具体地学习一下。</p><h3 id="3-1、播放音频"><a href="#3-1、播放音频" class="headerlink" title="3.1、播放音频"></a>3.1、播放音频</h3><p>在Android中播放音频文件一般都是使用MediaPlayer类来实现的，它对多种格式的音频文件提供了非常全面的控制方法，从而使得播放音乐的工作变得十分简单。下表列出了MediaPlayer类中一些较为常用的控制方法。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304281359771.png"></p><p>单了解了上述方法后，我们再来梳理一下MediaPlayer的工作流程。首先需要创建出一个MediaPlayer对象，然后调用setDataSource()方法来设置音频文件的路径，再调用prepare()方法使MediaPlayer进入到准备状态，接下来调用start()方法就可以开始播放音频，调用pause()方法就会暂停播放，调用reset()方法就会停止播放。</p><p>下面就让我们通过一个具体的例子来学习一下吧，新建一个PlayAudioTest项目，然后修改activity_main.xml中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token class-name">LinearLayout</span> xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span>    android<span class="token operator">:</span>orientation<span class="token operator">=</span><span class="token string">"vertical"</span>    android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>    android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token class-name">Button</span>        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/play"</span>        android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"Play"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token class-name">Button</span>        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/pause"</span>        android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"Pause"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token class-name">Button</span>        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/stop"</span>        android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"Stop"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token class-name">LinearLayout</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>布局文件中放置了3个按钮，分别用于对音频文件进行播放、暂停和停止操作。然后修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>playaudiotest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">NonNull</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">ActivityCompat</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">ContextCompat</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span></span><span class="token class-name">Manifest</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>pm<span class="token punctuation">.</span></span><span class="token class-name">PackageManager</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>media<span class="token punctuation">.</span></span><span class="token class-name">MediaPlayer</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Environment</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token keyword">implements</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">MediaPlayer</span> mediaPlayer<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">MediaPlayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> play<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>play<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> pause<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>pause<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> stop<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>stop<span class="token punctuation">)</span><span class="token punctuation">;</span>        play<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        pause<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        stop<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ContextCompat</span><span class="token punctuation">.</span><span class="token function">checkSelfPermission</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token class-name">Manifest</span><span class="token punctuation">.</span>permission<span class="token punctuation">.</span><span class="token constant">WRITE_EXTERNAL_STORAGE</span><span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token class-name">PackageManager</span><span class="token punctuation">.</span><span class="token constant">PERMISSION_GRANTED</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">ActivityCompat</span><span class="token punctuation">.</span><span class="token function">requestPermissions</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token class-name">Manifest</span><span class="token punctuation">.</span>permission<span class="token punctuation">.</span><span class="token constant">WRITE_EXTERNAL_STORAGE</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token function">initMediaPlayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//初始化MediaPlayer</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initMediaPlayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">File</span> file<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token class-name">Environment</span><span class="token punctuation">.</span><span class="token function">getExternalStorageDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"music.mp3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            mediaPlayer<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            mediaPlayer<span class="token punctuation">.</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onRequestPermissionsResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> permissions<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grantResults<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onRequestPermissionsResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span> permissions<span class="token punctuation">,</span> grantResults<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>requestCode<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>grantResults<span class="token punctuation">.</span>length<span class="token operator">></span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>grantResults<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token class-name">PackageManager</span><span class="token punctuation">.</span><span class="token constant">PERMISSION_GRANTED</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token function">initMediaPlayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"拒绝权限将无法使用程序"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>play<span class="token operator">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mediaPlayer<span class="token punctuation">.</span><span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    mediaPlayer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>pause<span class="token operator">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>mediaPlayer<span class="token punctuation">.</span><span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    mediaPlayer<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>stop<span class="token operator">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>mediaPlayer<span class="token punctuation">.</span><span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    mediaPlayer<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">initMediaPlayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>mediaPlayer<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            mediaPlayer<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            mediaPlayer<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，在类初始化的时候我们就先创建了一个MediaPlayer的实例，然后在onCreate()方法中进行了运行时权限处理，动态申请WRITE_EXTERNAL_STORAGE权限。这是由于待会我们会在SD卡中放置一个音频文件，程序为了播放这个音频文件必须拥有访问SD卡的权限才行。注意，在onRequestPermissionsResult()方法中，如果用户拒绝了权限申请，那么就调用finish()方法将程序直接关掉，因为如果没有SD卡的访问权限，我们这个程序将什么都干不了。</p><p>用户同意授权之后就会调用initMediaPlayer()方法为MediaPlayer对象进行初始化操作。在initMediaPlayer()方法中，首先是通过创建一个File对象来指定音频文件的路径，从这里可以看出，我们需要事先在SD卡的根目录下放置一个名为music.mp3的音频文件。后面依次调用了setDataSource()方法和prepare()方法，为MediaPlayer做好了播放前的准备。</p><p>接下来，我们看一下各个按钮的点击事件中的代码。</p><p>当点击Play按钮时会进行判断，如果当前MediaPlayer没有正在播放音频，则调用start()方法开始播放。当点击Pause按钮时会判断，如果当前MediaPlayer正在播放音频，则调用pause()方法暂停播放，如果当前MediaPlayer没有播放音频，则调用start()方法开始播放。当点击Stop按钮时会判断，如果当前MediaPlayer正在播放音频，则调用reset()方法将MediaPlayer重置为刚刚创建的状态，然后重新调用一遍initMediaPlayer()方法。</p><p>最后在onDestroy()方法中，我们还需要分别调用stop()方法和release()方法，将与MediaPlayer相关的资源释放掉。另外，千万不要忘记在AndroidManifest.xml文件中声明用到的权限，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.permission.WRITE_EXTERNAL_STORAGE<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            ...    ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">></span></span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样一个简易版的音乐播放器就完成了，现在将程序运行到手机上会先弹出权限申请框，如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304281520071.png"></p><p>同意授权之后就可以开始播放音乐了，点击一下Play按钮，优美的音乐就会响起，然后点击Pause按钮，音乐就会停住，再次点击Play按钮（或者Pause按钮），会接着暂停之前的位置继续播放。这时如果点击一下Stop按钮，音乐也会停住，但是当再次点击Play按钮时，音乐就会从头开始播放了。</p><h3 id="3-2、播放视频"><a href="#3-2、播放视频" class="headerlink" title="3.2、播放视频"></a>3.2、播放视频</h3><p>播放视频文件其实并不比播放音频文件复杂，主要是使用VideoView类来实现的。这个类将视频的显示和控制集于一身，使得我们仅仅借助它就可以完成一个简易的视频播放器。VideoView的用法和MediaPlayer也比较类似，主要有以下常用方法：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304281531973.png"></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/play<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Play<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/pause<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Pause<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/replay<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Replay<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VideoView</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/video_view<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个布局文件中，首先放置了3个按钮，分别用于控制视频的播放、暂停和重新播放。然后在按钮下面又放置了一个VideoView，稍后的视频就将在这里显示。接下来修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>playvideotest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">NonNull</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">ActivityCompat</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">ContextCompat</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span></span><span class="token class-name">Manifest</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>pm<span class="token punctuation">.</span></span><span class="token class-name">PackageManager</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Environment</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Toast</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">VideoView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token keyword">implements</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">VideoView</span> videoView<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        videoView<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">VideoView</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>video_view<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> play<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>play<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> pause<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>pause<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> replay<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>replay<span class="token punctuation">)</span><span class="token punctuation">;</span>        play<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        pause<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        replay<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ContextCompat</span><span class="token punctuation">.</span><span class="token function">checkSelfPermission</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token class-name">Manifest</span><span class="token punctuation">.</span>permission<span class="token punctuation">.</span><span class="token constant">WRITE_EXTERNAL_STORAGE</span><span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token class-name">PackageManager</span><span class="token punctuation">.</span><span class="token constant">PERMISSION_GRANTED</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">ActivityCompat</span><span class="token punctuation">.</span><span class="token function">requestPermissions</span><span class="token punctuation">(</span><span class="token class-name">MainActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span> <span class="token class-name">Manifest</span><span class="token punctuation">.</span>permission<span class="token punctuation">.</span><span class="token constant">WRITE_EXTERNAL_STORAGE</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token function">initVideoPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initVideoPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">File</span> file<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token class-name">Environment</span><span class="token punctuation">.</span><span class="token function">getExternalStorageDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"movie.mp4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        videoView<span class="token punctuation">.</span><span class="token function">setVideoPath</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onRequestPermissionsResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> permissions<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grantResults<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onRequestPermissionsResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span> permissions<span class="token punctuation">,</span> grantResults<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>requestCode<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>grantResults<span class="token punctuation">.</span>length<span class="token operator">></span><span class="token number">0</span><span class="token operator">&amp;&amp;</span> grantResults<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token class-name">PackageManager</span><span class="token punctuation">.</span><span class="token constant">PERMISSION_GRANTED</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token function">initVideoPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                    <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"拒绝权限将无法使用程序"</span><span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>play<span class="token operator">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>videoView<span class="token punctuation">.</span><span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    videoView<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>pause<span class="token operator">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>videoView<span class="token punctuation">.</span><span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    videoView<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>replay<span class="token operator">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>videoView<span class="token punctuation">.</span><span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    videoView<span class="token punctuation">.</span><span class="token function">resume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>videoView<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            videoView<span class="token punctuation">.</span><span class="token function">suspend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304281623584.png"></p><p>这部分代码和前面播放音频的代码非常类似。首先在onCreate()方法中同样进行了一个运行时权限处理，因为视频文件将会放在SD卡上。当用户同意授权了之后就会调用initVideoPath()方法来设置视频文件的路径，这里我们需要事先在SD卡的根目录下放置一个名为：movie.mp4的视频文件。</p><p>下面看一下各个按钮的点击事件中的代码。当点击Play按钮时会进行判断，如果当前并没有正在播放视频，则调用start()方法开始播放。当点击Pause按钮时会判断，如果当前视频正在播放，则调用pause()方法暂停播放。当点击Replay按钮时会判断，如果当前视频正在播放，则调用resume()方法从头播放视频。最后在onDestroy()方法中，我们还需要调用一下suspend()方法，将VideoView所占用的资源释放掉。另外，仍然始终要记得在AndroidManifest.xml文件中声明用到的权限，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.permission.WRITE_EXTERNAL_STORAGE<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    ...    ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>点击Pause按钮可以暂停视频的播放，点击Replay按钮可以从头播放视频。现在我们运行程序进行测试：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202304281652316.png"></p><p>为什么它的用法和MediaPlayer这么相似呢？其实VideoView只是帮我们做了一个很好的封装而已，它的背后仍然是使用MediaPlayer来对视频文件进行控制的。需要注意，VideoView并不是一个万能的视频播放工具类，它在视频格式的支持以及播放效率方面都存在着较大的不足。所以，如果想要仅仅使用VideoView就编写出一个功能非常强大的视频播放器是不太现实的。但是如果只是用于播放一些游戏的片头动画，或者某个应用的视频宣传，使用VideoView还是绰绰有余的。</p><h2 id="4、总结"><a href="#4、总结" class="headerlink" title="4、总结"></a>4、总结</h2><p>本章主要对Android系统中的各种多媒体技术进行了学习，其中包括通知的使用技巧、调用摄像头拍照、从相册中选取照片，以及播放音频和视频文件。</p>]]></content>
      
      
      <categories>
          
          <category> Android开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android开发学习笔记(9)——网络技术</title>
      <link href="//post/the_first_code9.html"/>
      <url>//post/the_first_code9.html</url>
      
        <content type="html"><![CDATA[<h1 id="第九章——网络技术"><a href="#第九章——网络技术" class="headerlink" title="第九章——网络技术"></a>第九章——网络技术</h1><p>现在早已不是玩单机的时代了，无论是PC、手机、平板，还是电视，几乎都会具备上网的功能，在可预见的未来，手表、眼镜、汽车等设备也会逐个加入到这个行列，21世纪的确是互联网的时代。当然，Android手机肯定也是可以上网的，所以作为开发者，我们就需要考虑如何利用网络来编写出更加出色的应用程序，像QQ、微博、微信等常见的应用都会大量使用网络技术。本章主要会讲述如何在手机端使用HTTP协议和服务器端进行网络交互，并对服务器返回的数据进行解析，这也是Android中最常使用到的网络技术，下面就让我们一起来学习一下吧。</p><h2 id="1、WebView的用法"><a href="#1、WebView的用法" class="headerlink" title="1、WebView的用法"></a>1、WebView的用法</h2><p>比如说，要求在应用程序里展示一些网页。加载和显示网页通常都是浏览器的任务，但是需求里又明确指出，不允许打开系统浏览器，而我们当然也不可能自己去编写一个浏览器出来，这时应该怎么办呢？</p><p>Android早就已经考虑到了，并提供了一个WebView控件，借助它就可以在自己的应用程序里嵌入一个浏览器，从而非常轻松地展示各种各样的网页。WebView的用法也是相当简单，下面我们就通过一个例子来学习一下吧。新建一个WebViewTest项目，然后修改activity_main.xml中的代码，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>WebView</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/web_view<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在布局文件中使用到了一个新的控件：WebView。这个控件用来显示网页的，给它设置了一个id，并让它充满整个屏幕。然后修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>webviewtest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>webkit<span class="token punctuation">.</span></span><span class="token class-name">WebView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>webkit<span class="token punctuation">.</span></span><span class="token class-name">WebViewClient</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">WebView</span> webView<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">WebView</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>web_view<span class="token punctuation">)</span><span class="token punctuation">;</span>        webView<span class="token punctuation">.</span><span class="token function">getSettings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setJavaScriptEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        webView<span class="token punctuation">.</span><span class="token function">setWebViewClient</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WebViewClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        webView<span class="token punctuation">.</span><span class="token function">loadUrl</span><span class="token punctuation">(</span><span class="token string">"https://www.baidu.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>MainActivity中，首先使用findViewById()方法获取到了WebView的实例，然后调用WebView的getSettings()方法可以去设置一些浏览器的属性，这里只是调用了setJavaScriptEnabled()方法来让WebView支持JavaScript脚本</p><p>接下来，调用了WebView的setWebViewClient()方法，并传入了一个WebViewClient的实例。这段代码的作用是，当需要从一个网页跳转到另一个网页时，我们希望目标网页仍然在当前WebView中显示，而不是打开系统浏览器。</p><p>最后一步，调用WebView的loadUrl()方法，并将网址传入，即可展示相应网页的内容</p><p>另外还需要注意，由于本程序使用到了网络功能，而访问网络是需要声明权限的，因此我们还得修改AndroidManifest.xml文件，并加入权限声明，并且在application节点添加android:usesCleartextTraffic&#x3D;”true”，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.permission.INTERNET<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    &lt;application        android:usesCleartextTraffic="true"                                          ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">></span></span>                 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在开始运行之前，首先需要保证你的手机或模拟器是联网的，如果你使用的是模拟器，只需保证电脑能正常上网即可。然后就可以运行一下程序了，效果如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305011737316.png"></p><p>可以看到，WebViewTest这个程序现在已经具备了一个简易浏览器的功能，不仅成功将百度展示了出来，还可以通过点击链接浏览更多的网页。</p><p>当然，WebView还有很多更加高级的使用技巧，就不再继续进行探讨了。这里先介绍了一下WebView的用法，只是希望你能对HTTP协议的使用有一个最基本的认识，接下来就要利用这个协议来做一些真正的网络开发工作。</p><h2 id="2、使用HTTP协议访问网络"><a href="#2、使用HTTP协议访问网络" class="headerlink" title="2、使用HTTP协议访问网络"></a>2、使用HTTP协议访问网络</h2><p>如果说真的要去深入分析HTTP协议，可能需要花费整整一本书的篇幅。这里你只需要稍微了解一些就足够了，它的工作原理特别简单，就是客户端向服务器发出一条HTTP请求，服务器收到请求之后会返回一些数据给客户端，然后客户端再对这些数据进行解析和处理就可以了。比如，上一节中使用到的WebView控件，其实也就是我们向服务器发起了一条HTTP请求，接着服务器分析出我们想要访问的页面，于是会把该网页的HTML代码进行返回，然后WebView再调用手机浏览器的内核对返回的HTML代码进行解析，最终将页面展示出来。</p><p>简单来说，WebView已经在后台帮我们处理好了发送HTTP请求、接收服务响应、解析返回数据，以及最终的页面展示这几步工作，不过由于它封装得实在是太好了，反而使得我们不能那么直观地看出HTTP协议到底是如何工作的。因此，接下来就让我们通过手动发送HTTP请求的方式，来更加深入地理解一下这个过程。</p><h3 id="2-1、使用HttpURLConnection"><a href="#2-1、使用HttpURLConnection" class="headerlink" title="2.1、使用HttpURLConnection"></a>2.1、使用HttpURLConnection</h3><p>在过去，Android上发送HTTP请求一般有两种方式：HttpURLConnection和HttpClient。不过由于HttpClient存在API数量过多、扩展困难等缺点，Android团队越来越不建议我们使用这种方式。终于在Android 6.0系统中，HttpClient的功能被完全移除了，标志着此功能被正式弃用，因此本小节我们就学习一下现在官方建议使用的HttpURLConnection的用法。</p><p>首先需要获取到HttpURLConnection的实例，一般只需new出一个URL对象，并传入目标的网络地址，然后调用一下openConnection()方法即可，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">URL</span> url <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span><span class="token string">"http://baidu.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">HttpURLConnection</span> connection <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpURLConnection</span><span class="token punctuation">)</span>url<span class="token punctuation">.</span><span class="token function">openConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在得到了HttpURLConnection的实例之后，可以设置一下HTTP请求所使用的方法。常用的方法主要有两个：GET和POST。GET表示希望从服务器那里获取数据，而POST则表示希望提交数据给服务器。写法如下</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">connection<span class="token punctuation">.</span><span class="token function">setRequestMethod</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接下来，就可以进行一些自由的定制了，比如设置连接超时、读取超时的毫秒数，以及服务器希望得到的一些消息头等。这部分内容根据自己的实际情况进行编写，示例写法如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">connection<span class="token punctuation">.</span><span class="token function">setConnectTimeout</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>connection<span class="token punctuation">.</span><span class="token function">setReadTimeout</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>之后再调用getInputStream()方法就可以获取到服务器返回的输入流了，剩下的任务就是对输入流进行读取，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">InputStream</span> in <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最后，可以调用disconnect()方法将这个HTTP连接关闭掉，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">connection<span class="token punctuation">.</span><span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下面通过一个具体的例子来真正体验一下HttpURLConnection的用法。新建一个NetworkTest项目，首先修改activity_main.xml中的代码，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/send_request<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Send Request<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ScrollView</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/response_text<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ScrollView</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用了一个新的控件：ScrollView，它是用来做什么的呢？由于手机屏幕的空间一般都比较小，有些时候过多的内容一屏是显示不下的，借助ScrollView控件的话，我们就可以以滚动的形式查看屏幕外的那部分内容。另外，布局中还放置了一个Button和一个TextView, Button用于发送HTTP请求，TextView用于将服务器返回的数据显示出来。接着修改MainActivity中的代码，如下所示:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>networktest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">Button</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">TextView</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">BufferedReader</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStreamReader</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Reader</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">HttpURLConnection</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URL</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span>  <span class="token keyword">implements</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">&#123;</span>    <span class="token class-name">TextView</span> responseText<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> sendRequest <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>send_request<span class="token punctuation">)</span><span class="token punctuation">;</span>        responseText<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">TextView</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>response_text<span class="token punctuation">)</span><span class="token punctuation">;</span>        sendRequest<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>send_request<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">sendRequestWithHttpURLConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">sendRequestWithHttpURLConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">HttpURLConnection</span> connection<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>                <span class="token class-name">BufferedReader</span> reader<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">URL</span> url<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span><span class="token string">"https://www.baidu.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    connection<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">HttpURLConnection</span><span class="token punctuation">)</span> url<span class="token punctuation">.</span><span class="token function">openConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    connection<span class="token punctuation">.</span><span class="token function">setRequestMethod</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    connection<span class="token punctuation">.</span><span class="token function">setConnectTimeout</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    connection<span class="token punctuation">.</span><span class="token function">setReadTimeout</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">InputStream</span> in <span class="token operator">=</span>connection<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment">//下面对获取到的输入流进行读取</span>                    reader<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">String</span> line<span class="token punctuation">;</span>                    <span class="token class-name">StringBuilder</span> response<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>line <span class="token operator">=</span>reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        response<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token function">showResponse</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>reader<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                            reader<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>connection<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        connection<span class="token punctuation">.</span><span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">showResponse</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> response<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">runOnUiThread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                responseText<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，在Send Request按钮的点击事件里调用了sendRequestWithHttpURLConnection()方法，在这个方法中先是开启了一个子线程，然后在子线程里使用HttpURLConnection发出一条HTTP请求，请求的目标地址就是百度的首页。接着利用BufferedReader对服务器返回的流进行读取，并将结果传入到了showResponse()方法中。而在showResponse()方法里则是调用了一个runOnUiThread()方法，然后在这个方法的匿名类参数中进行操作，将返回的数据显示到界面上。</p><p>那么这里为什么要用这个runOnUiThread()方法呢？这是因为<strong>Android是不允许在子线程中进行UI操作的，我们需要通过这个方法将线程切换到主线程，然后再更新UI元素。</strong>关于这部分内容，我们将会在下一章中进行详细讲解，现在你只需要记得必须这么写就可以了。完整的一套流程就是这样，不过在开始运行之前，仍然别忘了要<strong>声明网络权限</strong>。修改AndroidManifest.xml中的代码，如下所示：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.permission.INTERNET<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">></span></span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305021705607.png"></p><p>服务器返回给我们的就是这种HTML代码，只是通常情况下浏览器都会将这些代码解析成漂亮的网页后再展示出来。</p><p>那么如果是想要提交数据给服务器应该怎么办呢？只需要将HTTP请求的方法改成POST，并在获取输入流之前把要提交的数据写出即可。注意每条数据都要以键值对的形式存在，数据与数据之间用“&amp;”符号隔开，比如说我们想要向服务器提交用户名和密码，就可以这样写：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">connection<span class="token punctuation">.</span><span class="token function">setRequestMethod</span><span class="token punctuation">(</span><span class="token string">"POST"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">DataOutputStream</span> outputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataOutputStream</span><span class="token punctuation">(</span>connection<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>outputStream<span class="token punctuation">.</span><span class="token function">writeBytes</span><span class="token punctuation">(</span><span class="token string">"username=admin&amp;&amp;password=123456"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-2、使用OkHttp"><a href="#2-2、使用OkHttp" class="headerlink" title="2.2、使用OkHttp"></a>2.2、使用OkHttp</h3><p>当然，我们并不是只能使用HttpURLConnection，完全没有任何其他选择，事实上在开源盛行的今天，有许多出色的网络通信库都可以替代原生的HttpURLConnection，而其中OkHttp无疑是做得最出色的一个。</p><p>OkHttp是由鼎鼎大名的Square公司开发的，这个公司在开源事业上面贡献良多，除了OkHttp之外，还开发了像Picasso、Retrofit等著名的开源项目。OkHttp不仅在接口封装上面做得简单易用，就连在底层实现上也是自成一派，比起原生的HttpURLConnection，可以说是有过之而无不及，现在已经成了广大Android开发者首选的网络通信库。那么本小节我们就来学习一下OkHttp的用法，OkHttp的项目主页地址是：<a href="https://github.com/square/okhttp%E3%80%82">https://github.com/square/okhttp。</a></p><p>在使用OkHttp之前，我们需要先在项目中添加OkHttp库的依赖。编辑app&#x2F;build.gradle文件，在dependencies闭包中添加如下内容：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string">"com.squareup.okhttp3:okhttp:4.11.0"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>添加上述依赖会自动下载两个库，一个是OkHttp库，一个是Okio库，后者是前者的通信基础。</p><p>下面我们来看一下OkHttp的具体用法，首先需要创建一个OkHttpClient的实例，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">OkHttpClient</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OkHttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接下来，如果想要发起一条HTTP请求，就需要创建一个Request对象：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Request</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Request<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>当然，上述代码只是创建了一个空的Request对象，并没有什么实际作用，我们可以在最终的build()方法之前连缀很多其他方法来丰富这个Request对象。比如可以通过url()方法来设置目标的网络地址，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Request</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Request<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token string">"https://www.baidu.com"</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>之后，调用OkHttpClient的newCall()方法来创建一个Call对象，并调用它的execute()方法来发送请求并获取服务器返回的数据，写法如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Response</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">newCall</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中，Response对象就是服务器返回的数据了，我们可以使用如下写法来得到返回的具体内容：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> responseData <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果是发起一条POST请求会比GET请求稍微复杂一点，我们需要先构建出一个RequestBody对象来存放待提交的参数，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">RequestBody</span> requestBody <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormBody<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span><span class="token string">"admin"</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">,</span><span class="token string">"123456"</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后，在Request.Builder中调用一下post()方法，并将RequestBody对象传入：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Request</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Request<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token string">"https://www.baidu.com"</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>requestBody<span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>接下来的操作就和GET请求一样了，调用execute()方法来发送请求并获取服务器返回的数据即可。</p><p>书中后面所有网络相关的功能我们都将会使用OkHttp来实现，到时候再进行进一步的学习。那么现在我们先把NetworkTest这个项目改用OkHttp的方式再实现一遍吧。由于布局部分完全不用改动，所以现在直接修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">sendRequestWithOkHttp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token annotation punctuation">@Override</span>           <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                   <span class="token class-name">OkHttpClient</span> okHttpClient<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">OkHttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token class-name">Request</span> request<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Request<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                           <span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token string">"https://www.baidu.com"</span><span class="token punctuation">)</span>                           <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token class-name">Response</span> response<span class="token operator">=</span>okHttpClient<span class="token punctuation">.</span><span class="token function">newCall</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token class-name">String</span> responseData<span class="token operator">=</span>response<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token function">showResponse</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                   e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">&#125;</span>           <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里并没有做太多的改动，只是添加了一个sendRequestWithOkHttp()方法，并在Send Request按钮的点击事件里去调用这个方法。在这个方法中同样还是先开启了一个子线程，然后在子线程里使用OkHttp发出一条HTTP请求，请求的目标地址还是百度的首页，OkHttp的用法也正如前面所介绍的一样。最后仍然还是调用了showResponse()方法来将服务器返回的数据显示到界面上。重新运行一下程序,点击SendRequest按钮后，测试结果OK，由此证明，使用OkHttp来发送HTTP请求的功能也已经成功实现了。</p><h2 id="3、解析XML格式数据"><a href="#3、解析XML格式数据" class="headerlink" title="3、解析XML格式数据"></a>3、解析XML格式数据</h2><p>通常情况下，每个需要访问网络的应用程序都会有一个自己的服务器，我们可以向服务器提交数据，也可以从服务器上获取数据。不过这个时候就出现了一个问题，这些数据到底要以什么样的格式在网络上传输呢？随便传递一段文本肯定是不行的，因为另一方根本就不会知道这段文本的用途是什么。因此，一般我们都会在网络上传输一些格式化后的数据，这种数据会有一定的结构规格和语义，当另一方收到数据消息之后就可以按照相同的结构规格进行解析，从而取出他想要的那部分内容。</p><p>在网络上传输数据时最常用的格式有两种：XML和JSON，下面我们就来一个一个地进行学习，本节首先学习一下如何解析XML格式的数据。在开始之前我们还需要先解决一个问题，就是从哪儿才能获取一段XML格式的数据呢？这里我们学习搭建一个最简单的Web服务器，在这个服务器上提供一段XML文本，然后我们在程序里去访问这个服务器，再对得到的XML文本进行解析。</p><p>搭建Web服务器其实非常简单，有很多的服务器类型可供选择，这里我准备使用Apache服务器。mac由于自带Apache服务器，直接通过命令就能打开</p><pre class="line-numbers language-none"><code class="language-none">sudo apachectl start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305041033770.png"></p><p>接下来创建一个get_data.xml并且移动到接下来进入到</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>apps</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>app</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Google Maps<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>app</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>app</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Chrome<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>app</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>app</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Google Play<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>app</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>apps</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">sudo mv &#x2F;Users&#x2F;whitebird&#x2F;get_data.xml &#x2F;Library&#x2F;WebServer&#x2F;Documents&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这时在浏览器中访问localhost&#x2F;get_data.xml这个网址，就应该出现如图：</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305041105680.png"></p><p>准备工作到此结束，接下来就让我们在Android程序里去获取并解析这段XML数据吧。</p><h3 id="3-1、Pull解析方式"><a href="#3-1、Pull解析方式" class="headerlink" title="3.1、Pull解析方式"></a>3.1、Pull解析方式</h3><p>解析XML格式的数据其实也有挺多种方式的，本节中我们学习比较常用的两种，Pull解析和SAX解析。那么简单起见，这里仍然是在NetworkTest项目的基础上继续开发，这样我们就可以重用之前网络通信部分的代码，从而把工作的重心放在XML数据解析上。既然XML格式的数据已经提供好了，现在要做的就是从中解析出我们想要得到的那部分内容。修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">parseXMLWithPull</span><span class="token punctuation">(</span><span class="token class-name">String</span> xmlData<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>           <span class="token comment">//通过Xml解析工厂获取实例</span>           <span class="token class-name">XmlPullParserFactory</span> xmlPullParserFactory<span class="token operator">=</span><span class="token class-name">XmlPullParserFactory</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">XmlPullParser</span> xmlPullParser<span class="token operator">=</span>xmlPullParserFactory<span class="token punctuation">.</span><span class="token function">newPullParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">//为解析期提供xml流</span>           xmlPullParser<span class="token punctuation">.</span><span class="token function">setInput</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringReader</span><span class="token punctuation">(</span>xmlData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">//获取事件的类型</span>           <span class="token keyword">int</span> eventType<span class="token operator">=</span>xmlPullParser<span class="token punctuation">.</span><span class="token function">getEventType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">String</span> id<span class="token operator">=</span><span class="token string">""</span> <span class="token punctuation">;</span>           <span class="token class-name">String</span> name<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span>           <span class="token class-name">String</span> version<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span>           <span class="token keyword">while</span> <span class="token punctuation">(</span>eventType<span class="token operator">!=</span><span class="token class-name">XmlPullParser</span><span class="token punctuation">.</span><span class="token constant">END_DOCUMENT</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>               <span class="token class-name">String</span> nodeName<span class="token operator">=</span>xmlPullParser<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token comment">//用switch对不同事件进行处理</span>               <span class="token keyword">switch</span> <span class="token punctuation">(</span>eventType<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                   <span class="token comment">//开始读标签，通过解析器的getName方法获得标签名进行比较</span>                   <span class="token keyword">case</span> <span class="token class-name">XmlPullParser</span><span class="token punctuation">.</span><span class="token constant">START_TAG</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>nodeName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                           <span class="token comment">//获取节点内容</span>                           id<span class="token operator">=</span>xmlPullParser<span class="token punctuation">.</span><span class="token function">nextText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                       <span class="token punctuation">&#125;</span><span class="token keyword">else</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>nodeName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                           name<span class="token operator">=</span>xmlPullParser<span class="token punctuation">.</span><span class="token function">nextText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                       <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"version"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>nodeName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                           version<span class="token operator">=</span>xmlPullParser<span class="token punctuation">.</span><span class="token function">nextText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                       <span class="token punctuation">&#125;</span>                       <span class="token keyword">break</span><span class="token punctuation">;</span>                   <span class="token punctuation">&#125;</span>                   <span class="token comment">//标签结束，进行打印</span>                   <span class="token keyword">case</span> <span class="token class-name">XmlPullParser</span><span class="token punctuation">.</span><span class="token constant">END_TAG</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"app"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>nodeName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                           <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span><span class="token punctuation">,</span><span class="token string">"id is "</span><span class="token operator">+</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>                           <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span><span class="token punctuation">,</span><span class="token string">"name is "</span><span class="token operator">+</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>                           <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span><span class="token punctuation">,</span><span class="token string">"version is "</span><span class="token operator">+</span>version<span class="token punctuation">)</span><span class="token punctuation">;</span>                       <span class="token punctuation">&#125;</span>                       <span class="token keyword">break</span><span class="token punctuation">;</span>                   <span class="token punctuation">&#125;</span>                   <span class="token keyword">default</span><span class="token operator">:</span>                       <span class="token keyword">break</span><span class="token punctuation">;</span>               <span class="token punctuation">&#125;</span>               <span class="token comment">//解析下一个元素</span>               eventType<span class="token operator">=</span>xmlPullParser<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">sendRequestWithOkHttp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token annotation punctuation">@Override</span>           <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                   <span class="token class-name">OkHttpClient</span> okHttpClient<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">OkHttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token class-name">Request</span> request<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Request<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                           <span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token string">"http://10.0.2.2/get_data.xml"</span><span class="token punctuation">)</span>                           <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token class-name">Response</span> response<span class="token operator">=</span>okHttpClient<span class="token punctuation">.</span><span class="token function">newCall</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token class-name">String</span> responseData<span class="token operator">=</span>response<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token function">parseXMLWithPull</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                   e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">&#125;</span>           <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305051421935.png"></p><p>在得到了服务器返回的数据后，我们并不再直接将其展示，而是调用了parseXMLWithPull()方法来解析服务器返回的数据。parseXMLWithPull()方法中的代码，首先要获取到一个XmlPullParserFactory的实例，并借助这个实例得到XmlPullParser对象，然后调用XmlPullParser的setInput()方法将服务器返回的XML数据设置进去就可以开始解析了。解析的过程也非常简单，通过getEventType()可以得到当前的解析事件，然后在一个while循环中不断地进行解析，如果当前的解析事件不等于XmlPullParser.END_DOCUMENT，说明解析工作还没完成，调用next()方法后可以获取下一个解析事件。在while循环中，我们通过getName()方法得到当前节点的名字，如果发现节点名等于id、name或version，就调用nextText()方法来获取节点内具体的内容，每当解析完一个app节点后就将获取到的内容打印出来。</p><h3 id="3-2、SAX解析方式"><a href="#3-2、SAX解析方式" class="headerlink" title="3.2、SAX解析方式"></a>3.2、SAX解析方式</h3><p>Pull解析方式虽然非常好用，但它并不是我们唯一的选择。SAX解析也是一种特别常用的XML解析方式，虽然它的用法比Pull解析要复杂一些，但在语义方面会更加清楚。通常情况下我们都会新建一个类继承自DefaultHandler，并重写父类的5个方法，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>networktest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>sax<span class="token punctuation">.</span></span><span class="token class-name">Attributes</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>sax<span class="token punctuation">.</span></span><span class="token class-name">SAXException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>sax<span class="token punctuation">.</span>helpers<span class="token punctuation">.</span></span><span class="token class-name">DefaultHandler</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ContentHandler</span> <span class="token keyword">extends</span> <span class="token class-name">DefaultHandler</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SAXException</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">startDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startElement</span><span class="token punctuation">(</span><span class="token class-name">String</span> uri<span class="token punctuation">,</span> <span class="token class-name">String</span> localName<span class="token punctuation">,</span> <span class="token class-name">String</span> qName<span class="token punctuation">,</span> <span class="token class-name">Attributes</span> attributes<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SAXException</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">startElement</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> localName<span class="token punctuation">,</span> qName<span class="token punctuation">,</span> attributes<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">characters</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ch<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> length<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SAXException</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">characters</span><span class="token punctuation">(</span>ch<span class="token punctuation">,</span> start<span class="token punctuation">,</span> length<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">endElement</span><span class="token punctuation">(</span><span class="token class-name">String</span> uri<span class="token punctuation">,</span> <span class="token class-name">String</span> localName<span class="token punctuation">,</span> <span class="token class-name">String</span> qName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SAXException</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">endElement</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> localName<span class="token punctuation">,</span> qName<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">endDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SAXException</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">endDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>startDocument()方法会在开始XML解析的时候调用；</p><p>startElement()方法会在开始解析某个节点的时候调用；</p><p>characters()方法会在获取节点中内容的时候调用；</p><p>endElement()方法会在完成解析某个节点的时候调用；</p><p>endDocument()方法会在完成整个XML解析的时候调用。</p><p>其中，startElement()、characters()和endElement()这3个方法是有参数的，从XML中解析出的数据就会以参数的形式传入到这些方法中。需要注意的是，在获取节点中的内容时，characters()方法可能会被调用多次，一些换行符也被当作内容解析出来，我们需要针对这种情况在代码中做好控制。那么下面就让我们尝试用SAX解析的方式来实现和上一小节中同样的功能吧。新建一个ContentHandler类继承自DefaultHandler，并重写父类的5个方法，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>networktest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Log</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>sax<span class="token punctuation">.</span></span><span class="token class-name">Attributes</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>sax<span class="token punctuation">.</span></span><span class="token class-name">SAXException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>sax<span class="token punctuation">.</span>helpers<span class="token punctuation">.</span></span><span class="token class-name">DefaultHandler</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ContentHandler</span> <span class="token keyword">extends</span> <span class="token class-name">DefaultHandler</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> nodeName<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">StringBuilder</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">StringBuilder</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">StringBuilder</span> version<span class="token punctuation">;</span>        <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SAXException</span> <span class="token punctuation">&#123;</span>        id<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        name <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        version<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startElement</span><span class="token punctuation">(</span><span class="token class-name">String</span> uri<span class="token punctuation">,</span> <span class="token class-name">String</span> localName<span class="token punctuation">,</span> <span class="token class-name">String</span> qName<span class="token punctuation">,</span> <span class="token class-name">Attributes</span> attributes<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SAXException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//记录当前节点名字</span>        nodeName<span class="token operator">=</span>localName<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">characters</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ch<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> length<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SAXException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//根据当前的节点名判断内容添加到哪一个StringBUilder对象中</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>nodeName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            id<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>ch<span class="token punctuation">,</span>start<span class="token punctuation">,</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>nodeName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            name<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>ch<span class="token punctuation">,</span>start<span class="token punctuation">,</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"version"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>nodeName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            version<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>ch<span class="token punctuation">,</span>start<span class="token punctuation">,</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">endElement</span><span class="token punctuation">(</span><span class="token class-name">String</span> uri<span class="token punctuation">,</span> <span class="token class-name">String</span> localName<span class="token punctuation">,</span> <span class="token class-name">String</span> qName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SAXException</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"app"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>localName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>          <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"ContentHandler"</span><span class="token punctuation">,</span><span class="token string">"id is + "</span><span class="token operator">+</span>id<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"ContentHandler"</span><span class="token punctuation">,</span><span class="token string">"name is + "</span><span class="token operator">+</span>name<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"ContentHandler"</span><span class="token punctuation">,</span><span class="token string">"version is + "</span><span class="token operator">+</span>version<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">//最后将StringBuilder清空</span>          id<span class="token punctuation">.</span><span class="token function">setLength</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          name<span class="token punctuation">.</span><span class="token function">setLength</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          version<span class="token punctuation">.</span><span class="token function">setLength</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">endDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SAXException</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">endDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，我们首先给id、name和version节点分别定义了一个StringBuilder对象，并在startDocument()方法里对它们进行了初始化。</p><p>每当开始解析某个节点的时候，startElement()方法就会得到调用，其中localName参数记录着当前节点的名字，这里我们把它记录下来。</p><p>接着在解析节点中具体内容的时候就会调用characters()方法，我们会根据当前的节点名进行判断，将解析出的内容添加到哪一个StringBuilder对象中。</p><p>最后在endElement()方法中进行判断，如果app节点已经解析完成，就打印出id、name和version的内容。</p><p>需要注意的是，目前id、name和version中都可能是包括回车或换行符的，因此在打印之前我们还需要调用一下trim()方法，并且打印完成后还要将StringBuilder的内容清空掉，不然的话会影响下一次内容的读取。</p><p>接下来的工作就非常简单了，修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token class-name">ParseXmlWithSAX</span><span class="token punctuation">(</span><span class="token class-name">String</span> xmldata<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>          <span class="token class-name">SAXParserFactory</span> saxParserFactory<span class="token operator">=</span><span class="token class-name">SAXParserFactory</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token class-name">XMLReader</span> xmlReader<span class="token operator">=</span>saxParserFactory<span class="token punctuation">.</span><span class="token function">newSAXParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getXMLReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token class-name">ContentHandler</span> handler<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ContentHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">//将ContentHandler的实例设置到xmlReader中</span>          xmlReader<span class="token punctuation">.</span><span class="token function">setContentHandler</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">//开始解析</span>          xmlReader<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputSource</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringReader</span><span class="token punctuation">(</span>xmldata<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>          e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>        <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">sendRequestWithOkHttp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token annotation punctuation">@Override</span>          <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                  <span class="token class-name">OkHttpClient</span> okHttpClient<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">OkHttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token class-name">Request</span> request<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Request<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                          <span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token string">"http://10.0.2.2/get_data.xml"</span><span class="token punctuation">)</span>                          <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token class-name">Response</span> response<span class="token operator">=</span>okHttpClient<span class="token punctuation">.</span><span class="token function">newCall</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token class-name">String</span> responseData<span class="token operator">=</span>response<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token class-name">ParseXmlWithSAX</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                  e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305051957668.png"></p><p>在得到了服务器返回的数据后，我们这次去调用parseXMLWithSAX()方法来解析XML数据。parseXMLWithSAX()方法中先是创建了一个SAXParserFactory的对象，然后再获取到XMLReader对象，接着将我们编写的ContentHandler的实例设置到XMLReader中，最后调用parse()方法开始执行解析就好了。</p><h2 id="4、解析JSON格式数据"><a href="#4、解析JSON格式数据" class="headerlink" title="4、解析JSON格式数据"></a>4、解析JSON格式数据</h2><p>如何解析JSON格式的数据？比起XML, JSON的主要优势在于它的体积更小，在网络上传输的时候可以更省流量。但缺点在于，它的语义性较差，看起来不如XML直观。</p><p>在开始之前，还需要在 &#x2F;Library&#x2F;WebServer&#x2F;Documents&#x2F;目录中新建一个get_data.json的文件，然后编辑这个文件，并加入如下JSON格式的内容：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"5"</span><span class="token punctuation">,</span><span class="token property">"version"</span><span class="token operator">:</span><span class="token string">"5.5"</span><span class="token punctuation">,</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"Clash of Clans"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"6"</span><span class="token punctuation">,</span><span class="token property">"version"</span><span class="token operator">:</span><span class="token string">"7.0"</span><span class="token punctuation">,</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"Boom Beach"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token property">"id"</span><span class="token operator">:</span><span class="token string">"7"</span><span class="token punctuation">,</span><span class="token property">"version"</span><span class="token operator">:</span><span class="token string">"3.5"</span><span class="token punctuation">,</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"Clash Royale"</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这时在浏览器中访问<a href="http://127.0.0.1/get_data.json%E8%BF%99%E4%B8%AA%E7%BD%91%E5%9D%80%EF%BC%8C%E5%B0%B1%E5%BA%94%E8%AF%A5%E5%87%BA%E7%8E%B0%E5%A6%82%E5%9B%BE%EF%BC%9A">http://127.0.0.1/get_data.json这个网址，就应该出现如图：</a></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305052011130.png"></p><p>把JSON格式的数据也准备好了，下面就开始学习如何在Android程序中解析这些数据吧。</p><h3 id="4-1、使用JSONObject"><a href="#4-1、使用JSONObject" class="headerlink" title="4.1、使用JSONObject"></a>4.1、使用JSONObject</h3><p>类似地，解析JSON数据也有很多种方法，可以使用官方提供的JSONObject，也可以使用谷歌的开源库GSON。另外，一些第三方的开源库如Jackson、FastJSON等也非常不错。本节中我们就来学习一下前两种解析方式的用法。修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">parseJSONWithJSONObject</span><span class="token punctuation">(</span><span class="token class-name">String</span> jsonData<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>           <span class="token class-name">JSONArray</span> jsonArray<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JSONArray</span><span class="token punctuation">(</span>jsonData<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> jsonArray<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               <span class="token class-name">JSONObject</span> jsonObject<span class="token operator">=</span>jsonArray<span class="token punctuation">.</span><span class="token function">getJSONObject</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token class-name">String</span> id <span class="token operator">=</span>jsonObject<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token class-name">String</span> name <span class="token operator">=</span>jsonObject<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token class-name">String</span> version<span class="token operator">=</span>jsonObject<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"version"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span> <span class="token punctuation">,</span><span class="token string">"id is "</span><span class="token operator">+</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span> <span class="token punctuation">,</span><span class="token string">"name is "</span><span class="token operator">+</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span> <span class="token punctuation">,</span><span class="token string">"version is "</span><span class="token operator">+</span>version<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">sendRequestWithOkHttp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token annotation punctuation">@Override</span>           <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                   <span class="token class-name">OkHttpClient</span> okHttpClient<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">OkHttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token class-name">Request</span> request<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Request<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                           <span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token string">"http://10.0.2.2/get_data.json"</span><span class="token punctuation">)</span>                           <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token class-name">Response</span> response<span class="token operator">=</span>okHttpClient<span class="token punctuation">.</span><span class="token function">newCall</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token class-name">String</span> responseData<span class="token operator">=</span>response<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token function">parseJSONWithJSONObject</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                   e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">&#125;</span>           <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305052020342.png"></p><h3 id="4-2、使用GSON"><a href="#4-2、使用GSON" class="headerlink" title="4.2、使用GSON"></a>4.2、使用GSON</h3><p>如果你认为使用JSONObject来解析JSON数据已经非常简单了，那你就太容易满足了。谷歌提供的GSON开源库可以让解析JSON数据的工作简单到让你不敢想象的地步，那我们肯定是不能错过这个学习机会的。</p><p>不过GSON并没有被添加到Android官方的API中，因此如果想要使用这个功能的话，就必须要在项目中添加GSON库的依赖。编辑app&#x2F;build.gradle文件，在dependencies闭包中添加如下内容：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">implementation 'com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>code<span class="token punctuation">.</span>gson<span class="token operator">:</span>gson<span class="token operator">:</span><span class="token number">2.9</span><span class="token number">.0</span>'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>那么，GSON库究竟是神奇在哪里呢？其实它主要就是可以将一段JSON格式的字符串自动映射成一个对象，从而不需要我们再手动去编写代码进行解析了。比如说一段JSON格式的数据如下所示：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"Tom"</span><span class="token punctuation">,</span><span class="token property">"age"</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>那我们就可以定义一个Person类，并加入name和age这两个字段，然后只需简单地调用如下代码就可以将JSON数据自动解析成一个Person对象了：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Gson</span> gson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Person</span> person <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>jsonData<span class="token punctuation">,</span><span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果需要解析的是一段JSON数组会稍微麻烦一点，我们需要借助TypeToken将期望解析成的数据类型传入到fromJson()方法中，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">></span></span> appList <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>gsonData<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">TypeToken</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">></span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>基本的用法就是这样，下面就让我们来真正地尝试一下吧。首先新增一个App类，并加入id、name和version这3个字段，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>networktest</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> version<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> id<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> version<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setVersion</span><span class="token punctuation">(</span><span class="token class-name">String</span> version<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>version <span class="token operator">=</span> version<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后修改MainActivity中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">parseJSONWithGSON</span><span class="token punctuation">(</span><span class="token class-name">String</span> jsonData<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Gson</span> gson<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">App</span><span class="token punctuation">></span></span> appList <span class="token operator">=</span>gson<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>jsonData<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">TypeToken</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">App</span><span class="token punctuation">></span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">App</span> app<span class="token operator">:</span>appList             <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span><span class="token punctuation">,</span><span class="token string">"GSON id is "</span><span class="token operator">+</span>app<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span><span class="token punctuation">,</span><span class="token string">"GSON name is "</span><span class="token operator">+</span>app<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span><span class="token punctuation">,</span><span class="token string">"GSON version is "</span><span class="token operator">+</span>app<span class="token punctuation">.</span><span class="token function">getVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">sendRequestWithOkHttp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">OkHttpClient</span> okHttpClient<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">OkHttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">Request</span> request<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Request<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token string">"http://10.0.2.2/get_data.json"</span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">Response</span> response<span class="token operator">=</span>okHttpClient<span class="token punctuation">.</span><span class="token function">newCall</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">String</span> responseData<span class="token operator">=</span>response<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">parseJSONWithGSON</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/202305060041168.png"></p><h2 id="5、网络编程的最佳实战"><a href="#5、网络编程的最佳实战" class="headerlink" title="5、网络编程的最佳实战"></a>5、网络编程的最佳实战</h2><p>也许你还没有发现，之前我们的写法其实是很有问题的。因为一个应用程序很可能会在许多地方都使用到网络功能，而发送HTTP请求的代码基本都是相同的，如果我们每次都去编写一遍发送HTTP请求的代码，这显然是非常差劲的做法。没错，通常情况下我们都应该将这些通用的网络操作提取到一个公共的类里，并提供一个静态方法，当想要发起网络请求的时候，只需简单地调用一下这个方法即可。比如使用如下的写法：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>networktest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">BufferedReader</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStreamReader</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">HttpURLConnection</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">MalformedURLException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URL</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HttpUtil</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">sendHttpRequest</span><span class="token punctuation">(</span><span class="token class-name">String</span> address<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HttpURLConnection</span> httpURLConnection <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">URL</span> url <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>            httpURLConnection<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">HttpURLConnection</span><span class="token punctuation">)</span> url<span class="token punctuation">.</span><span class="token function">openConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            httpURLConnection<span class="token punctuation">.</span><span class="token function">setConnectTimeout</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            httpURLConnection<span class="token punctuation">.</span><span class="token function">setRequestMethod</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            httpURLConnection<span class="token punctuation">.</span><span class="token function">setReadTimeout</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            httpURLConnection<span class="token punctuation">.</span><span class="token function">setDoInput</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            httpURLConnection<span class="token punctuation">.</span><span class="token function">setDoOutput</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">InputStream</span> in<span class="token operator">=</span>httpURLConnection<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">BufferedReader</span> bufferedReader<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">StringBuilder</span> response<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> line<span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>line <span class="token operator">=</span> bufferedReader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                response<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">return</span> response<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>httpURLConnection<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                httpURLConnection<span class="token punctuation">.</span><span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以后每当需要发起一条HTTP请求的时候就可以这样写：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> address <span class="token operator">=</span> <span class="token string">"http://www.baidu.com"</span><span class="token class-name">String</span> response <span class="token operator">=</span> <span class="token class-name">HttpUtil</span><span class="token punctuation">.</span><span class="token function">sendHttpRequest</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在获取到服务器响应的数据后，我们就可以对它进行解析和处理了。但是需要注意，网络请求通常都是属于耗时操作，而sendHttpRequest()方法的内部并没有开启线程，这样就有可能导致在调用sendHttpRequest()方法的时候使得主线程被阻塞住。你可能会说，很简单嘛，在sendHttpRequest()方法内部开启一个线程不就解决这个问题了吗？其实没有你想象中的那么容易，因为如果我们在sendHttpRequest()方法中开启了一个线程来发起HTTP请求，那么服务器响应的数据是无法进行返回的，所有的耗时逻辑都是在子线程里进行的，sendHttpRequest()方法会在服务器还没来得及响应的时候就执行结束了，当然也就无法返回响应的数据了。那么遇到这种情况时应该怎么办呢？其实解决方法并不难，只需要使用Java的回调机制就可以了，下面就让我们来学习一下回调机制到底是如何使用的。</p><p>首先需要定义一个接口，比如将它命名成HttpCallbackListener，代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>networktest</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">HttpCallbackListener</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">void</span> <span class="token function">onFinish</span><span class="token punctuation">(</span><span class="token class-name">String</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，我们在接口中定义了两个方法，onFinish()方法表示当服务器成功响应我们请求的时候调用，onError()表示当进行网络操作出现错误的时候调用。这两个方法都带有参数，onFinish()方法中的参数代表着服务器返回的数据，而onError()方法中的参数记录着错误的详细信息。接着修改HttpUtil中的代码，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>networktest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">BufferedReader</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStreamReader</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">HttpURLConnection</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">MalformedURLException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URL</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HttpUtil</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">sendHttpRequest</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> address<span class="token punctuation">,</span><span class="token keyword">final</span> <span class="token class-name">HttpCallbackListener</span> listener<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">HttpURLConnection</span> httpURLConnection <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">URL</span> url <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>                    httpURLConnection<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">HttpURLConnection</span><span class="token punctuation">)</span> url<span class="token punctuation">.</span><span class="token function">openConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    httpURLConnection<span class="token punctuation">.</span><span class="token function">setConnectTimeout</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    httpURLConnection<span class="token punctuation">.</span><span class="token function">setRequestMethod</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    httpURLConnection<span class="token punctuation">.</span><span class="token function">setReadTimeout</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    httpURLConnection<span class="token punctuation">.</span><span class="token function">setDoInput</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    httpURLConnection<span class="token punctuation">.</span><span class="token function">setDoOutput</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">InputStream</span> in<span class="token operator">=</span>httpURLConnection<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">BufferedReader</span> bufferedReader<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">StringBuilder</span> response<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">String</span> line<span class="token punctuation">;</span>                    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>line <span class="token operator">=</span> bufferedReader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        response<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>listener<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        listener<span class="token punctuation">.</span><span class="token function">onFinish</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                   <span class="token keyword">if</span> <span class="token punctuation">(</span>listener<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                       listener<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>httpURLConnection<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        httpURLConnection<span class="token punctuation">.</span><span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>首先给sendHttpRequest()方法添加了一个HttpCallbackListener参数，并在方法的内部开启了一个子线程，然后在子线程里去执行具体的网络操作。注意，子线程中是无法通过return语句来返回数据的，因此这里我们将服务器响应的数据传入了HttpCallbackListener的onFinish()方法中，如果出现了异常就将异常原因传入到onError()方法中。</p><p>现在sendHttpRequest()方法接收两个参数了，因此我们在调用它的时候还需要将HttpCallbackListener的实例传入，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">HttpUtil</span><span class="token punctuation">.</span><span class="token function">sendHttpRequest</span><span class="token punctuation">(</span>address<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">HttpCallbackListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onFinish</span><span class="token punctuation">(</span><span class="token class-name">String</span> response<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//在这里根据返回内容执行具体的逻辑</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//在这里对异常情况进行处理</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样的话，当服务器成功响应的时候，我们就可以在onFinish()方法里对响应数据进行处理了。类似地，如果出现了异常，就可以在onError()方法里对异常情况进行处理。如此一来，我们就巧妙地利用回调机制将响应数据成功返回给调用方了。</p><p>不过你会发现，上述使用HttpURLConnection的写法总体来说还是比较复杂的，那么使用OkHttp会变得简单吗？答案是肯定的，而且要简单得多，下面我们来具体看一下。在HttpUtil中加入一个sendOkHttpRequest()方法，如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span>  <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">sendOkHttpRequest</span><span class="token punctuation">(</span><span class="token class-name">String</span> addrss<span class="token punctuation">,</span><span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span></span>Callback</span> callback<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">OkHttpClient</span> client<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">OkHttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Request</span> request<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Request<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span>addrss<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    client<span class="token punctuation">.</span><span class="token function">newCall</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，sendOkHttpRequest()方法中有一个okhttp3.Callback参数，这个是OkHttp库中自带的一个回调接口，类似于我们刚才自己编写的HttpCallbackListener。然后在client.newCall()之后没有像之前那样一直调用execute()方法，而是调用了一个enqueue()方法，并把okhttp3.Callback参数传入。OkHttp在enqueue()方法的内部已经帮我们开好子线程了，然后会在子线程中去执行HTTP请求，并将最终的请求结果回调到okhttp3.Callback当中。那么我们在调用sendOkHttpRequest()方法的时候就可以这样写：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">HttpUtil</span><span class="token punctuation">.</span><span class="token function">sendOkHttpRequest</span><span class="token punctuation">(</span><span class="token string">"http://www.baidu.com"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span></span>Callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResponse</span><span class="token punctuation">(</span><span class="token class-name">Call</span> call<span class="token punctuation">,</span><span class="token class-name">Response</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//得到服务器返回的具体内容</span>        <span class="token class-name">String</span> responseData <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onFailure</span><span class="token punctuation">(</span><span class="token class-name">Call</span> call<span class="token punctuation">,</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//在这里对异常情况进行处理</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由此可以看出，OkHttp的接口设计得确实非常人性化，它将一些常用的功能进行了很好的封装，使得我们只需编写少量的代码就能完成较为复杂的网络操作。当然这并不是OkHttp的全部，后面我们还会继续学习它的其他相关知识。</p><p>另外需要注意的是，不管是使用HttpURLConnection还是OkHttp，最终的回调接口都还是在子线程中运行的，因此我们不可以在这里执行任何的UI操作，除非借助runOnUiThread()方法来进行线程转换。至于具体的原因，我们很快就会在下一章中学习到了。</p>]]></content>
      
      
      <categories>
          
          <category> Android开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022年江西省“赣育杯”网络安全大赛初赛 Re WriteUp</title>
      <link href="//post/2022%E5%B9%B4%E6%B1%9F%E8%A5%BF%E7%9C%81%E2%80%9C%E8%B5%A3%E8%82%B2%E6%9D%AF%E2%80%9D%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B.html"/>
      <url>//post/2022%E5%B9%B4%E6%B1%9F%E8%A5%BF%E7%9C%81%E2%80%9C%E8%B5%A3%E8%82%B2%E6%9D%AF%E2%80%9D%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B.html</url>
      
        <content type="html"><![CDATA[<h1 id="easyre-exe"><a href="#easyre-exe" class="headerlink" title="easyre.exe"></a>easyre.exe</h1><p>这题是一个傀儡进程题，先创建了easyre.exe进程，这个进程又创建了一个fake.exe进程，并且卸载了原fake.exe的内存，把主要逻辑又塞入了fake.exe的内存空间里。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221017153226.png"></p><p>我们可以查看ProcessInformation结构体的信息，里面保存了fake.exe的PID，ResumeThread就证实了我们需要分析fake.exe程序，这一步之后就会提示我们要输入flag了。所以我们直接 attach 填充好的 fake.exe 进程即可得到最终的逻辑。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221017163929.png"></p><p>记住要在ResumeThread之前附加，我们一开始附加到fake上，并找不到程序主函数逻辑，而是在ntdll里面，我这里的做法是，先用IDA附加之前用X32dbg附加了一下，查找字符串从而找到函数偏移。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221017164312.png"></p><p>偏移是0x402060，所以我们直接在IDA里面JMP过去</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221017164442.png"></p><p>然后就是C转为代码，P声明函数，下断点调试了</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221017170142.png"></p><p>这里有两个花指令，直接弄破，然后F7单步跟就会进入加密函数了</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221017170241.png"></p><p>离的还是比较近的，可以F5看伪代码</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221017170503.png"></p><p>sub_401F00是加密函数，很明显的XXTEA特征</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221017184612.png"></p><p>我们提取一下key<img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221017184751.png"></p><p>现在我们找一下密文</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221017184928.png"></p><p>这是strcmp函数，进去分析一下</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221017184950.png"></p><p>地址405010的地址存放着密文</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221017184919.png"></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">unsigned</span> <span class="token keyword">char</span> ida_chars<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token punctuation">&#123;</span>  <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0xDD</span><span class="token punctuation">,</span> <span class="token number">0xC9</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x65</span><span class="token punctuation">,</span> <span class="token number">0x16</span><span class="token punctuation">,</span> <span class="token number">0x57</span><span class="token punctuation">,</span> <span class="token number">0x85</span><span class="token punctuation">,</span> <span class="token number">0xE8</span><span class="token punctuation">,</span> <span class="token number">0x5D</span><span class="token punctuation">,</span>   <span class="token number">0x1D</span><span class="token punctuation">,</span> <span class="token number">0x27</span><span class="token punctuation">,</span> <span class="token number">0xA5</span><span class="token punctuation">,</span> <span class="token number">0x7B</span><span class="token punctuation">,</span> <span class="token number">0xCB</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x62</span><span class="token punctuation">,</span> <span class="token number">0x96</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0xAC</span><span class="token punctuation">,</span>   <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0xC4</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0x1B</span><span class="token punctuation">,</span> <span class="token number">0xB3</span><span class="token punctuation">,</span> <span class="token number">0xE6</span><span class="token punctuation">,</span> <span class="token number">0x05</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">,</span> <span class="token number">0x56</span><span class="token punctuation">,</span>   <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0xB2</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在我们套一个xxtea解密脚本,发现解不开，继续调试，发现最后居然还有个xor操作</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221017192108.png"></p><p>off_4040EC是一个rand函数，随机数种子是13394</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdint></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdlib></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">DELTA</span> <span class="token expression"><span class="token number">0x9e3779b9</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MX</span> <span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>z <span class="token operator">>></span> <span class="token number">5</span> <span class="token operator">^</span> y <span class="token operator">&lt;&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>y <span class="token operator">>></span> <span class="token number">3</span> <span class="token operator">^</span> z <span class="token operator">&lt;&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sum <span class="token operator">^</span> y<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token punctuation">(</span>p <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">^</span> e<span class="token punctuation">]</span> <span class="token operator">^</span> z<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span>using namespace std<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">xxtea</span><span class="token punctuation">(</span><span class="token class-name">uint32_t</span><span class="token operator">*</span> v<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token class-name">uint32_t</span> <span class="token keyword">const</span> key<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">uint32_t</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span> sum<span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> p<span class="token punctuation">,</span> rounds<span class="token punctuation">,</span> e<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span>            <span class="token comment">/* Coding Part */</span>    <span class="token punctuation">&#123;</span>        rounds <span class="token operator">=</span> <span class="token number">6</span> <span class="token operator">+</span> <span class="token number">52</span> <span class="token operator">/</span> n<span class="token punctuation">;</span>        sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        z <span class="token operator">=</span> v<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>            sum <span class="token operator">+=</span> DELTA<span class="token punctuation">;</span>            e <span class="token operator">=</span> <span class="token punctuation">(</span>sum <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>p <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> p <span class="token operator">&lt;</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> p<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                y <span class="token operator">=</span> v<span class="token punctuation">[</span>p <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                z <span class="token operator">=</span> v<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">+=</span> MX<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            y <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            z <span class="token operator">=</span> v<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+=</span> MX<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">--</span>rounds<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>      <span class="token comment">/* Decoding Part */</span>    <span class="token punctuation">&#123;</span>        n <span class="token operator">=</span> <span class="token operator">-</span>n<span class="token punctuation">;</span>        rounds <span class="token operator">=</span> <span class="token number">6</span> <span class="token operator">+</span> <span class="token number">52</span> <span class="token operator">/</span> n<span class="token punctuation">;</span>        sum <span class="token operator">=</span> rounds <span class="token operator">*</span> DELTA<span class="token punctuation">;</span>        y <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>            e <span class="token operator">=</span> <span class="token punctuation">(</span>sum <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>p <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> p <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span> p<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                z <span class="token operator">=</span> v<span class="token punctuation">[</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                y <span class="token operator">=</span> v<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">-=</span> MX<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            z <span class="token operator">=</span> v<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            y <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-=</span> MX<span class="token punctuation">;</span>            sum <span class="token operator">-=</span> DELTA<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">--</span>rounds<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">srand</span><span class="token punctuation">(</span><span class="token number">13394</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> keysteam<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">size_t</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        keysteam<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">0x22C9DD51</span><span class="token punctuation">,</span><span class="token number">0x85571665</span><span class="token punctuation">,</span><span class="token number">0x271D5DE8</span><span class="token punctuation">,</span><span class="token number">0x92CB7BA5</span><span class="token punctuation">,</span><span class="token number">0x0AC239662</span><span class="token punctuation">,</span><span class="token number">0x1B86C455</span><span class="token punctuation">,</span><span class="token number">0x0C105E6B3</span><span class="token punctuation">,</span><span class="token number">0x0B2045612</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> key<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">0x54</span><span class="token punctuation">,</span><span class="token number">0x53</span><span class="token punctuation">,</span><span class="token number">0x4e</span><span class="token punctuation">,</span><span class="token number">0x42</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">size_t</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        v<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^=</span> keysteam<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">xxtea</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%c%c%c%c"</span><span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token expression">Sangfor<span class="token punctuation">&#123;</span><span class="token number">525</span>a39d17ec49fd10294f99<span class="token punctuation">&#125;</span></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="babyre-exe"><a href="#babyre-exe" class="headerlink" title="babyre.exe"></a>babyre.exe</h1><p>打开这题发现是一个自写的可执行文件，shift+f12搜索字符串，发现了一些提示</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221017201846.png"></p><p>直接在这下访问断点，调试程序</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221017201936.png"></p><p>进入了系统dll，我们找ret位置跳出来</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221017202020.png"></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221017202057.png"></p><p>text节位置存放在我们要分析的代码，稍微恢复一下，我们全部U掉，然后按c强转成代码，往上面翻了翻，想找到函数开始位置，找到一大块cc位置</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221017202226.png"></p><p>接下来就往下无脑c和p<img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221017202909.png"></p><p>修复完的效果，原本的函数都是一块地址，需要我们c去修复</p><p>先分析一下sub_2D1920</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221017203324.png"></p><p>这里两层的代码类似，我怀疑是hook了IsDebuggerPresent，看一下sub_2D14D0，这个是我修复完的效果</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221017203402.png"></p><p>dword_2D514C这次不是函数了，我们分析一下sub_2D1430</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221017203504.png"></p><p>我用IDA的插件搜到了blowfish加密的特征，对比了下加密源码，发现这里就是blowfish，key就是Shell</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221017204215.png"></p><p>检测是否存在调试，但是由于被hook了，所以始终是1，也就是肯定会执行</p><p>sub_2D17A0是一个SM4，而且没有魔改过，Key为&#x3D;‘IgTheShy’</p><p>sub_2D1400就是一个strcmp，我们可以把密文提取出来</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">0xE8, 0xB2, 0xBE, 0xC7, 0x24, 0x2A, 0x8C, 0xB1, 0x2B, 0x7A, 0xB8, 0x36, 0x17, 0x78, 0x34, 0x91, 0x7E, 0x52, 0x45, 0x2A, 0x6A, 0xFD, 0xE9, 0xE4, 0x94, 0xCD, 0x84, 0x7A, 0x79, 0xD5, 0x54, 0x1E<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>贴一下脚本</p><p>blowfish.h</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">once</span></span><span class="token comment">/*使用BlowFish进行加解密*/</span><span class="token comment">//定义全局旧的pbox sbox 都是根据小数来的。</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">N</span>               <span class="token expression"><span class="token number">16</span></span></span><span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">unsigned</span> <span class="token keyword">long</span> ORIG_P<span class="token punctuation">[</span><span class="token number">16</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token number">0x243F6A88L</span><span class="token punctuation">,</span> <span class="token number">0x85A308D3L</span><span class="token punctuation">,</span> <span class="token number">0x13198A2EL</span><span class="token punctuation">,</span> <span class="token number">0x03707344L</span><span class="token punctuation">,</span>        <span class="token number">0xA4093822L</span><span class="token punctuation">,</span> <span class="token number">0x299F31D0L</span><span class="token punctuation">,</span> <span class="token number">0x082EFA98L</span><span class="token punctuation">,</span> <span class="token number">0xEC4E6C89L</span><span class="token punctuation">,</span>        <span class="token number">0x452821E6L</span><span class="token punctuation">,</span> <span class="token number">0x38D01377L</span><span class="token punctuation">,</span> <span class="token number">0xBE5466CFL</span><span class="token punctuation">,</span> <span class="token number">0x34E90C6CL</span><span class="token punctuation">,</span>        <span class="token number">0xC0AC29B7L</span><span class="token punctuation">,</span> <span class="token number">0xC97C50DDL</span><span class="token punctuation">,</span> <span class="token number">0x3F84D5B5L</span><span class="token punctuation">,</span> <span class="token number">0xB5470917L</span><span class="token punctuation">,</span>        <span class="token number">0x9216D5D9L</span><span class="token punctuation">,</span> <span class="token number">0x8979FB1BL</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">unsigned</span> <span class="token keyword">long</span> ORIG_S<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#123;</span>   <span class="token number">0xD1310BA6L</span><span class="token punctuation">,</span> <span class="token number">0x98DFB5ACL</span><span class="token punctuation">,</span> <span class="token number">0x2FFD72DBL</span><span class="token punctuation">,</span> <span class="token number">0xD01ADFB7L</span><span class="token punctuation">,</span>        <span class="token number">0xB8E1AFEDL</span><span class="token punctuation">,</span> <span class="token number">0x6A267E96L</span><span class="token punctuation">,</span> <span class="token number">0xBA7C9045L</span><span class="token punctuation">,</span> <span class="token number">0xF12C7F99L</span><span class="token punctuation">,</span>        <span class="token number">0x24A19947L</span><span class="token punctuation">,</span> <span class="token number">0xB3916CF7L</span><span class="token punctuation">,</span> <span class="token number">0x0801F2E2L</span><span class="token punctuation">,</span> <span class="token number">0x858EFC16L</span><span class="token punctuation">,</span>        <span class="token number">0x636920D8L</span><span class="token punctuation">,</span> <span class="token number">0x71574E69L</span><span class="token punctuation">,</span> <span class="token number">0xA458FEA3L</span><span class="token punctuation">,</span> <span class="token number">0xF4933D7EL</span><span class="token punctuation">,</span>        <span class="token number">0x0D95748FL</span><span class="token punctuation">,</span> <span class="token number">0x728EB658L</span><span class="token punctuation">,</span> <span class="token number">0x718BCD58L</span><span class="token punctuation">,</span> <span class="token number">0x82154AEEL</span><span class="token punctuation">,</span>        <span class="token number">0x7B54A41DL</span><span class="token punctuation">,</span> <span class="token number">0xC25A59B5L</span><span class="token punctuation">,</span> <span class="token number">0x9C30D539L</span><span class="token punctuation">,</span> <span class="token number">0x2AF26013L</span><span class="token punctuation">,</span>        <span class="token number">0xC5D1B023L</span><span class="token punctuation">,</span> <span class="token number">0x286085F0L</span><span class="token punctuation">,</span> <span class="token number">0xCA417918L</span><span class="token punctuation">,</span> <span class="token number">0xB8DB38EFL</span><span class="token punctuation">,</span>        <span class="token number">0x8E79DCB0L</span><span class="token punctuation">,</span> <span class="token number">0x603A180EL</span><span class="token punctuation">,</span> <span class="token number">0x6C9E0E8BL</span><span class="token punctuation">,</span> <span class="token number">0xB01E8A3EL</span><span class="token punctuation">,</span>        <span class="token number">0xD71577C1L</span><span class="token punctuation">,</span> <span class="token number">0xBD314B27L</span><span class="token punctuation">,</span> <span class="token number">0x78AF2FDAL</span><span class="token punctuation">,</span> <span class="token number">0x55605C60L</span><span class="token punctuation">,</span>        <span class="token number">0xE65525F3L</span><span class="token punctuation">,</span> <span class="token number">0xAA55AB94L</span><span class="token punctuation">,</span> <span class="token number">0x57489862L</span><span class="token punctuation">,</span> <span class="token number">0x63E81440L</span><span class="token punctuation">,</span>        <span class="token number">0x55CA396AL</span><span class="token punctuation">,</span> <span class="token number">0x2AAB10B6L</span><span class="token punctuation">,</span> <span class="token number">0xB4CC5C34L</span><span class="token punctuation">,</span> <span class="token number">0x1141E8CEL</span><span class="token punctuation">,</span>        <span class="token number">0xA15486AFL</span><span class="token punctuation">,</span> <span class="token number">0x7C72E993L</span><span class="token punctuation">,</span> <span class="token number">0xB3EE1411L</span><span class="token punctuation">,</span> <span class="token number">0x636FBC2AL</span><span class="token punctuation">,</span>        <span class="token number">0x2BA9C55DL</span><span class="token punctuation">,</span> <span class="token number">0x741831F6L</span><span class="token punctuation">,</span> <span class="token number">0xCE5C3E16L</span><span class="token punctuation">,</span> <span class="token number">0x9B87931EL</span><span class="token punctuation">,</span>        <span class="token number">0xAFD6BA33L</span><span class="token punctuation">,</span> <span class="token number">0x6C24CF5CL</span><span class="token punctuation">,</span> <span class="token number">0x7A325381L</span><span class="token punctuation">,</span> <span class="token number">0x28958677L</span><span class="token punctuation">,</span>        <span class="token number">0x3B8F4898L</span><span class="token punctuation">,</span> <span class="token number">0x6B4BB9AFL</span><span class="token punctuation">,</span> <span class="token number">0xC4BFE81BL</span><span class="token punctuation">,</span> <span class="token number">0x66282193L</span><span class="token punctuation">,</span>        <span class="token number">0x61D809CCL</span><span class="token punctuation">,</span> <span class="token number">0xFB21A991L</span><span class="token punctuation">,</span> <span class="token number">0x487CAC60L</span><span class="token punctuation">,</span> <span class="token number">0x5DEC8032L</span><span class="token punctuation">,</span>        <span class="token number">0xEF845D5DL</span><span class="token punctuation">,</span> <span class="token number">0xE98575B1L</span><span class="token punctuation">,</span> <span class="token number">0xDC262302L</span><span class="token punctuation">,</span> <span class="token number">0xEB651B88L</span><span class="token punctuation">,</span>        <span class="token number">0x23893E81L</span><span class="token punctuation">,</span> <span class="token number">0xD396ACC5L</span><span class="token punctuation">,</span> <span class="token number">0x0F6D6FF3L</span><span class="token punctuation">,</span> <span class="token number">0x83F44239L</span><span class="token punctuation">,</span>        <span class="token number">0x2E0B4482L</span><span class="token punctuation">,</span> <span class="token number">0xA4842004L</span><span class="token punctuation">,</span> <span class="token number">0x69C8F04AL</span><span class="token punctuation">,</span> <span class="token number">0x9E1F9B5EL</span><span class="token punctuation">,</span>        <span class="token number">0x21C66842L</span><span class="token punctuation">,</span> <span class="token number">0xF6E96C9AL</span><span class="token punctuation">,</span> <span class="token number">0x670C9C61L</span><span class="token punctuation">,</span> <span class="token number">0xABD388F0L</span><span class="token punctuation">,</span>        <span class="token number">0x6A51A0D2L</span><span class="token punctuation">,</span> <span class="token number">0xD8542F68L</span><span class="token punctuation">,</span> <span class="token number">0x960FA728L</span><span class="token punctuation">,</span> <span class="token number">0xAB5133A3L</span><span class="token punctuation">,</span>        <span class="token number">0x6EEF0B6CL</span><span class="token punctuation">,</span> <span class="token number">0x137A3BE4L</span><span class="token punctuation">,</span> <span class="token number">0xBA3BF050L</span><span class="token punctuation">,</span> <span class="token number">0x7EFB2A98L</span><span class="token punctuation">,</span>        <span class="token number">0xA1F1651DL</span><span class="token punctuation">,</span> <span class="token number">0x39AF0176L</span><span class="token punctuation">,</span> <span class="token number">0x66CA593EL</span><span class="token punctuation">,</span> <span class="token number">0x82430E88L</span><span class="token punctuation">,</span>        <span class="token number">0x8CEE8619L</span><span class="token punctuation">,</span> <span class="token number">0x456F9FB4L</span><span class="token punctuation">,</span> <span class="token number">0x7D84A5C3L</span><span class="token punctuation">,</span> <span class="token number">0x3B8B5EBEL</span><span class="token punctuation">,</span>        <span class="token number">0xE06F75D8L</span><span class="token punctuation">,</span> <span class="token number">0x85C12073L</span><span class="token punctuation">,</span> <span class="token number">0x401A449FL</span><span class="token punctuation">,</span> <span class="token number">0x56C16AA6L</span><span class="token punctuation">,</span>        <span class="token number">0x4ED3AA62L</span><span class="token punctuation">,</span> <span class="token number">0x363F7706L</span><span class="token punctuation">,</span> <span class="token number">0x1BFEDF72L</span><span class="token punctuation">,</span> <span class="token number">0x429B023DL</span><span class="token punctuation">,</span>        <span class="token number">0x37D0D724L</span><span class="token punctuation">,</span> <span class="token number">0xD00A1248L</span><span class="token punctuation">,</span> <span class="token number">0xDB0FEAD3L</span><span class="token punctuation">,</span> <span class="token number">0x49F1C09BL</span><span class="token punctuation">,</span>        <span class="token number">0x075372C9L</span><span class="token punctuation">,</span> <span class="token number">0x80991B7BL</span><span class="token punctuation">,</span> <span class="token number">0x25D479D8L</span><span class="token punctuation">,</span> <span class="token number">0xF6E8DEF7L</span><span class="token punctuation">,</span>        <span class="token number">0xE3FE501AL</span><span class="token punctuation">,</span> <span class="token number">0xB6794C3BL</span><span class="token punctuation">,</span> <span class="token number">0x976CE0BDL</span><span class="token punctuation">,</span> <span class="token number">0x04C006BAL</span><span class="token punctuation">,</span>        <span class="token number">0xC1A94FB6L</span><span class="token punctuation">,</span> <span class="token number">0x409F60C4L</span><span class="token punctuation">,</span> <span class="token number">0x5E5C9EC2L</span><span class="token punctuation">,</span> <span class="token number">0x196A2463L</span><span class="token punctuation">,</span>        <span class="token number">0x68FB6FAFL</span><span class="token punctuation">,</span> <span class="token number">0x3E6C53B5L</span><span class="token punctuation">,</span> <span class="token number">0x1339B2EBL</span><span class="token punctuation">,</span> <span class="token number">0x3B52EC6FL</span><span class="token punctuation">,</span>        <span class="token number">0x6DFC511FL</span><span class="token punctuation">,</span> <span class="token number">0x9B30952CL</span><span class="token punctuation">,</span> <span class="token number">0xCC814544L</span><span class="token punctuation">,</span> <span class="token number">0xAF5EBD09L</span><span class="token punctuation">,</span>        <span class="token number">0xBEE3D004L</span><span class="token punctuation">,</span> <span class="token number">0xDE334AFDL</span><span class="token punctuation">,</span> <span class="token number">0x660F2807L</span><span class="token punctuation">,</span> <span class="token number">0x192E4BB3L</span><span class="token punctuation">,</span>        <span class="token number">0xC0CBA857L</span><span class="token punctuation">,</span> <span class="token number">0x45C8740FL</span><span class="token punctuation">,</span> <span class="token number">0xD20B5F39L</span><span class="token punctuation">,</span> <span class="token number">0xB9D3FBDBL</span><span class="token punctuation">,</span>        <span class="token number">0x5579C0BDL</span><span class="token punctuation">,</span> <span class="token number">0x1A60320AL</span><span class="token punctuation">,</span> <span class="token number">0xD6A100C6L</span><span class="token punctuation">,</span> <span class="token number">0x402C7279L</span><span class="token punctuation">,</span>        <span class="token number">0x679F25FEL</span><span class="token punctuation">,</span> <span class="token number">0xFB1FA3CCL</span><span class="token punctuation">,</span> <span class="token number">0x8EA5E9F8L</span><span class="token punctuation">,</span> <span class="token number">0xDB3222F8L</span><span class="token punctuation">,</span>        <span class="token number">0x3C7516DFL</span><span class="token punctuation">,</span> <span class="token number">0xFD616B15L</span><span class="token punctuation">,</span> <span class="token number">0x2F501EC8L</span><span class="token punctuation">,</span> <span class="token number">0xAD0552ABL</span><span class="token punctuation">,</span>        <span class="token number">0x323DB5FAL</span><span class="token punctuation">,</span> <span class="token number">0xFD238760L</span><span class="token punctuation">,</span> <span class="token number">0x53317B48L</span><span class="token punctuation">,</span> <span class="token number">0x3E00DF82L</span><span class="token punctuation">,</span>        <span class="token number">0x9E5C57BBL</span><span class="token punctuation">,</span> <span class="token number">0xCA6F8CA0L</span><span class="token punctuation">,</span> <span class="token number">0x1A87562EL</span><span class="token punctuation">,</span> <span class="token number">0xDF1769DBL</span><span class="token punctuation">,</span>        <span class="token number">0xD542A8F6L</span><span class="token punctuation">,</span> <span class="token number">0x287EFFC3L</span><span class="token punctuation">,</span> <span class="token number">0xAC6732C6L</span><span class="token punctuation">,</span> <span class="token number">0x8C4F5573L</span><span class="token punctuation">,</span>        <span class="token number">0x695B27B0L</span><span class="token punctuation">,</span> <span class="token number">0xBBCA58C8L</span><span class="token punctuation">,</span> <span class="token number">0xE1FFA35DL</span><span class="token punctuation">,</span> <span class="token number">0xB8F011A0L</span><span class="token punctuation">,</span>        <span class="token number">0x10FA3D98L</span><span class="token punctuation">,</span> <span class="token number">0xFD2183B8L</span><span class="token punctuation">,</span> <span class="token number">0x4AFCB56CL</span><span class="token punctuation">,</span> <span class="token number">0x2DD1D35BL</span><span class="token punctuation">,</span>        <span class="token number">0x9A53E479L</span><span class="token punctuation">,</span> <span class="token number">0xB6F84565L</span><span class="token punctuation">,</span> <span class="token number">0xD28E49BCL</span><span class="token punctuation">,</span> <span class="token number">0x4BFB9790L</span><span class="token punctuation">,</span>        <span class="token number">0xE1DDF2DAL</span><span class="token punctuation">,</span> <span class="token number">0xA4CB7E33L</span><span class="token punctuation">,</span> <span class="token number">0x62FB1341L</span><span class="token punctuation">,</span> <span class="token number">0xCEE4C6E8L</span><span class="token punctuation">,</span>        <span class="token number">0xEF20CADAL</span><span class="token punctuation">,</span> <span class="token number">0x36774C01L</span><span class="token punctuation">,</span> <span class="token number">0xD07E9EFEL</span><span class="token punctuation">,</span> <span class="token number">0x2BF11FB4L</span><span class="token punctuation">,</span>        <span class="token number">0x95DBDA4DL</span><span class="token punctuation">,</span> <span class="token number">0xAE909198L</span><span class="token punctuation">,</span> <span class="token number">0xEAAD8E71L</span><span class="token punctuation">,</span> <span class="token number">0x6B93D5A0L</span><span class="token punctuation">,</span>        <span class="token number">0xD08ED1D0L</span><span class="token punctuation">,</span> <span class="token number">0xAFC725E0L</span><span class="token punctuation">,</span> <span class="token number">0x8E3C5B2FL</span><span class="token punctuation">,</span> <span class="token number">0x8E7594B7L</span><span class="token punctuation">,</span>        <span class="token number">0x8FF6E2FBL</span><span class="token punctuation">,</span> <span class="token number">0xF2122B64L</span><span class="token punctuation">,</span> <span class="token number">0x8888B812L</span><span class="token punctuation">,</span> <span class="token number">0x900DF01CL</span><span class="token punctuation">,</span>        <span class="token number">0x4FAD5EA0L</span><span class="token punctuation">,</span> <span class="token number">0x688FC31CL</span><span class="token punctuation">,</span> <span class="token number">0xD1CFF191L</span><span class="token punctuation">,</span> <span class="token number">0xB3A8C1ADL</span><span class="token punctuation">,</span>        <span class="token number">0x2F2F2218L</span><span class="token punctuation">,</span> <span class="token number">0xBE0E1777L</span><span class="token punctuation">,</span> <span class="token number">0xEA752DFEL</span><span class="token punctuation">,</span> <span class="token number">0x8B021FA1L</span><span class="token punctuation">,</span>        <span class="token number">0xE5A0CC0FL</span><span class="token punctuation">,</span> <span class="token number">0xB56F74E8L</span><span class="token punctuation">,</span> <span class="token number">0x18ACF3D6L</span><span class="token punctuation">,</span> <span class="token number">0xCE89E299L</span><span class="token punctuation">,</span>        <span class="token number">0xB4A84FE0L</span><span class="token punctuation">,</span> <span class="token number">0xFD13E0B7L</span><span class="token punctuation">,</span> <span class="token number">0x7CC43B81L</span><span class="token punctuation">,</span> <span class="token number">0xD2ADA8D9L</span><span class="token punctuation">,</span>        <span class="token number">0x165FA266L</span><span class="token punctuation">,</span> <span class="token number">0x80957705L</span><span class="token punctuation">,</span> <span class="token number">0x93CC7314L</span><span class="token punctuation">,</span> <span class="token number">0x211A1477L</span><span class="token punctuation">,</span>        <span class="token number">0xE6AD2065L</span><span class="token punctuation">,</span> <span class="token number">0x77B5FA86L</span><span class="token punctuation">,</span> <span class="token number">0xC75442F5L</span><span class="token punctuation">,</span> <span class="token number">0xFB9D35CFL</span><span class="token punctuation">,</span>        <span class="token number">0xEBCDAF0CL</span><span class="token punctuation">,</span> <span class="token number">0x7B3E89A0L</span><span class="token punctuation">,</span> <span class="token number">0xD6411BD3L</span><span class="token punctuation">,</span> <span class="token number">0xAE1E7E49L</span><span class="token punctuation">,</span>        <span class="token number">0x00250E2DL</span><span class="token punctuation">,</span> <span class="token number">0x2071B35EL</span><span class="token punctuation">,</span> <span class="token number">0x226800BBL</span><span class="token punctuation">,</span> <span class="token number">0x57B8E0AFL</span><span class="token punctuation">,</span>        <span class="token number">0x2464369BL</span><span class="token punctuation">,</span> <span class="token number">0xF009B91EL</span><span class="token punctuation">,</span> <span class="token number">0x5563911DL</span><span class="token punctuation">,</span> <span class="token number">0x59DFA6AAL</span><span class="token punctuation">,</span>        <span class="token number">0x78C14389L</span><span class="token punctuation">,</span> <span class="token number">0xD95A537FL</span><span class="token punctuation">,</span> <span class="token number">0x207D5BA2L</span><span class="token punctuation">,</span> <span class="token number">0x02E5B9C5L</span><span class="token punctuation">,</span>        <span class="token number">0x83260376L</span><span class="token punctuation">,</span> <span class="token number">0x6295CFA9L</span><span class="token punctuation">,</span> <span class="token number">0x11C81968L</span><span class="token punctuation">,</span> <span class="token number">0x4E734A41L</span><span class="token punctuation">,</span>        <span class="token number">0xB3472DCAL</span><span class="token punctuation">,</span> <span class="token number">0x7B14A94AL</span><span class="token punctuation">,</span> <span class="token number">0x1B510052L</span><span class="token punctuation">,</span> <span class="token number">0x9A532915L</span><span class="token punctuation">,</span>        <span class="token number">0xD60F573FL</span><span class="token punctuation">,</span> <span class="token number">0xBC9BC6E4L</span><span class="token punctuation">,</span> <span class="token number">0x2B60A476L</span><span class="token punctuation">,</span> <span class="token number">0x81E67400L</span><span class="token punctuation">,</span>        <span class="token number">0x08BA6FB5L</span><span class="token punctuation">,</span> <span class="token number">0x571BE91FL</span><span class="token punctuation">,</span> <span class="token number">0xF296EC6BL</span><span class="token punctuation">,</span> <span class="token number">0x2A0DD915L</span><span class="token punctuation">,</span>        <span class="token number">0xB6636521L</span><span class="token punctuation">,</span> <span class="token number">0xE7B9F9B6L</span><span class="token punctuation">,</span> <span class="token number">0xFF34052EL</span><span class="token punctuation">,</span> <span class="token number">0xC5855664L</span><span class="token punctuation">,</span>        <span class="token number">0x53B02D5DL</span><span class="token punctuation">,</span> <span class="token number">0xA99F8FA1L</span><span class="token punctuation">,</span> <span class="token number">0x08BA4799L</span><span class="token punctuation">,</span> <span class="token number">0x6E85076AL</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>   <span class="token number">0x4B7A70E9L</span><span class="token punctuation">,</span> <span class="token number">0xB5B32944L</span><span class="token punctuation">,</span> <span class="token number">0xDB75092EL</span><span class="token punctuation">,</span> <span class="token number">0xC4192623L</span><span class="token punctuation">,</span>        <span class="token number">0xAD6EA6B0L</span><span class="token punctuation">,</span> <span class="token number">0x49A7DF7DL</span><span class="token punctuation">,</span> <span class="token number">0x9CEE60B8L</span><span class="token punctuation">,</span> <span class="token number">0x8FEDB266L</span><span class="token punctuation">,</span>        <span class="token number">0xECAA8C71L</span><span class="token punctuation">,</span> <span class="token number">0x699A17FFL</span><span class="token punctuation">,</span> <span class="token number">0x5664526CL</span><span class="token punctuation">,</span> <span class="token number">0xC2B19EE1L</span><span class="token punctuation">,</span>        <span class="token number">0x193602A5L</span><span class="token punctuation">,</span> <span class="token number">0x75094C29L</span><span class="token punctuation">,</span> <span class="token number">0xA0591340L</span><span class="token punctuation">,</span> <span class="token number">0xE4183A3EL</span><span class="token punctuation">,</span>        <span class="token number">0x3F54989AL</span><span class="token punctuation">,</span> <span class="token number">0x5B429D65L</span><span class="token punctuation">,</span> <span class="token number">0x6B8FE4D6L</span><span class="token punctuation">,</span> <span class="token number">0x99F73FD6L</span><span class="token punctuation">,</span>        <span class="token number">0xA1D29C07L</span><span class="token punctuation">,</span> <span class="token number">0xEFE830F5L</span><span class="token punctuation">,</span> <span class="token number">0x4D2D38E6L</span><span class="token punctuation">,</span> <span class="token number">0xF0255DC1L</span><span class="token punctuation">,</span>        <span class="token number">0x4CDD2086L</span><span class="token punctuation">,</span> <span class="token number">0x8470EB26L</span><span class="token punctuation">,</span> <span class="token number">0x6382E9C6L</span><span class="token punctuation">,</span> <span class="token number">0x021ECC5EL</span><span class="token punctuation">,</span>        <span class="token number">0x09686B3FL</span><span class="token punctuation">,</span> <span class="token number">0x3EBAEFC9L</span><span class="token punctuation">,</span> <span class="token number">0x3C971814L</span><span class="token punctuation">,</span> <span class="token number">0x6B6A70A1L</span><span class="token punctuation">,</span>        <span class="token number">0x687F3584L</span><span class="token punctuation">,</span> <span class="token number">0x52A0E286L</span><span class="token punctuation">,</span> <span class="token number">0xB79C5305L</span><span class="token punctuation">,</span> <span class="token number">0xAA500737L</span><span class="token punctuation">,</span>        <span class="token number">0x3E07841CL</span><span class="token punctuation">,</span> <span class="token number">0x7FDEAE5CL</span><span class="token punctuation">,</span> <span class="token number">0x8E7D44ECL</span><span class="token punctuation">,</span> <span class="token number">0x5716F2B8L</span><span class="token punctuation">,</span>        <span class="token number">0xB03ADA37L</span><span class="token punctuation">,</span> <span class="token number">0xF0500C0DL</span><span class="token punctuation">,</span> <span class="token number">0xF01C1F04L</span><span class="token punctuation">,</span> <span class="token number">0x0200B3FFL</span><span class="token punctuation">,</span>        <span class="token number">0xAE0CF51AL</span><span class="token punctuation">,</span> <span class="token number">0x3CB574B2L</span><span class="token punctuation">,</span> <span class="token number">0x25837A58L</span><span class="token punctuation">,</span> <span class="token number">0xDC0921BDL</span><span class="token punctuation">,</span>        <span class="token number">0xD19113F9L</span><span class="token punctuation">,</span> <span class="token number">0x7CA92FF6L</span><span class="token punctuation">,</span> <span class="token number">0x94324773L</span><span class="token punctuation">,</span> <span class="token number">0x22F54701L</span><span class="token punctuation">,</span>        <span class="token number">0x3AE5E581L</span><span class="token punctuation">,</span> <span class="token number">0x37C2DADCL</span><span class="token punctuation">,</span> <span class="token number">0xC8B57634L</span><span class="token punctuation">,</span> <span class="token number">0x9AF3DDA7L</span><span class="token punctuation">,</span>        <span class="token number">0xA9446146L</span><span class="token punctuation">,</span> <span class="token number">0x0FD0030EL</span><span class="token punctuation">,</span> <span class="token number">0xECC8C73EL</span><span class="token punctuation">,</span> <span class="token number">0xA4751E41L</span><span class="token punctuation">,</span>        <span class="token number">0xE238CD99L</span><span class="token punctuation">,</span> <span class="token number">0x3BEA0E2FL</span><span class="token punctuation">,</span> <span class="token number">0x3280BBA1L</span><span class="token punctuation">,</span> <span class="token number">0x183EB331L</span><span class="token punctuation">,</span>        <span class="token number">0x4E548B38L</span><span class="token punctuation">,</span> <span class="token number">0x4F6DB908L</span><span class="token punctuation">,</span> <span class="token number">0x6F420D03L</span><span class="token punctuation">,</span> <span class="token number">0xF60A04BFL</span><span class="token punctuation">,</span>        <span class="token number">0x2CB81290L</span><span class="token punctuation">,</span> <span class="token number">0x24977C79L</span><span class="token punctuation">,</span> <span class="token number">0x5679B072L</span><span class="token punctuation">,</span> <span class="token number">0xBCAF89AFL</span><span class="token punctuation">,</span>        <span class="token number">0xDE9A771FL</span><span class="token punctuation">,</span> <span class="token number">0xD9930810L</span><span class="token punctuation">,</span> <span class="token number">0xB38BAE12L</span><span class="token punctuation">,</span> <span class="token number">0xDCCF3F2EL</span><span class="token punctuation">,</span>        <span class="token number">0x5512721FL</span><span class="token punctuation">,</span> <span class="token number">0x2E6B7124L</span><span class="token punctuation">,</span> <span class="token number">0x501ADDE6L</span><span class="token punctuation">,</span> <span class="token number">0x9F84CD87L</span><span class="token punctuation">,</span>        <span class="token number">0x7A584718L</span><span class="token punctuation">,</span> <span class="token number">0x7408DA17L</span><span class="token punctuation">,</span> <span class="token number">0xBC9F9ABCL</span><span class="token punctuation">,</span> <span class="token number">0xE94B7D8CL</span><span class="token punctuation">,</span>        <span class="token number">0xEC7AEC3AL</span><span class="token punctuation">,</span> <span class="token number">0xDB851DFAL</span><span class="token punctuation">,</span> <span class="token number">0x63094366L</span><span class="token punctuation">,</span> <span class="token number">0xC464C3D2L</span><span class="token punctuation">,</span>        <span class="token number">0xEF1C1847L</span><span class="token punctuation">,</span> <span class="token number">0x3215D908L</span><span class="token punctuation">,</span> <span class="token number">0xDD433B37L</span><span class="token punctuation">,</span> <span class="token number">0x24C2BA16L</span><span class="token punctuation">,</span>        <span class="token number">0x12A14D43L</span><span class="token punctuation">,</span> <span class="token number">0x2A65C451L</span><span class="token punctuation">,</span> <span class="token number">0x50940002L</span><span class="token punctuation">,</span> <span class="token number">0x133AE4DDL</span><span class="token punctuation">,</span>        <span class="token number">0x71DFF89EL</span><span class="token punctuation">,</span> <span class="token number">0x10314E55L</span><span class="token punctuation">,</span> <span class="token number">0x81AC77D6L</span><span class="token punctuation">,</span> <span class="token number">0x5F11199BL</span><span class="token punctuation">,</span>        <span class="token number">0x043556F1L</span><span class="token punctuation">,</span> <span class="token number">0xD7A3C76BL</span><span class="token punctuation">,</span> <span class="token number">0x3C11183BL</span><span class="token punctuation">,</span> <span class="token number">0x5924A509L</span><span class="token punctuation">,</span>        <span class="token number">0xF28FE6EDL</span><span class="token punctuation">,</span> <span class="token number">0x97F1FBFAL</span><span class="token punctuation">,</span> <span class="token number">0x9EBABF2CL</span><span class="token punctuation">,</span> <span class="token number">0x1E153C6EL</span><span class="token punctuation">,</span>        <span class="token number">0x86E34570L</span><span class="token punctuation">,</span> <span class="token number">0xEAE96FB1L</span><span class="token punctuation">,</span> <span class="token number">0x860E5E0AL</span><span class="token punctuation">,</span> <span class="token number">0x5A3E2AB3L</span><span class="token punctuation">,</span>        <span class="token number">0x771FE71CL</span><span class="token punctuation">,</span> <span class="token number">0x4E3D06FAL</span><span class="token punctuation">,</span> <span class="token number">0x2965DCB9L</span><span class="token punctuation">,</span> <span class="token number">0x99E71D0FL</span><span class="token punctuation">,</span>        <span class="token number">0x803E89D6L</span><span class="token punctuation">,</span> <span class="token number">0x5266C825L</span><span class="token punctuation">,</span> <span class="token number">0x2E4CC978L</span><span class="token punctuation">,</span> <span class="token number">0x9C10B36AL</span><span class="token punctuation">,</span>        <span class="token number">0xC6150EBAL</span><span class="token punctuation">,</span> <span class="token number">0x94E2EA78L</span><span class="token punctuation">,</span> <span class="token number">0xA5FC3C53L</span><span class="token punctuation">,</span> <span class="token number">0x1E0A2DF4L</span><span class="token punctuation">,</span>        <span class="token number">0xF2F74EA7L</span><span class="token punctuation">,</span> <span class="token number">0x361D2B3DL</span><span class="token punctuation">,</span> <span class="token number">0x1939260FL</span><span class="token punctuation">,</span> <span class="token number">0x19C27960L</span><span class="token punctuation">,</span>        <span class="token number">0x5223A708L</span><span class="token punctuation">,</span> <span class="token number">0xF71312B6L</span><span class="token punctuation">,</span> <span class="token number">0xEBADFE6EL</span><span class="token punctuation">,</span> <span class="token number">0xEAC31F66L</span><span class="token punctuation">,</span>        <span class="token number">0xE3BC4595L</span><span class="token punctuation">,</span> <span class="token number">0xA67BC883L</span><span class="token punctuation">,</span> <span class="token number">0xB17F37D1L</span><span class="token punctuation">,</span> <span class="token number">0x018CFF28L</span><span class="token punctuation">,</span>        <span class="token number">0xC332DDEFL</span><span class="token punctuation">,</span> <span class="token number">0xBE6C5AA5L</span><span class="token punctuation">,</span> <span class="token number">0x65582185L</span><span class="token punctuation">,</span> <span class="token number">0x68AB9802L</span><span class="token punctuation">,</span>        <span class="token number">0xEECEA50FL</span><span class="token punctuation">,</span> <span class="token number">0xDB2F953BL</span><span class="token punctuation">,</span> <span class="token number">0x2AEF7DADL</span><span class="token punctuation">,</span> <span class="token number">0x5B6E2F84L</span><span class="token punctuation">,</span>        <span class="token number">0x1521B628L</span><span class="token punctuation">,</span> <span class="token number">0x29076170L</span><span class="token punctuation">,</span> <span class="token number">0xECDD4775L</span><span class="token punctuation">,</span> <span class="token number">0x619F1510L</span><span class="token punctuation">,</span>        <span class="token number">0x13CCA830L</span><span class="token punctuation">,</span> <span class="token number">0xEB61BD96L</span><span class="token punctuation">,</span> <span class="token number">0x0334FE1EL</span><span class="token punctuation">,</span> <span class="token number">0xAA0363CFL</span><span class="token punctuation">,</span>        <span class="token number">0xB5735C90L</span><span class="token punctuation">,</span> <span class="token number">0x4C70A239L</span><span class="token punctuation">,</span> <span class="token number">0xD59E9E0BL</span><span class="token punctuation">,</span> <span class="token number">0xCBAADE14L</span><span class="token punctuation">,</span>        <span class="token number">0xEECC86BCL</span><span class="token punctuation">,</span> <span class="token number">0x60622CA7L</span><span class="token punctuation">,</span> <span class="token number">0x9CAB5CABL</span><span class="token punctuation">,</span> <span class="token number">0xB2F3846EL</span><span class="token punctuation">,</span>        <span class="token number">0x648B1EAFL</span><span class="token punctuation">,</span> <span class="token number">0x19BDF0CAL</span><span class="token punctuation">,</span> <span class="token number">0xA02369B9L</span><span class="token punctuation">,</span> <span class="token number">0x655ABB50L</span><span class="token punctuation">,</span>        <span class="token number">0x40685A32L</span><span class="token punctuation">,</span> <span class="token number">0x3C2AB4B3L</span><span class="token punctuation">,</span> <span class="token number">0x319EE9D5L</span><span class="token punctuation">,</span> <span class="token number">0xC021B8F7L</span><span class="token punctuation">,</span>        <span class="token number">0x9B540B19L</span><span class="token punctuation">,</span> <span class="token number">0x875FA099L</span><span class="token punctuation">,</span> <span class="token number">0x95F7997EL</span><span class="token punctuation">,</span> <span class="token number">0x623D7DA8L</span><span class="token punctuation">,</span>        <span class="token number">0xF837889AL</span><span class="token punctuation">,</span> <span class="token number">0x97E32D77L</span><span class="token punctuation">,</span> <span class="token number">0x11ED935FL</span><span class="token punctuation">,</span> <span class="token number">0x16681281L</span><span class="token punctuation">,</span>        <span class="token number">0x0E358829L</span><span class="token punctuation">,</span> <span class="token number">0xC7E61FD6L</span><span class="token punctuation">,</span> <span class="token number">0x96DEDFA1L</span><span class="token punctuation">,</span> <span class="token number">0x7858BA99L</span><span class="token punctuation">,</span>        <span class="token number">0x57F584A5L</span><span class="token punctuation">,</span> <span class="token number">0x1B227263L</span><span class="token punctuation">,</span> <span class="token number">0x9B83C3FFL</span><span class="token punctuation">,</span> <span class="token number">0x1AC24696L</span><span class="token punctuation">,</span>        <span class="token number">0xCDB30AEBL</span><span class="token punctuation">,</span> <span class="token number">0x532E3054L</span><span class="token punctuation">,</span> <span class="token number">0x8FD948E4L</span><span class="token punctuation">,</span> <span class="token number">0x6DBC3128L</span><span class="token punctuation">,</span>        <span class="token number">0x58EBF2EFL</span><span class="token punctuation">,</span> <span class="token number">0x34C6FFEAL</span><span class="token punctuation">,</span> <span class="token number">0xFE28ED61L</span><span class="token punctuation">,</span> <span class="token number">0xEE7C3C73L</span><span class="token punctuation">,</span>        <span class="token number">0x5D4A14D9L</span><span class="token punctuation">,</span> <span class="token number">0xE864B7E3L</span><span class="token punctuation">,</span> <span class="token number">0x42105D14L</span><span class="token punctuation">,</span> <span class="token number">0x203E13E0L</span><span class="token punctuation">,</span>        <span class="token number">0x45EEE2B6L</span><span class="token punctuation">,</span> <span class="token number">0xA3AAABEAL</span><span class="token punctuation">,</span> <span class="token number">0xDB6C4F15L</span><span class="token punctuation">,</span> <span class="token number">0xFACB4FD0L</span><span class="token punctuation">,</span>        <span class="token number">0xC742F442L</span><span class="token punctuation">,</span> <span class="token number">0xEF6ABBB5L</span><span class="token punctuation">,</span> <span class="token number">0x654F3B1DL</span><span class="token punctuation">,</span> <span class="token number">0x41CD2105L</span><span class="token punctuation">,</span>        <span class="token number">0xD81E799EL</span><span class="token punctuation">,</span> <span class="token number">0x86854DC7L</span><span class="token punctuation">,</span> <span class="token number">0xE44B476AL</span><span class="token punctuation">,</span> <span class="token number">0x3D816250L</span><span class="token punctuation">,</span>        <span class="token number">0xCF62A1F2L</span><span class="token punctuation">,</span> <span class="token number">0x5B8D2646L</span><span class="token punctuation">,</span> <span class="token number">0xFC8883A0L</span><span class="token punctuation">,</span> <span class="token number">0xC1C7B6A3L</span><span class="token punctuation">,</span>        <span class="token number">0x7F1524C3L</span><span class="token punctuation">,</span> <span class="token number">0x69CB7492L</span><span class="token punctuation">,</span> <span class="token number">0x47848A0BL</span><span class="token punctuation">,</span> <span class="token number">0x5692B285L</span><span class="token punctuation">,</span>        <span class="token number">0x095BBF00L</span><span class="token punctuation">,</span> <span class="token number">0xAD19489DL</span><span class="token punctuation">,</span> <span class="token number">0x1462B174L</span><span class="token punctuation">,</span> <span class="token number">0x23820E00L</span><span class="token punctuation">,</span>        <span class="token number">0x58428D2AL</span><span class="token punctuation">,</span> <span class="token number">0x0C55F5EAL</span><span class="token punctuation">,</span> <span class="token number">0x1DADF43EL</span><span class="token punctuation">,</span> <span class="token number">0x233F7061L</span><span class="token punctuation">,</span>        <span class="token number">0x3372F092L</span><span class="token punctuation">,</span> <span class="token number">0x8D937E41L</span><span class="token punctuation">,</span> <span class="token number">0xD65FECF1L</span><span class="token punctuation">,</span> <span class="token number">0x6C223BDBL</span><span class="token punctuation">,</span>        <span class="token number">0x7CDE3759L</span><span class="token punctuation">,</span> <span class="token number">0xCBEE7460L</span><span class="token punctuation">,</span> <span class="token number">0x4085F2A7L</span><span class="token punctuation">,</span> <span class="token number">0xCE77326EL</span><span class="token punctuation">,</span>        <span class="token number">0xA6078084L</span><span class="token punctuation">,</span> <span class="token number">0x19F8509EL</span><span class="token punctuation">,</span> <span class="token number">0xE8EFD855L</span><span class="token punctuation">,</span> <span class="token number">0x61D99735L</span><span class="token punctuation">,</span>        <span class="token number">0xA969A7AAL</span><span class="token punctuation">,</span> <span class="token number">0xC50C06C2L</span><span class="token punctuation">,</span> <span class="token number">0x5A04ABFCL</span><span class="token punctuation">,</span> <span class="token number">0x800BCADCL</span><span class="token punctuation">,</span>        <span class="token number">0x9E447A2EL</span><span class="token punctuation">,</span> <span class="token number">0xC3453484L</span><span class="token punctuation">,</span> <span class="token number">0xFDD56705L</span><span class="token punctuation">,</span> <span class="token number">0x0E1E9EC9L</span><span class="token punctuation">,</span>        <span class="token number">0xDB73DBD3L</span><span class="token punctuation">,</span> <span class="token number">0x105588CDL</span><span class="token punctuation">,</span> <span class="token number">0x675FDA79L</span><span class="token punctuation">,</span> <span class="token number">0xE3674340L</span><span class="token punctuation">,</span>        <span class="token number">0xC5C43465L</span><span class="token punctuation">,</span> <span class="token number">0x713E38D8L</span><span class="token punctuation">,</span> <span class="token number">0x3D28F89EL</span><span class="token punctuation">,</span> <span class="token number">0xF16DFF20L</span><span class="token punctuation">,</span>        <span class="token number">0x153E21E7L</span><span class="token punctuation">,</span> <span class="token number">0x8FB03D4AL</span><span class="token punctuation">,</span> <span class="token number">0xE6E39F2BL</span><span class="token punctuation">,</span> <span class="token number">0xDB83ADF7L</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>   <span class="token number">0xE93D5A68L</span><span class="token punctuation">,</span> <span class="token number">0x948140F7L</span><span class="token punctuation">,</span> <span class="token number">0xF64C261CL</span><span class="token punctuation">,</span> <span class="token number">0x94692934L</span><span class="token punctuation">,</span>        <span class="token number">0x411520F7L</span><span class="token punctuation">,</span> <span class="token number">0x7602D4F7L</span><span class="token punctuation">,</span> <span class="token number">0xBCF46B2EL</span><span class="token punctuation">,</span> <span class="token number">0xD4A20068L</span><span class="token punctuation">,</span>        <span class="token number">0xD4082471L</span><span class="token punctuation">,</span> <span class="token number">0x3320F46AL</span><span class="token punctuation">,</span> <span class="token number">0x43B7D4B7L</span><span class="token punctuation">,</span> <span class="token number">0x500061AFL</span><span class="token punctuation">,</span>        <span class="token number">0x1E39F62EL</span><span class="token punctuation">,</span> <span class="token number">0x97244546L</span><span class="token punctuation">,</span> <span class="token number">0x14214F74L</span><span class="token punctuation">,</span> <span class="token number">0xBF8B8840L</span><span class="token punctuation">,</span>        <span class="token number">0x4D95FC1DL</span><span class="token punctuation">,</span> <span class="token number">0x96B591AFL</span><span class="token punctuation">,</span> <span class="token number">0x70F4DDD3L</span><span class="token punctuation">,</span> <span class="token number">0x66A02F45L</span><span class="token punctuation">,</span>        <span class="token number">0xBFBC09ECL</span><span class="token punctuation">,</span> <span class="token number">0x03BD9785L</span><span class="token punctuation">,</span> <span class="token number">0x7FAC6DD0L</span><span class="token punctuation">,</span> <span class="token number">0x31CB8504L</span><span class="token punctuation">,</span>        <span class="token number">0x96EB27B3L</span><span class="token punctuation">,</span> <span class="token number">0x55FD3941L</span><span class="token punctuation">,</span> <span class="token number">0xDA2547E6L</span><span class="token punctuation">,</span> <span class="token number">0xABCA0A9AL</span><span class="token punctuation">,</span>        <span class="token number">0x28507825L</span><span class="token punctuation">,</span> <span class="token number">0x530429F4L</span><span class="token punctuation">,</span> <span class="token number">0x0A2C86DAL</span><span class="token punctuation">,</span> <span class="token number">0xE9B66DFBL</span><span class="token punctuation">,</span>        <span class="token number">0x68DC1462L</span><span class="token punctuation">,</span> <span class="token number">0xD7486900L</span><span class="token punctuation">,</span> <span class="token number">0x680EC0A4L</span><span class="token punctuation">,</span> <span class="token number">0x27A18DEEL</span><span class="token punctuation">,</span>        <span class="token number">0x4F3FFEA2L</span><span class="token punctuation">,</span> <span class="token number">0xE887AD8CL</span><span class="token punctuation">,</span> <span class="token number">0xB58CE006L</span><span class="token punctuation">,</span> <span class="token number">0x7AF4D6B6L</span><span class="token punctuation">,</span>        <span class="token number">0xAACE1E7CL</span><span class="token punctuation">,</span> <span class="token number">0xD3375FECL</span><span class="token punctuation">,</span> <span class="token number">0xCE78A399L</span><span class="token punctuation">,</span> <span class="token number">0x406B2A42L</span><span class="token punctuation">,</span>        <span class="token number">0x20FE9E35L</span><span class="token punctuation">,</span> <span class="token number">0xD9F385B9L</span><span class="token punctuation">,</span> <span class="token number">0xEE39D7ABL</span><span class="token punctuation">,</span> <span class="token number">0x3B124E8BL</span><span class="token punctuation">,</span>        <span class="token number">0x1DC9FAF7L</span><span class="token punctuation">,</span> <span class="token number">0x4B6D1856L</span><span class="token punctuation">,</span> <span class="token number">0x26A36631L</span><span class="token punctuation">,</span> <span class="token number">0xEAE397B2L</span><span class="token punctuation">,</span>        <span class="token number">0x3A6EFA74L</span><span class="token punctuation">,</span> <span class="token number">0xDD5B4332L</span><span class="token punctuation">,</span> <span class="token number">0x6841E7F7L</span><span class="token punctuation">,</span> <span class="token number">0xCA7820FBL</span><span class="token punctuation">,</span>        <span class="token number">0xFB0AF54EL</span><span class="token punctuation">,</span> <span class="token number">0xD8FEB397L</span><span class="token punctuation">,</span> <span class="token number">0x454056ACL</span><span class="token punctuation">,</span> <span class="token number">0xBA489527L</span><span class="token punctuation">,</span>        <span class="token number">0x55533A3AL</span><span class="token punctuation">,</span> <span class="token number">0x20838D87L</span><span class="token punctuation">,</span> <span class="token number">0xFE6BA9B7L</span><span class="token punctuation">,</span> <span class="token number">0xD096954BL</span><span class="token punctuation">,</span>        <span class="token number">0x55A867BCL</span><span class="token punctuation">,</span> <span class="token number">0xA1159A58L</span><span class="token punctuation">,</span> <span class="token number">0xCCA92963L</span><span class="token punctuation">,</span> <span class="token number">0x99E1DB33L</span><span class="token punctuation">,</span>        <span class="token number">0xA62A4A56L</span><span class="token punctuation">,</span> <span class="token number">0x3F3125F9L</span><span class="token punctuation">,</span> <span class="token number">0x5EF47E1CL</span><span class="token punctuation">,</span> <span class="token number">0x9029317CL</span><span class="token punctuation">,</span>        <span class="token number">0xFDF8E802L</span><span class="token punctuation">,</span> <span class="token number">0x04272F70L</span><span class="token punctuation">,</span> <span class="token number">0x80BB155CL</span><span class="token punctuation">,</span> <span class="token number">0x05282CE3L</span><span class="token punctuation">,</span>        <span class="token number">0x95C11548L</span><span class="token punctuation">,</span> <span class="token number">0xE4C66D22L</span><span class="token punctuation">,</span> <span class="token number">0x48C1133FL</span><span class="token punctuation">,</span> <span class="token number">0xC70F86DCL</span><span class="token punctuation">,</span>        <span class="token number">0x07F9C9EEL</span><span class="token punctuation">,</span> <span class="token number">0x41041F0FL</span><span class="token punctuation">,</span> <span class="token number">0x404779A4L</span><span class="token punctuation">,</span> <span class="token number">0x5D886E17L</span><span class="token punctuation">,</span>        <span class="token number">0x325F51EBL</span><span class="token punctuation">,</span> <span class="token number">0xD59BC0D1L</span><span class="token punctuation">,</span> <span class="token number">0xF2BCC18FL</span><span class="token punctuation">,</span> <span class="token number">0x41113564L</span><span class="token punctuation">,</span>        <span class="token number">0x257B7834L</span><span class="token punctuation">,</span> <span class="token number">0x602A9C60L</span><span class="token punctuation">,</span> <span class="token number">0xDFF8E8A3L</span><span class="token punctuation">,</span> <span class="token number">0x1F636C1BL</span><span class="token punctuation">,</span>        <span class="token number">0x0E12B4C2L</span><span class="token punctuation">,</span> <span class="token number">0x02E1329EL</span><span class="token punctuation">,</span> <span class="token number">0xAF664FD1L</span><span class="token punctuation">,</span> <span class="token number">0xCAD18115L</span><span class="token punctuation">,</span>        <span class="token number">0x6B2395E0L</span><span class="token punctuation">,</span> <span class="token number">0x333E92E1L</span><span class="token punctuation">,</span> <span class="token number">0x3B240B62L</span><span class="token punctuation">,</span> <span class="token number">0xEEBEB922L</span><span class="token punctuation">,</span>        <span class="token number">0x85B2A20EL</span><span class="token punctuation">,</span> <span class="token number">0xE6BA0D99L</span><span class="token punctuation">,</span> <span class="token number">0xDE720C8CL</span><span class="token punctuation">,</span> <span class="token number">0x2DA2F728L</span><span class="token punctuation">,</span>        <span class="token number">0xD0127845L</span><span class="token punctuation">,</span> <span class="token number">0x95B794FDL</span><span class="token punctuation">,</span> <span class="token number">0x647D0862L</span><span class="token punctuation">,</span> <span class="token number">0xE7CCF5F0L</span><span class="token punctuation">,</span>        <span class="token number">0x5449A36FL</span><span class="token punctuation">,</span> <span class="token number">0x877D48FAL</span><span class="token punctuation">,</span> <span class="token number">0xC39DFD27L</span><span class="token punctuation">,</span> <span class="token number">0xF33E8D1EL</span><span class="token punctuation">,</span>        <span class="token number">0x0A476341L</span><span class="token punctuation">,</span> <span class="token number">0x992EFF74L</span><span class="token punctuation">,</span> <span class="token number">0x3A6F6EABL</span><span class="token punctuation">,</span> <span class="token number">0xF4F8FD37L</span><span class="token punctuation">,</span>        <span class="token number">0xA812DC60L</span><span class="token punctuation">,</span> <span class="token number">0xA1EBDDF8L</span><span class="token punctuation">,</span> <span class="token number">0x991BE14CL</span><span class="token punctuation">,</span> <span class="token number">0xDB6E6B0DL</span><span class="token punctuation">,</span>        <span class="token number">0xC67B5510L</span><span class="token punctuation">,</span> <span class="token number">0x6D672C37L</span><span class="token punctuation">,</span> <span class="token number">0x2765D43BL</span><span class="token punctuation">,</span> <span class="token number">0xDCD0E804L</span><span class="token punctuation">,</span>        <span class="token number">0xF1290DC7L</span><span class="token punctuation">,</span> <span class="token number">0xCC00FFA3L</span><span class="token punctuation">,</span> <span class="token number">0xB5390F92L</span><span class="token punctuation">,</span> <span class="token number">0x690FED0BL</span><span class="token punctuation">,</span>        <span class="token number">0x667B9FFBL</span><span class="token punctuation">,</span> <span class="token number">0xCEDB7D9CL</span><span class="token punctuation">,</span> <span class="token number">0xA091CF0BL</span><span class="token punctuation">,</span> <span class="token number">0xD9155EA3L</span><span class="token punctuation">,</span>        <span class="token number">0xBB132F88L</span><span class="token punctuation">,</span> <span class="token number">0x515BAD24L</span><span class="token punctuation">,</span> <span class="token number">0x7B9479BFL</span><span class="token punctuation">,</span> <span class="token number">0x763BD6EBL</span><span class="token punctuation">,</span>        <span class="token number">0x37392EB3L</span><span class="token punctuation">,</span> <span class="token number">0xCC115979L</span><span class="token punctuation">,</span> <span class="token number">0x8026E297L</span><span class="token punctuation">,</span> <span class="token number">0xF42E312DL</span><span class="token punctuation">,</span>        <span class="token number">0x6842ADA7L</span><span class="token punctuation">,</span> <span class="token number">0xC66A2B3BL</span><span class="token punctuation">,</span> <span class="token number">0x12754CCCL</span><span class="token punctuation">,</span> <span class="token number">0x782EF11CL</span><span class="token punctuation">,</span>        <span class="token number">0x6A124237L</span><span class="token punctuation">,</span> <span class="token number">0xB79251E7L</span><span class="token punctuation">,</span> <span class="token number">0x06A1BBE6L</span><span class="token punctuation">,</span> <span class="token number">0x4BFB6350L</span><span class="token punctuation">,</span>        <span class="token number">0x1A6B1018L</span><span class="token punctuation">,</span> <span class="token number">0x11CAEDFAL</span><span class="token punctuation">,</span> <span class="token number">0x3D25BDD8L</span><span class="token punctuation">,</span> <span class="token number">0xE2E1C3C9L</span><span class="token punctuation">,</span>        <span class="token number">0x44421659L</span><span class="token punctuation">,</span> <span class="token number">0x0A121386L</span><span class="token punctuation">,</span> <span class="token number">0xD90CEC6EL</span><span class="token punctuation">,</span> <span class="token number">0xD5ABEA2AL</span><span class="token punctuation">,</span>        <span class="token number">0x64AF674EL</span><span class="token punctuation">,</span> <span class="token number">0xDA86A85FL</span><span class="token punctuation">,</span> <span class="token number">0xBEBFE988L</span><span class="token punctuation">,</span> <span class="token number">0x64E4C3FEL</span><span class="token punctuation">,</span>        <span class="token number">0x9DBC8057L</span><span class="token punctuation">,</span> <span class="token number">0xF0F7C086L</span><span class="token punctuation">,</span> <span class="token number">0x60787BF8L</span><span class="token punctuation">,</span> <span class="token number">0x6003604DL</span><span class="token punctuation">,</span>        <span class="token number">0xD1FD8346L</span><span class="token punctuation">,</span> <span class="token number">0xF6381FB0L</span><span class="token punctuation">,</span> <span class="token number">0x7745AE04L</span><span class="token punctuation">,</span> <span class="token number">0xD736FCCCL</span><span class="token punctuation">,</span>        <span class="token number">0x83426B33L</span><span class="token punctuation">,</span> <span class="token number">0xF01EAB71L</span><span class="token punctuation">,</span> <span class="token number">0xB0804187L</span><span class="token punctuation">,</span> <span class="token number">0x3C005E5FL</span><span class="token punctuation">,</span>        <span class="token number">0x77A057BEL</span><span class="token punctuation">,</span> <span class="token number">0xBDE8AE24L</span><span class="token punctuation">,</span> <span class="token number">0x55464299L</span><span class="token punctuation">,</span> <span class="token number">0xBF582E61L</span><span class="token punctuation">,</span>        <span class="token number">0x4E58F48FL</span><span class="token punctuation">,</span> <span class="token number">0xF2DDFDA2L</span><span class="token punctuation">,</span> <span class="token number">0xF474EF38L</span><span class="token punctuation">,</span> <span class="token number">0x8789BDC2L</span><span class="token punctuation">,</span>        <span class="token number">0x5366F9C3L</span><span class="token punctuation">,</span> <span class="token number">0xC8B38E74L</span><span class="token punctuation">,</span> <span class="token number">0xB475F255L</span><span class="token punctuation">,</span> <span class="token number">0x46FCD9B9L</span><span class="token punctuation">,</span>        <span class="token number">0x7AEB2661L</span><span class="token punctuation">,</span> <span class="token number">0x8B1DDF84L</span><span class="token punctuation">,</span> <span class="token number">0x846A0E79L</span><span class="token punctuation">,</span> <span class="token number">0x915F95E2L</span><span class="token punctuation">,</span>        <span class="token number">0x466E598EL</span><span class="token punctuation">,</span> <span class="token number">0x20B45770L</span><span class="token punctuation">,</span> <span class="token number">0x8CD55591L</span><span class="token punctuation">,</span> <span class="token number">0xC902DE4CL</span><span class="token punctuation">,</span>        <span class="token number">0xB90BACE1L</span><span class="token punctuation">,</span> <span class="token number">0xBB8205D0L</span><span class="token punctuation">,</span> <span class="token number">0x11A86248L</span><span class="token punctuation">,</span> <span class="token number">0x7574A99EL</span><span class="token punctuation">,</span>        <span class="token number">0xB77F19B6L</span><span class="token punctuation">,</span> <span class="token number">0xE0A9DC09L</span><span class="token punctuation">,</span> <span class="token number">0x662D09A1L</span><span class="token punctuation">,</span> <span class="token number">0xC4324633L</span><span class="token punctuation">,</span>        <span class="token number">0xE85A1F02L</span><span class="token punctuation">,</span> <span class="token number">0x09F0BE8CL</span><span class="token punctuation">,</span> <span class="token number">0x4A99A025L</span><span class="token punctuation">,</span> <span class="token number">0x1D6EFE10L</span><span class="token punctuation">,</span>        <span class="token number">0x1AB93D1DL</span><span class="token punctuation">,</span> <span class="token number">0x0BA5A4DFL</span><span class="token punctuation">,</span> <span class="token number">0xA186F20FL</span><span class="token punctuation">,</span> <span class="token number">0x2868F169L</span><span class="token punctuation">,</span>        <span class="token number">0xDCB7DA83L</span><span class="token punctuation">,</span> <span class="token number">0x573906FEL</span><span class="token punctuation">,</span> <span class="token number">0xA1E2CE9BL</span><span class="token punctuation">,</span> <span class="token number">0x4FCD7F52L</span><span class="token punctuation">,</span>        <span class="token number">0x50115E01L</span><span class="token punctuation">,</span> <span class="token number">0xA70683FAL</span><span class="token punctuation">,</span> <span class="token number">0xA002B5C4L</span><span class="token punctuation">,</span> <span class="token number">0x0DE6D027L</span><span class="token punctuation">,</span>        <span class="token number">0x9AF88C27L</span><span class="token punctuation">,</span> <span class="token number">0x773F8641L</span><span class="token punctuation">,</span> <span class="token number">0xC3604C06L</span><span class="token punctuation">,</span> <span class="token number">0x61A806B5L</span><span class="token punctuation">,</span>        <span class="token number">0xF0177A28L</span><span class="token punctuation">,</span> <span class="token number">0xC0F586E0L</span><span class="token punctuation">,</span> <span class="token number">0x006058AAL</span><span class="token punctuation">,</span> <span class="token number">0x30DC7D62L</span><span class="token punctuation">,</span>        <span class="token number">0x11E69ED7L</span><span class="token punctuation">,</span> <span class="token number">0x2338EA63L</span><span class="token punctuation">,</span> <span class="token number">0x53C2DD94L</span><span class="token punctuation">,</span> <span class="token number">0xC2C21634L</span><span class="token punctuation">,</span>        <span class="token number">0xBBCBEE56L</span><span class="token punctuation">,</span> <span class="token number">0x90BCB6DEL</span><span class="token punctuation">,</span> <span class="token number">0xEBFC7DA1L</span><span class="token punctuation">,</span> <span class="token number">0xCE591D76L</span><span class="token punctuation">,</span>        <span class="token number">0x6F05E409L</span><span class="token punctuation">,</span> <span class="token number">0x4B7C0188L</span><span class="token punctuation">,</span> <span class="token number">0x39720A3DL</span><span class="token punctuation">,</span> <span class="token number">0x7C927C24L</span><span class="token punctuation">,</span>        <span class="token number">0x86E3725FL</span><span class="token punctuation">,</span> <span class="token number">0x724D9DB9L</span><span class="token punctuation">,</span> <span class="token number">0x1AC15BB4L</span><span class="token punctuation">,</span> <span class="token number">0xD39EB8FCL</span><span class="token punctuation">,</span>        <span class="token number">0xED545578L</span><span class="token punctuation">,</span> <span class="token number">0x08FCA5B5L</span><span class="token punctuation">,</span> <span class="token number">0xD83D7CD3L</span><span class="token punctuation">,</span> <span class="token number">0x4DAD0FC4L</span><span class="token punctuation">,</span>        <span class="token number">0x1E50EF5EL</span><span class="token punctuation">,</span> <span class="token number">0xB161E6F8L</span><span class="token punctuation">,</span> <span class="token number">0xA28514D9L</span><span class="token punctuation">,</span> <span class="token number">0x6C51133CL</span><span class="token punctuation">,</span>        <span class="token number">0x6FD5C7E7L</span><span class="token punctuation">,</span> <span class="token number">0x56E14EC4L</span><span class="token punctuation">,</span> <span class="token number">0x362ABFCEL</span><span class="token punctuation">,</span> <span class="token number">0xDDC6C837L</span><span class="token punctuation">,</span>        <span class="token number">0xD79A3234L</span><span class="token punctuation">,</span> <span class="token number">0x92638212L</span><span class="token punctuation">,</span> <span class="token number">0x670EFA8EL</span><span class="token punctuation">,</span> <span class="token number">0x406000E0L</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>   <span class="token number">0x3A39CE37L</span><span class="token punctuation">,</span> <span class="token number">0xD3FAF5CFL</span><span class="token punctuation">,</span> <span class="token number">0xABC27737L</span><span class="token punctuation">,</span> <span class="token number">0x5AC52D1BL</span><span class="token punctuation">,</span>        <span class="token number">0x5CB0679EL</span><span class="token punctuation">,</span> <span class="token number">0x4FA33742L</span><span class="token punctuation">,</span> <span class="token number">0xD3822740L</span><span class="token punctuation">,</span> <span class="token number">0x99BC9BBEL</span><span class="token punctuation">,</span>        <span class="token number">0xD5118E9DL</span><span class="token punctuation">,</span> <span class="token number">0xBF0F7315L</span><span class="token punctuation">,</span> <span class="token number">0xD62D1C7EL</span><span class="token punctuation">,</span> <span class="token number">0xC700C47BL</span><span class="token punctuation">,</span>        <span class="token number">0xB78C1B6BL</span><span class="token punctuation">,</span> <span class="token number">0x21A19045L</span><span class="token punctuation">,</span> <span class="token number">0xB26EB1BEL</span><span class="token punctuation">,</span> <span class="token number">0x6A366EB4L</span><span class="token punctuation">,</span>        <span class="token number">0x5748AB2FL</span><span class="token punctuation">,</span> <span class="token number">0xBC946E79L</span><span class="token punctuation">,</span> <span class="token number">0xC6A376D2L</span><span class="token punctuation">,</span> <span class="token number">0x6549C2C8L</span><span class="token punctuation">,</span>        <span class="token number">0x530FF8EEL</span><span class="token punctuation">,</span> <span class="token number">0x468DDE7DL</span><span class="token punctuation">,</span> <span class="token number">0xD5730A1DL</span><span class="token punctuation">,</span> <span class="token number">0x4CD04DC6L</span><span class="token punctuation">,</span>        <span class="token number">0x2939BBDBL</span><span class="token punctuation">,</span> <span class="token number">0xA9BA4650L</span><span class="token punctuation">,</span> <span class="token number">0xAC9526E8L</span><span class="token punctuation">,</span> <span class="token number">0xBE5EE304L</span><span class="token punctuation">,</span>        <span class="token number">0xA1FAD5F0L</span><span class="token punctuation">,</span> <span class="token number">0x6A2D519AL</span><span class="token punctuation">,</span> <span class="token number">0x63EF8CE2L</span><span class="token punctuation">,</span> <span class="token number">0x9A86EE22L</span><span class="token punctuation">,</span>        <span class="token number">0xC089C2B8L</span><span class="token punctuation">,</span> <span class="token number">0x43242EF6L</span><span class="token punctuation">,</span> <span class="token number">0xA51E03AAL</span><span class="token punctuation">,</span> <span class="token number">0x9CF2D0A4L</span><span class="token punctuation">,</span>        <span class="token number">0x83C061BAL</span><span class="token punctuation">,</span> <span class="token number">0x9BE96A4DL</span><span class="token punctuation">,</span> <span class="token number">0x8FE51550L</span><span class="token punctuation">,</span> <span class="token number">0xBA645BD6L</span><span class="token punctuation">,</span>        <span class="token number">0x2826A2F9L</span><span class="token punctuation">,</span> <span class="token number">0xA73A3AE1L</span><span class="token punctuation">,</span> <span class="token number">0x4BA99586L</span><span class="token punctuation">,</span> <span class="token number">0xEF5562E9L</span><span class="token punctuation">,</span>        <span class="token number">0xC72FEFD3L</span><span class="token punctuation">,</span> <span class="token number">0xF752F7DAL</span><span class="token punctuation">,</span> <span class="token number">0x3F046F69L</span><span class="token punctuation">,</span> <span class="token number">0x77FA0A59L</span><span class="token punctuation">,</span>        <span class="token number">0x80E4A915L</span><span class="token punctuation">,</span> <span class="token number">0x87B08601L</span><span class="token punctuation">,</span> <span class="token number">0x9B09E6ADL</span><span class="token punctuation">,</span> <span class="token number">0x3B3EE593L</span><span class="token punctuation">,</span>        <span class="token number">0xE990FD5AL</span><span class="token punctuation">,</span> <span class="token number">0x9E34D797L</span><span class="token punctuation">,</span> <span class="token number">0x2CF0B7D9L</span><span class="token punctuation">,</span> <span class="token number">0x022B8B51L</span><span class="token punctuation">,</span>        <span class="token number">0x96D5AC3AL</span><span class="token punctuation">,</span> <span class="token number">0x017DA67DL</span><span class="token punctuation">,</span> <span class="token number">0xD1CF3ED6L</span><span class="token punctuation">,</span> <span class="token number">0x7C7D2D28L</span><span class="token punctuation">,</span>        <span class="token number">0x1F9F25CFL</span><span class="token punctuation">,</span> <span class="token number">0xADF2B89BL</span><span class="token punctuation">,</span> <span class="token number">0x5AD6B472L</span><span class="token punctuation">,</span> <span class="token number">0x5A88F54CL</span><span class="token punctuation">,</span>        <span class="token number">0xE029AC71L</span><span class="token punctuation">,</span> <span class="token number">0xE019A5E6L</span><span class="token punctuation">,</span> <span class="token number">0x47B0ACFDL</span><span class="token punctuation">,</span> <span class="token number">0xED93FA9BL</span><span class="token punctuation">,</span>        <span class="token number">0xE8D3C48DL</span><span class="token punctuation">,</span> <span class="token number">0x283B57CCL</span><span class="token punctuation">,</span> <span class="token number">0xF8D56629L</span><span class="token punctuation">,</span> <span class="token number">0x79132E28L</span><span class="token punctuation">,</span>        <span class="token number">0x785F0191L</span><span class="token punctuation">,</span> <span class="token number">0xED756055L</span><span class="token punctuation">,</span> <span class="token number">0xF7960E44L</span><span class="token punctuation">,</span> <span class="token number">0xE3D35E8CL</span><span class="token punctuation">,</span>        <span class="token number">0x15056DD4L</span><span class="token punctuation">,</span> <span class="token number">0x88F46DBAL</span><span class="token punctuation">,</span> <span class="token number">0x03A16125L</span><span class="token punctuation">,</span> <span class="token number">0x0564F0BDL</span><span class="token punctuation">,</span>        <span class="token number">0xC3EB9E15L</span><span class="token punctuation">,</span> <span class="token number">0x3C9057A2L</span><span class="token punctuation">,</span> <span class="token number">0x97271AECL</span><span class="token punctuation">,</span> <span class="token number">0xA93A072AL</span><span class="token punctuation">,</span>        <span class="token number">0x1B3F6D9BL</span><span class="token punctuation">,</span> <span class="token number">0x1E6321F5L</span><span class="token punctuation">,</span> <span class="token number">0xF59C66FBL</span><span class="token punctuation">,</span> <span class="token number">0x26DCF319L</span><span class="token punctuation">,</span>        <span class="token number">0x7533D928L</span><span class="token punctuation">,</span> <span class="token number">0xB155FDF5L</span><span class="token punctuation">,</span> <span class="token number">0x03563482L</span><span class="token punctuation">,</span> <span class="token number">0x8ABA3CBBL</span><span class="token punctuation">,</span>        <span class="token number">0x28517711L</span><span class="token punctuation">,</span> <span class="token number">0xC20AD9F8L</span><span class="token punctuation">,</span> <span class="token number">0xABCC5167L</span><span class="token punctuation">,</span> <span class="token number">0xCCAD925FL</span><span class="token punctuation">,</span>        <span class="token number">0x4DE81751L</span><span class="token punctuation">,</span> <span class="token number">0x3830DC8EL</span><span class="token punctuation">,</span> <span class="token number">0x379D5862L</span><span class="token punctuation">,</span> <span class="token number">0x9320F991L</span><span class="token punctuation">,</span>        <span class="token number">0xEA7A90C2L</span><span class="token punctuation">,</span> <span class="token number">0xFB3E7BCEL</span><span class="token punctuation">,</span> <span class="token number">0x5121CE64L</span><span class="token punctuation">,</span> <span class="token number">0x774FBE32L</span><span class="token punctuation">,</span>        <span class="token number">0xA8B6E37EL</span><span class="token punctuation">,</span> <span class="token number">0xC3293D46L</span><span class="token punctuation">,</span> <span class="token number">0x48DE5369L</span><span class="token punctuation">,</span> <span class="token number">0x6413E680L</span><span class="token punctuation">,</span>        <span class="token number">0xA2AE0810L</span><span class="token punctuation">,</span> <span class="token number">0xDD6DB224L</span><span class="token punctuation">,</span> <span class="token number">0x69852DFDL</span><span class="token punctuation">,</span> <span class="token number">0x09072166L</span><span class="token punctuation">,</span>        <span class="token number">0xB39A460AL</span><span class="token punctuation">,</span> <span class="token number">0x6445C0DDL</span><span class="token punctuation">,</span> <span class="token number">0x586CDECFL</span><span class="token punctuation">,</span> <span class="token number">0x1C20C8AEL</span><span class="token punctuation">,</span>        <span class="token number">0x5BBEF7DDL</span><span class="token punctuation">,</span> <span class="token number">0x1B588D40L</span><span class="token punctuation">,</span> <span class="token number">0xCCD2017FL</span><span class="token punctuation">,</span> <span class="token number">0x6BB4E3BBL</span><span class="token punctuation">,</span>        <span class="token number">0xDDA26A7EL</span><span class="token punctuation">,</span> <span class="token number">0x3A59FF45L</span><span class="token punctuation">,</span> <span class="token number">0x3E350A44L</span><span class="token punctuation">,</span> <span class="token number">0xBCB4CDD5L</span><span class="token punctuation">,</span>        <span class="token number">0x72EACEA8L</span><span class="token punctuation">,</span> <span class="token number">0xFA6484BBL</span><span class="token punctuation">,</span> <span class="token number">0x8D6612AEL</span><span class="token punctuation">,</span> <span class="token number">0xBF3C6F47L</span><span class="token punctuation">,</span>        <span class="token number">0xD29BE463L</span><span class="token punctuation">,</span> <span class="token number">0x542F5D9EL</span><span class="token punctuation">,</span> <span class="token number">0xAEC2771BL</span><span class="token punctuation">,</span> <span class="token number">0xF64E6370L</span><span class="token punctuation">,</span>        <span class="token number">0x740E0D8DL</span><span class="token punctuation">,</span> <span class="token number">0xE75B1357L</span><span class="token punctuation">,</span> <span class="token number">0xF8721671L</span><span class="token punctuation">,</span> <span class="token number">0xAF537D5DL</span><span class="token punctuation">,</span>        <span class="token number">0x4040CB08L</span><span class="token punctuation">,</span> <span class="token number">0x4EB4E2CCL</span><span class="token punctuation">,</span> <span class="token number">0x34D2466AL</span><span class="token punctuation">,</span> <span class="token number">0x0115AF84L</span><span class="token punctuation">,</span>        <span class="token number">0xE1B00428L</span><span class="token punctuation">,</span> <span class="token number">0x95983A1DL</span><span class="token punctuation">,</span> <span class="token number">0x06B89FB4L</span><span class="token punctuation">,</span> <span class="token number">0xCE6EA048L</span><span class="token punctuation">,</span>        <span class="token number">0x6F3F3B82L</span><span class="token punctuation">,</span> <span class="token number">0x3520AB82L</span><span class="token punctuation">,</span> <span class="token number">0x011A1D4BL</span><span class="token punctuation">,</span> <span class="token number">0x277227F8L</span><span class="token punctuation">,</span>        <span class="token number">0x611560B1L</span><span class="token punctuation">,</span> <span class="token number">0xE7933FDCL</span><span class="token punctuation">,</span> <span class="token number">0xBB3A792BL</span><span class="token punctuation">,</span> <span class="token number">0x344525BDL</span><span class="token punctuation">,</span>        <span class="token number">0xA08839E1L</span><span class="token punctuation">,</span> <span class="token number">0x51CE794BL</span><span class="token punctuation">,</span> <span class="token number">0x2F32C9B7L</span><span class="token punctuation">,</span> <span class="token number">0xA01FBAC9L</span><span class="token punctuation">,</span>        <span class="token number">0xE01CC87EL</span><span class="token punctuation">,</span> <span class="token number">0xBCC7D1F6L</span><span class="token punctuation">,</span> <span class="token number">0xCF0111C3L</span><span class="token punctuation">,</span> <span class="token number">0xA1E8AAC7L</span><span class="token punctuation">,</span>        <span class="token number">0x1A908749L</span><span class="token punctuation">,</span> <span class="token number">0xD44FBD9AL</span><span class="token punctuation">,</span> <span class="token number">0xD0DADECBL</span><span class="token punctuation">,</span> <span class="token number">0xD50ADA38L</span><span class="token punctuation">,</span>        <span class="token number">0x0339C32AL</span><span class="token punctuation">,</span> <span class="token number">0xC6913667L</span><span class="token punctuation">,</span> <span class="token number">0x8DF9317CL</span><span class="token punctuation">,</span> <span class="token number">0xE0B12B4FL</span><span class="token punctuation">,</span>        <span class="token number">0xF79E59B7L</span><span class="token punctuation">,</span> <span class="token number">0x43F5BB3AL</span><span class="token punctuation">,</span> <span class="token number">0xF2D519FFL</span><span class="token punctuation">,</span> <span class="token number">0x27D9459CL</span><span class="token punctuation">,</span>        <span class="token number">0xBF97222CL</span><span class="token punctuation">,</span> <span class="token number">0x15E6FC2AL</span><span class="token punctuation">,</span> <span class="token number">0x0F91FC71L</span><span class="token punctuation">,</span> <span class="token number">0x9B941525L</span><span class="token punctuation">,</span>        <span class="token number">0xFAE59361L</span><span class="token punctuation">,</span> <span class="token number">0xCEB69CEBL</span><span class="token punctuation">,</span> <span class="token number">0xC2A86459L</span><span class="token punctuation">,</span> <span class="token number">0x12BAA8D1L</span><span class="token punctuation">,</span>        <span class="token number">0xB6C1075EL</span><span class="token punctuation">,</span> <span class="token number">0xE3056A0CL</span><span class="token punctuation">,</span> <span class="token number">0x10D25065L</span><span class="token punctuation">,</span> <span class="token number">0xCB03A442L</span><span class="token punctuation">,</span>        <span class="token number">0xE0EC6E0EL</span><span class="token punctuation">,</span> <span class="token number">0x1698DB3BL</span><span class="token punctuation">,</span> <span class="token number">0x4C98A0BEL</span><span class="token punctuation">,</span> <span class="token number">0x3278E964L</span><span class="token punctuation">,</span>        <span class="token number">0x9F1F9532L</span><span class="token punctuation">,</span> <span class="token number">0xE0D392DFL</span><span class="token punctuation">,</span> <span class="token number">0xD3A0342BL</span><span class="token punctuation">,</span> <span class="token number">0x8971F21EL</span><span class="token punctuation">,</span>        <span class="token number">0x1B0A7441L</span><span class="token punctuation">,</span> <span class="token number">0x4BA3348CL</span><span class="token punctuation">,</span> <span class="token number">0xC5BE7120L</span><span class="token punctuation">,</span> <span class="token number">0xC37632D8L</span><span class="token punctuation">,</span>        <span class="token number">0xDF359F8DL</span><span class="token punctuation">,</span> <span class="token number">0x9B992F2EL</span><span class="token punctuation">,</span> <span class="token number">0xE60B6F47L</span><span class="token punctuation">,</span> <span class="token number">0x0FE3F11DL</span><span class="token punctuation">,</span>        <span class="token number">0xE54CDA54L</span><span class="token punctuation">,</span> <span class="token number">0x1EDAD891L</span><span class="token punctuation">,</span> <span class="token number">0xCE6279CFL</span><span class="token punctuation">,</span> <span class="token number">0xCD3E7E6FL</span><span class="token punctuation">,</span>        <span class="token number">0x1618B166L</span><span class="token punctuation">,</span> <span class="token number">0xFD2C1D05L</span><span class="token punctuation">,</span> <span class="token number">0x848FD2C5L</span><span class="token punctuation">,</span> <span class="token number">0xF6FB2299L</span><span class="token punctuation">,</span>        <span class="token number">0xF523F357L</span><span class="token punctuation">,</span> <span class="token number">0xA6327623L</span><span class="token punctuation">,</span> <span class="token number">0x93A83531L</span><span class="token punctuation">,</span> <span class="token number">0x56CCCD02L</span><span class="token punctuation">,</span>        <span class="token number">0xACF08162L</span><span class="token punctuation">,</span> <span class="token number">0x5A75EBB5L</span><span class="token punctuation">,</span> <span class="token number">0x6E163697L</span><span class="token punctuation">,</span> <span class="token number">0x88D273CCL</span><span class="token punctuation">,</span>        <span class="token number">0xDE966292L</span><span class="token punctuation">,</span> <span class="token number">0x81B949D0L</span><span class="token punctuation">,</span> <span class="token number">0x4C50901BL</span><span class="token punctuation">,</span> <span class="token number">0x71C65614L</span><span class="token punctuation">,</span>        <span class="token number">0xE6C6C7BDL</span><span class="token punctuation">,</span> <span class="token number">0x327A140AL</span><span class="token punctuation">,</span> <span class="token number">0x45E1D006L</span><span class="token punctuation">,</span> <span class="token number">0xC3F27B9AL</span><span class="token punctuation">,</span>        <span class="token number">0xC9AA53FDL</span><span class="token punctuation">,</span> <span class="token number">0x62A80F00L</span><span class="token punctuation">,</span> <span class="token number">0xBB25BFE2L</span><span class="token punctuation">,</span> <span class="token number">0x35BDD2F6L</span><span class="token punctuation">,</span>        <span class="token number">0x71126905L</span><span class="token punctuation">,</span> <span class="token number">0xB2040222L</span><span class="token punctuation">,</span> <span class="token number">0xB6CBCF7CL</span><span class="token punctuation">,</span> <span class="token number">0xCD769C2BL</span><span class="token punctuation">,</span>        <span class="token number">0x53113EC0L</span><span class="token punctuation">,</span> <span class="token number">0x1640E3D3L</span><span class="token punctuation">,</span> <span class="token number">0x38ABBD60L</span><span class="token punctuation">,</span> <span class="token number">0x2547ADF0L</span><span class="token punctuation">,</span>        <span class="token number">0xBA38209CL</span><span class="token punctuation">,</span> <span class="token number">0xF746CE76L</span><span class="token punctuation">,</span> <span class="token number">0x77AFA1C5L</span><span class="token punctuation">,</span> <span class="token number">0x20756060L</span><span class="token punctuation">,</span>        <span class="token number">0x85CBFE4EL</span><span class="token punctuation">,</span> <span class="token number">0x8AE88DD8L</span><span class="token punctuation">,</span> <span class="token number">0x7AAAF9B0L</span><span class="token punctuation">,</span> <span class="token number">0x4CF9AA7EL</span><span class="token punctuation">,</span>        <span class="token number">0x1948C25CL</span><span class="token punctuation">,</span> <span class="token number">0x02FB8A8CL</span><span class="token punctuation">,</span> <span class="token number">0x01C36AE4L</span><span class="token punctuation">,</span> <span class="token number">0xD6EBE1F9L</span><span class="token punctuation">,</span>        <span class="token number">0x90D4F869L</span><span class="token punctuation">,</span> <span class="token number">0xA65CDEA0L</span><span class="token punctuation">,</span> <span class="token number">0x3F09252DL</span><span class="token punctuation">,</span> <span class="token number">0xC208E69FL</span><span class="token punctuation">,</span>        <span class="token number">0xB74E6132L</span><span class="token punctuation">,</span> <span class="token number">0xCE77E25BL</span><span class="token punctuation">,</span> <span class="token number">0x578FDFE3L</span><span class="token punctuation">,</span> <span class="token number">0x3AC372E6L</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">N</span> <span class="token expression"><span class="token number">16</span></span></span><span class="token comment">//定义初始化需要用到的加密结构</span><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_BLOWFISH_CTX</span><span class="token punctuation">&#123;</span>    <span class="token comment">//定义初始化的pbox 以及 sbox 在程序中进行初始化</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> pbox<span class="token punctuation">[</span>N <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//总共18</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> sbox<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>BLOWFISH_CTX<span class="token punctuation">,</span> <span class="token operator">*</span> PBLOWFISH_CTX<span class="token punctuation">;</span><span class="token comment">/*初始化函数 此函数功能如下1.接受key 与 keylen参数（当然keylen）可以自己计算2.初始化sbox 将全局的sbox的内容复制到CTX中的sbox中3.初始化pbox pbox的初始化方法如下    1.迭代18论。然后每一轮都设置CTX的pbox    2.CTX.pbox需要使用全局pbox ^ data    3.data是一个四字节整数。其中存储的就是key的四个字节。      key = "12345678abc"      每一轮中 data = "1234"               data = "5678"               data = "abc1" //注意这里当超出keylen的时候。 data获取的key要从0开始               。。。。*/</span>bool <span class="token function">BlowFishInit</span><span class="token punctuation">(</span>BLOWFISH_CTX<span class="token operator">*</span> blowCtx<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span> key<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> keylen<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/*F函数F函数是将一个32位数分别进行拆分。 拆分为四组。 每一组都作为sbox的索引值然后进行下列运算(（s1[a] + s2[b]) ^ s3[c]) + s4[d]在编程中sbox是数组是从零开始。 所以s1 对应s[0]  s2对应s[1]在编程中总结下公式：temap = s[0][a] + s[1][b]teamp = temp ^ s[2][c]'temp =  temp + s[3][d]简单的记住就是 ((a+b) ^ c)+d;当然每个都对应下标为 0 1 2 3  s[0][a] s[1][b] s[2][c] s[3][d]最后返回结果值 return temp*/</span><span class="token keyword">static</span> <span class="token keyword">unsigned</span> <span class="token keyword">long</span> <span class="token function">F</span><span class="token punctuation">(</span>BLOWFISH_CTX<span class="token operator">*</span> ctx<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">long</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//signed int F(PBLOWFISH_CTX blowCtx,unsigned int Data);</span><span class="token comment">/*加密函数：首次用在初始化中是对一个64位0进行加密。一次加密八个字节核心思想为 加密左边与右边数据左边数据直接 ^ PBOX右边数据 = 右边数据 ^ f(左边数据）然后进行交换。以上是16轮的交换剩下一轮则是左边 = 左边^PBOX[N+1]右边 = 右边^pbox[N]最后设置相关数值*/</span><span class="token keyword">void</span> <span class="token function">BlowFish_Encry</span><span class="token punctuation">(</span>PBLOWFISH_CTX blowCtx<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token operator">*</span> left<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token operator">*</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/*跟加密一样。只不过结果相反步骤如下：首先遍历从最后一轮开始逐次递减最后一轮数据 右边= 右边^PBOX[1] 左边数据 = 左边数据 ^pbox[0]*/</span><span class="token keyword">void</span> <span class="token function">BlowFish_Decrypt</span><span class="token punctuation">(</span>PBLOWFISH_CTX blowCtx<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token operator">*</span> left<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token operator">*</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>主函数（包含rc4和twofish）</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"blowfish.h"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string></span></span>using namespace std<span class="token punctuation">;</span>bool <span class="token function">BlowFishInit</span><span class="token punctuation">(</span>BLOWFISH_CTX<span class="token operator">*</span> blowCtx<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span> key<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> keylen<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//设置传入的CTX中的SBOX值</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> Row <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> Row <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> Row<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> Col <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> Col <span class="token operator">&lt;</span> <span class="token number">256</span><span class="token punctuation">;</span> Col<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            blowCtx<span class="token operator">-></span>sbox<span class="token punctuation">[</span>Row<span class="token punctuation">]</span><span class="token punctuation">[</span>Col<span class="token punctuation">]</span> <span class="token operator">=</span> ORIG_S<span class="token punctuation">[</span>Row<span class="token punctuation">]</span><span class="token punctuation">[</span>Col<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*    设置pbox    1.循环18轮    2.每轮都设置ctx.pbox值与data ^    3.data = *(DWORD*)key[0] key[1].....    */</span>    <span class="token keyword">int</span> KeyIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> N <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">unsigned</span> <span class="token keyword">int</span> data <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment">//填充data 将key的字符设置到data当中</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token comment">//通过移位设置每个字符</span>            data <span class="token operator">=</span> <span class="token punctuation">(</span>data <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">|</span> key<span class="token punctuation">[</span>KeyIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>            KeyIndex<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token comment">//如果超出了key长度 那么key要从开始</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>KeyIndex <span class="token operator">>=</span> keylen<span class="token punctuation">)</span>                KeyIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//否则不满足</span>        blowCtx<span class="token operator">-></span>pbox<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> ORIG_P<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">^</span> data<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//对一个64位0 进行加密。加密结果的输出设置到pbox[i]与pbox[i+1]中</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> Data1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> Data2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> N <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">BlowFish_Encry</span><span class="token punctuation">(</span>blowCtx<span class="token punctuation">,</span> <span class="token operator">&amp;</span>Data1<span class="token punctuation">,</span> <span class="token operator">&amp;</span>Data2<span class="token punctuation">)</span><span class="token punctuation">;</span>        blowCtx<span class="token operator">-></span>pbox<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Data1<span class="token punctuation">;</span>        blowCtx<span class="token operator">-></span>pbox<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> Data2<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//初始化Sbox</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">256</span><span class="token punctuation">;</span> j <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token function">BlowFish_Encry</span><span class="token punctuation">(</span>blowCtx<span class="token punctuation">,</span> <span class="token operator">&amp;</span>Data1<span class="token punctuation">,</span> <span class="token operator">&amp;</span>Data2<span class="token punctuation">)</span><span class="token punctuation">;</span>            blowCtx<span class="token operator">-></span>sbox<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> Data1<span class="token punctuation">;</span>            blowCtx<span class="token operator">-></span>sbox<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> Data2<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> true<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//unsigned int F(PBLOWFISH_CTX blowCtx, unsigned int Data)</span><span class="token comment">//&#123;</span><span class="token comment">//</span><span class="token comment">//    unsigned int a, b, c, d;</span><span class="token comment">//    /*</span><span class="token comment">//    利用位运算 取出下标值</span><span class="token comment">//    */</span><span class="token comment">//    </span><span class="token comment">//   a = (Data  >> 24) &amp; 0xFF;</span><span class="token comment">//   b = (Data >> 16) &amp; 0xFF;</span><span class="token comment">//   c = (Data >> 8) &amp; 0xFf;</span><span class="token comment">//   d = Data &amp; 0xFF;</span><span class="token comment">//   </span><span class="token comment">//</span><span class="token comment">//    int TempValue = blowCtx->sbox[0][a] + blowCtx->sbox[1][b];</span><span class="token comment">//    TempValue = TempValue ^ blowCtx->sbox[2][c];</span><span class="token comment">//    TempValue = TempValue + blowCtx->sbox[3][d];</span><span class="token comment">//    //公式 ((a+b)^c)+d</span><span class="token comment">//    return TempValue;</span><span class="token comment">//&#125;</span><span class="token keyword">static</span> <span class="token keyword">unsigned</span> <span class="token keyword">long</span> <span class="token function">F</span><span class="token punctuation">(</span>BLOWFISH_CTX<span class="token operator">*</span> ctx<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">long</span> x<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">short</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">long</span>  y<span class="token punctuation">;</span>    <span class="token comment">/* d = (unsigned short)(x &amp; 0xFF);     x >>= 8;     c = (unsigned short)(x &amp; 0xFF);     x >>= 8;     b = (unsigned short)(x &amp; 0xFF);     x >>= 8;     a = (unsigned short)(x &amp; 0xFF);     //都可以使用     */</span>    a <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">>></span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>    b <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">>></span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>    c <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">>></span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFf</span><span class="token punctuation">;</span>    d <span class="token operator">=</span> x <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>    y <span class="token operator">=</span> ctx<span class="token operator">-></span>sbox<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">+</span> ctx<span class="token operator">-></span>sbox<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token punctuation">;</span>    y <span class="token operator">=</span> y <span class="token operator">^</span> ctx<span class="token operator">-></span>sbox<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">;</span>    y <span class="token operator">=</span> y <span class="token operator">+</span> ctx<span class="token operator">-></span>sbox<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span>d<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> y<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">BlowFish_Encry</span><span class="token punctuation">(</span>PBLOWFISH_CTX blowCtx<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token operator">*</span> left<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token operator">*</span> right<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">long</span>  Xl<span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">long</span>  Xr<span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">long</span>  temp<span class="token punctuation">;</span>    <span class="token keyword">short</span>       i<span class="token punctuation">;</span>    <span class="token comment">//加密部分首先将其分为left跟right两组。 每一组分别32位</span>    Xl <span class="token operator">=</span> <span class="token operator">*</span>left<span class="token punctuation">;</span>    Xr <span class="token operator">=</span> <span class="token operator">*</span>right<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> N<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        Xl <span class="token operator">=</span> Xl <span class="token operator">^</span> blowCtx<span class="token operator">-></span>pbox<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        Xr <span class="token operator">=</span> <span class="token function">F</span><span class="token punctuation">(</span>blowCtx<span class="token punctuation">,</span> Xl<span class="token punctuation">)</span> <span class="token operator">^</span> Xr<span class="token punctuation">;</span>        temp <span class="token operator">=</span> Xl<span class="token punctuation">;</span>        Xl <span class="token operator">=</span> Xr<span class="token punctuation">;</span><span class="token comment">//交换左右的值。 l = R r= l 继续下一轮循环。总共16轮</span>        Xr <span class="token operator">=</span> temp<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    temp <span class="token operator">=</span> Xl<span class="token punctuation">;</span>    Xl <span class="token operator">=</span> Xr<span class="token punctuation">;</span>                          <span class="token comment">//16轮完毕之后交换变量</span>    Xr <span class="token operator">=</span> temp<span class="token punctuation">;</span>    Xr <span class="token operator">=</span> Xr <span class="token operator">^</span> blowCtx<span class="token operator">-></span>pbox<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>              <span class="token comment">//最后进行一次疑或</span>    Xl <span class="token operator">=</span> Xl <span class="token operator">^</span> blowCtx<span class="token operator">-></span>pbox<span class="token punctuation">[</span>N <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token operator">*</span>left <span class="token operator">=</span> Xl<span class="token punctuation">;</span>    <span class="token operator">*</span>right <span class="token operator">=</span> Xr<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">BlowFish_Decrypt</span><span class="token punctuation">(</span>PBLOWFISH_CTX blowCtx<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token operator">*</span> left<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token operator">*</span> right<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> Xl <span class="token operator">=</span> <span class="token operator">*</span>left<span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> Xr <span class="token operator">=</span> <span class="token operator">*</span>right<span class="token punctuation">;</span>    <span class="token comment">//倒着循环</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> N <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token operator">--</span>i<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        Xl <span class="token operator">=</span> Xl <span class="token operator">^</span> blowCtx<span class="token operator">-></span>pbox<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        Xr <span class="token operator">=</span> Xr <span class="token operator">^</span> <span class="token function">F</span><span class="token punctuation">(</span>blowCtx<span class="token punctuation">,</span> Xl<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//继续左右交换</span>        <span class="token keyword">unsigned</span> <span class="token keyword">int</span> temp <span class="token operator">=</span> Xl<span class="token punctuation">;</span>        Xl <span class="token operator">=</span> Xr<span class="token punctuation">;</span>        Xr <span class="token operator">=</span> temp<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//最后一轮继续交换</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> temp <span class="token operator">=</span> Xl<span class="token punctuation">;</span>    Xl <span class="token operator">=</span> Xr<span class="token punctuation">;</span>    Xr <span class="token operator">=</span> temp<span class="token punctuation">;</span>    <span class="token comment">//返还原</span>    Xr <span class="token operator">=</span> Xr <span class="token operator">^</span> blowCtx<span class="token operator">-></span>pbox<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    Xl <span class="token operator">=</span> Xl <span class="token operator">^</span> blowCtx<span class="token operator">-></span>pbox<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">//设置变量返回</span>    <span class="token operator">*</span>left <span class="token operator">=</span> Xl<span class="token punctuation">;</span>    <span class="token operator">*</span>right <span class="token operator">=</span> Xr<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">rc4_init</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span> s<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span> key<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">long</span> Len_k<span class="token punctuation">)</span> <span class="token comment">//初始化函数</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> k<span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> tmp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">256</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>        k<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> key<span class="token punctuation">[</span>i <span class="token operator">%</span> Len_k<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">256</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        j <span class="token operator">=</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> k<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span><span class="token punctuation">;</span>        tmp <span class="token operator">=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//交换s[i]和s[j]</span>        s<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/*RC4加解密函数unsigned char* Data     加解密的数据unsigned long Len_D     加解密数据的长度unsigned char* key      密钥unsigned long Len_k     密钥长度*/</span><span class="token keyword">void</span> <span class="token function">rc4_crypt</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span> Data<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">long</span> Len_D<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span> key<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">long</span> Len_k<span class="token punctuation">)</span> <span class="token comment">//加解密</span><span class="token punctuation">&#123;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> s<span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token function">rc4_init</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> key<span class="token punctuation">,</span> Len_k<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">long</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> tmp<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> Len_D<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        i <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span><span class="token punctuation">;</span>        j <span class="token operator">=</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span><span class="token punctuation">;</span>        tmp <span class="token operator">=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//交换s[x]和s[y]</span>        s<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>        t <span class="token operator">=</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span><span class="token punctuation">;</span>        Data<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">^=</span> s<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> data<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">0xE8</span><span class="token punctuation">,</span> <span class="token number">0xB2</span><span class="token punctuation">,</span> <span class="token number">0xBE</span><span class="token punctuation">,</span> <span class="token number">0xC7</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x8C</span><span class="token punctuation">,</span> <span class="token number">0xB1</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x7A</span><span class="token punctuation">,</span><span class="token number">0xB8</span><span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">,</span> <span class="token number">0x17</span><span class="token punctuation">,</span> <span class="token number">0x78</span><span class="token punctuation">,</span> <span class="token number">0x34</span><span class="token punctuation">,</span> <span class="token number">0x91</span><span class="token punctuation">,</span> <span class="token number">0x7E</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x45</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span>      <span class="token number">0x6A</span><span class="token punctuation">,</span> <span class="token number">0xFD</span><span class="token punctuation">,</span> <span class="token number">0xE9</span><span class="token punctuation">,</span> <span class="token number">0xE4</span><span class="token punctuation">,</span> <span class="token number">0x94</span><span class="token punctuation">,</span> <span class="token number">0xCD</span><span class="token punctuation">,</span> <span class="token number">0x84</span><span class="token punctuation">,</span> <span class="token number">0x7A</span><span class="token punctuation">,</span> <span class="token number">0x79</span><span class="token punctuation">,</span> <span class="token number">0xD5</span><span class="token punctuation">,</span><span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x1E</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span> key <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token string">"IgTheShy"</span><span class="token punctuation">;</span>    <span class="token function">rc4_crypt</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> <span class="token punctuation">)</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">size_t</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        data<span class="token punctuation">[</span>i<span class="token punctuation">]</span>  <span class="token operator">=</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span>i<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//小端序把密文拿出来</span>    <span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">0x9e316283</span><span class="token punctuation">,</span><span class="token number">0x4d1e7b82</span><span class="token punctuation">,</span><span class="token number">0x877602a3</span><span class="token punctuation">,</span><span class="token number">0xa5b24d06</span><span class="token punctuation">,</span><span class="token number">0x18369bcf</span><span class="token punctuation">,</span><span class="token number">0xbc52cb43</span><span class="token punctuation">,</span><span class="token number">0x1e14b9dd</span><span class="token punctuation">,</span><span class="token number">0xf6d3cb95</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    BLOWFISH_CTX ctx<span class="token punctuation">;</span>    <span class="token function">BlowFishInit</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ctx<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token string">"Shell"</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token string">"Shell"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">size_t</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>      <span class="token keyword">unsigned</span> <span class="token keyword">int</span> L <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> R <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">2</span><span class="token operator">*</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token function">BlowFish_Decrypt</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ctx<span class="token punctuation">,</span> <span class="token operator">&amp;</span>L<span class="token punctuation">,</span> <span class="token operator">&amp;</span>R<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%c%c%c%c"</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>L <span class="token operator">+</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>L <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>L <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>L <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%c%c%c%c"</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>R <span class="token operator">+</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>R <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>R <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>R <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第六届强网杯全国网络安全挑战赛 Re WriteUp</title>
      <link href="//post/qwb.html"/>
      <url>//post/qwb.html</url>
      
        <content type="html"><![CDATA[<h1 id="GameMaster"><a href="#GameMaster" class="headerlink" title="GameMaster"></a>GameMaster</h1><p>老样子先查壳</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220805153034.png"></p><p>一个C#的程序，可以用dnspy反编译</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220805153335.png"></p><p>画圈部分是读取gamemessage文件，其他的都是游戏的初始化之类的</p><p>当我们按下ESC ,会进入verifyCode(arrayList, game)函数</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220805153548.png"></p><p>进去发现将输入的字符变成字符串，然后进入goldFunc</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220805153611.png"></p><p>进去发现是对我们的输入进行比较，然后进行相应的操作，类似小时候玩的GTA里面作弊码</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220805153658.png"></p><p>简单分析一下，这里的操作主要有对读取的gamemessage文件先进行xor34，然后进行AES解密，我们可以自己解密，也可以重新利用反汇编代码。dnspy可以导入工程到vs里。把一些没用的比较都删了，只留下对文件操作的部分</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">using System<span class="token punctuation">;</span>using System<span class="token punctuation">.</span>Collections<span class="token punctuation">;</span>using System<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span>using System<span class="token punctuation">.</span>IO<span class="token punctuation">;</span>using System<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>Serialization<span class="token punctuation">.</span>Formatters<span class="token punctuation">.</span>Binary<span class="token punctuation">;</span>using System<span class="token punctuation">.</span>Security<span class="token punctuation">.</span>Cryptography<span class="token punctuation">;</span>using System<span class="token punctuation">.</span>Text<span class="token punctuation">;</span>using Blackjack<span class="token punctuation">;</span>namespace Game<span class="token punctuation">&#123;</span>internal class Program<span class="token punctuation">&#123;</span>        private <span class="token keyword">static</span> byte<span class="token punctuation">[</span><span class="token punctuation">]</span> memory<span class="token punctuation">;</span>        private <span class="token keyword">static</span> byte<span class="token punctuation">[</span><span class="token punctuation">]</span> m<span class="token punctuation">;</span>        private <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">Main</span><span class="token punctuation">(</span>string<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>ConfigurationManager<span class="token punctuation">.</span>AppSettings<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">"microsoft:WorkflowComponentModel:DisableActivitySurrogateSelectorTypeCheck"</span><span class="token punctuation">,</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>FileStream fileStream <span class="token operator">=</span> File<span class="token punctuation">.</span><span class="token function">OpenRead</span><span class="token punctuation">(</span><span class="token string">"gamemessage"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>fileStream<span class="token punctuation">.</span>Length<span class="token punctuation">;</span>Program<span class="token punctuation">.</span>memory <span class="token operator">=</span> new byte<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">;</span>fileStream<span class="token punctuation">.</span>Position <span class="token operator">=</span> <span class="token number">0L</span><span class="token punctuation">;</span>fileStream<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>Program<span class="token punctuation">.</span>memory<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Program<span class="token punctuation">.</span>memory<span class="token punctuation">.</span>Length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>byte<span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> Program<span class="token punctuation">.</span>memory<span class="token punctuation">;</span>                array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^=</span> <span class="token number">34</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>byte<span class="token punctuation">[</span><span class="token punctuation">]</span> key <span class="token operator">=</span> new byte<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">114</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">105</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">115</span><span class="token punctuation">,</span><span class="token number">116</span><span class="token punctuation">,</span><span class="token number">111</span><span class="token punctuation">,</span><span class="token number">114</span><span class="token punctuation">,</span><span class="token number">109</span><span class="token punctuation">,</span><span class="token number">105</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">103</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>ICryptoTransform cryptoTransform <span class="token operator">=</span> new RijndaelManaged<span class="token punctuation">&#123;</span>Key <span class="token operator">=</span> key<span class="token punctuation">,</span>Mode <span class="token operator">=</span> CipherMode<span class="token punctuation">.</span>ECB<span class="token punctuation">,</span> Padding <span class="token operator">=</span> PaddingMode <span class="token punctuation">.</span>Zeros<span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">CreateDecryptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Program<span class="token punctuation">.</span>m <span class="token operator">=</span> cryptoTransform<span class="token punctuation">.</span><span class="token function">TransformFinalBlock</span><span class="token punctuation">(</span>Program<span class="token punctuation">.</span>memory<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Program<span class="token punctuation">.</span>memory<span class="token punctuation">.</span>Length<span class="token punctuation">)</span><span class="token punctuation">;</span>File<span class="token punctuation">.</span><span class="token function">WriteAllBytes</span><span class="token punctuation">(</span><span class="token string">"aa.out"</span><span class="token punctuation">,</span> Program<span class="token punctuation">.</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220805154534.png"></p><p>这是解密完的样子，里面搜到MZ标志，发现有可执行文件特征</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220805154641.png"></p><p>把前面都删了，将可执行文件分离出来</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220805154741.png"></p><p>又是一个C#文件，拖入dnspy分析</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220805155037.png"></p><p>num,num2,num3是环境变量，然后传入check，传出一个array2数组，与first比较<img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220805155041.png"></p><p>分析一波check</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220805155144.png"></p><p>通过变化生成KeyStream，然后与first比较，这里可以通过Z3反求num,num2,num3</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> z3 <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">:</span>    num <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>    keystream <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">40</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">320</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x <span class="token operator">>></span> <span class="token number">29</span> <span class="token operator">^</span> x <span class="token operator">>></span> <span class="token number">28</span> <span class="token operator">^</span> x <span class="token operator">>></span> <span class="token number">25</span> <span class="token operator">^</span> x <span class="token operator">>></span> <span class="token number">23</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">|</span> x <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span>        y <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>y <span class="token operator">>></span> <span class="token number">30</span> <span class="token operator">^</span> y <span class="token operator">>></span> <span class="token number">27</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">|</span> y <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span>        z <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>z <span class="token operator">>></span> <span class="token number">31</span> <span class="token operator">^</span> z <span class="token operator">>></span> <span class="token number">30</span> <span class="token operator">^</span> z <span class="token operator">>></span> <span class="token number">29</span> <span class="token operator">^</span> z <span class="token operator">>></span> <span class="token number">28</span> <span class="token operator">^</span> z <span class="token operator">>></span> <span class="token number">26</span> <span class="token operator">^</span> z <span class="token operator">>></span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">|</span> z <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> i <span class="token operator">%</span> <span class="token number">8</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            num <span class="token operator">+=</span> <span class="token number">1</span>        keystream<span class="token punctuation">[</span>num<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>keystream<span class="token punctuation">[</span>num<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>z <span class="token operator">>></span> <span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>x <span class="token operator">>></span> <span class="token number">30</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>z <span class="token operator">>></span> <span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>y <span class="token operator">>></span> <span class="token number">31</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0xff</span>    <span class="token keyword">return</span> keystream<span class="token keyword">def</span> <span class="token function">getxyz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    s <span class="token operator">=</span> Solver<span class="token punctuation">(</span><span class="token punctuation">)</span>    x <span class="token operator">=</span> BitVec<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span>    y <span class="token operator">=</span> BitVec<span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span>    <span class="token comment">#x = 156324965</span>    <span class="token comment">#y = 868387187</span>    z <span class="token operator">=</span> BitVec<span class="token punctuation">(</span><span class="token string">'z'</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span>    num <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>    keystream <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">40</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">320</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x <span class="token operator">>></span> <span class="token number">29</span> <span class="token operator">^</span> x <span class="token operator">>></span> <span class="token number">28</span> <span class="token operator">^</span> x <span class="token operator">>></span> <span class="token number">25</span> <span class="token operator">^</span> x <span class="token operator">>></span> <span class="token number">23</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">|</span> x <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span>        y <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>y <span class="token operator">>></span> <span class="token number">30</span> <span class="token operator">^</span> y <span class="token operator">>></span> <span class="token number">27</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">|</span> y <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span>        z <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>z <span class="token operator">>></span> <span class="token number">31</span> <span class="token operator">^</span> z <span class="token operator">>></span> <span class="token number">30</span> <span class="token operator">^</span> z <span class="token operator">>></span> <span class="token number">29</span> <span class="token operator">^</span> z <span class="token operator">>></span> <span class="token number">28</span> <span class="token operator">^</span> z <span class="token operator">>></span> <span class="token number">26</span> <span class="token operator">^</span> z <span class="token operator">>></span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">|</span> z <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> i <span class="token operator">%</span> <span class="token number">8</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            num <span class="token operator">+=</span> <span class="token number">1</span>        keystream<span class="token punctuation">[</span>num<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>keystream<span class="token punctuation">[</span>num<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>z <span class="token operator">>></span> <span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>x <span class="token operator">>></span> <span class="token number">30</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>z <span class="token operator">>></span> <span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>y <span class="token operator">>></span> <span class="token number">31</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">101</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">80</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">213</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">163</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">26</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">59</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">38</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">19</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">6</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">173</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">189</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">198</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">166</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">140</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">183</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">42</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">247</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">223</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">24</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">106</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">20</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">145</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">37</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">24</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">22</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">191</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">110</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">179</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">227</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">62</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">33</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">9</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">13</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">17</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">36</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">65</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">37</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">22</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">38</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">37</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keystream<span class="token punctuation">[</span><span class="token number">39</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>check<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>check<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> sat<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>model<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#getxyz()</span>key<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">156324965</span><span class="token punctuation">,</span><span class="token number">868387187</span><span class="token punctuation">,</span><span class="token number">3131229747</span><span class="token punctuation">]</span>encflag<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">51</span><span class="token punctuation">,</span><span class="token number">251</span><span class="token punctuation">,</span><span class="token number">167</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token punctuation">,</span><span class="token number">116</span><span class="token punctuation">,</span><span class="token number">245</span><span class="token punctuation">,</span><span class="token number">207</span><span class="token punctuation">,</span><span class="token number">223</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">103</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">251</span><span class="token punctuation">,</span><span class="token number">227</span><span class="token punctuation">]</span>Key<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">12</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>Key<span class="token punctuation">[</span>i <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>key<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">>></span> j <span class="token operator">*</span> <span class="token number">8</span> <span class="token operator">&amp;</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>Key<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>encflag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>encflag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>encflag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span>Key<span class="token punctuation">[</span>i<span class="token operator">%</span><span class="token builtin">len</span><span class="token punctuation">(</span>Key<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>encflag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>encflag<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>num,num2,num3都是八字节，64位注意一下。得到num&#x3D;156324965，num2&#x3D;868387187,num3&#x3D;3131229747,然后传入ParseKey生成key,最后就是一个很简单xor。</p><h1 id="deeprev"><a href="#deeprev" class="headerlink" title="deeprev"></a>deeprev</h1><p>这题是谷歌ctf2022的模板题，我是直接对着那题的wp复现的</p><p><a href="https://ctf.harrisongreen.me/2022/googlectf/eldar/">https://ctf.harrisongreen.me/2022/googlectf/eldar/</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Author: hgarrereyn</span><span class="token comment"># Desc: Lifter solution for GoogleCTF 2022 eldar</span><span class="token keyword">import</span> lief<span class="token keyword">from</span> collections <span class="token keyword">import</span> namedtuple<span class="token keyword">from</span> dataclasses <span class="token keyword">import</span> dataclass<span class="token keyword">from</span> typing <span class="token keyword">import</span> Any<span class="token keyword">from</span> capstone <span class="token keyword">import</span> <span class="token operator">*</span>md <span class="token operator">=</span> Cs<span class="token punctuation">(</span>CS_ARCH_X86<span class="token punctuation">,</span> CS_MODE_64<span class="token punctuation">)</span>b <span class="token operator">=</span> <span class="token boolean">None</span><span class="token keyword">try</span><span class="token punctuation">:</span>    b <span class="token operator">=</span> lief<span class="token punctuation">.</span>ELF<span class="token punctuation">.</span>parse<span class="token punctuation">(</span><span class="token string">'./deeprev'</span><span class="token punctuation">)</span><span class="token keyword">except</span><span class="token punctuation">:</span>    <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'Must have the ./eldar binary in cwd'</span><span class="token punctuation">)</span>rela <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> b<span class="token punctuation">.</span>sections <span class="token keyword">if</span> x<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">'.rela.dyn'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>rela<span class="token punctuation">)</span>dynsym <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> b<span class="token punctuation">.</span>sections <span class="token keyword">if</span> x<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">'.dynsym'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token decorator annotation punctuation">@dataclass</span><span class="token keyword">class</span> <span class="token class-name">Symbol</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    idx<span class="token punctuation">:</span> <span class="token builtin">int</span>    <span class="token keyword">def</span> <span class="token function">__repr__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f's</span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>idx<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span>        <span class="token decorator annotation punctuation">@dataclass</span><span class="token keyword">class</span> <span class="token class-name">Reloc</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    idx<span class="token punctuation">:</span> <span class="token builtin">int</span>    <span class="token keyword">def</span> <span class="token function">__repr__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f'r</span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>idx<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token decorator annotation punctuation">@dataclass</span><span class="token keyword">class</span> <span class="token class-name">Ref</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    val<span class="token punctuation">:</span> Any    <span class="token keyword">def</span> <span class="token function">__repr__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f'&amp;</span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>val<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token decorator annotation punctuation">@dataclass</span><span class="token keyword">class</span> <span class="token class-name">SymAddr</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    sym<span class="token punctuation">:</span> Symbol    field<span class="token punctuation">:</span> <span class="token builtin">str</span>    <span class="token keyword">def</span> <span class="token function">__repr__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>sym<span class="token punctuation">&#125;</span></span><span class="token string">.</span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>field<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token decorator annotation punctuation">@dataclass</span><span class="token keyword">class</span> <span class="token class-name">RelocAddr</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    reloc<span class="token punctuation">:</span> Reloc    field<span class="token punctuation">:</span> <span class="token builtin">str</span>    <span class="token keyword">def</span> <span class="token function">__repr__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>reloc<span class="token punctuation">&#125;</span></span><span class="token string">.</span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>field<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span>    <span class="token keyword">def</span> <span class="token function">vaddr</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        off <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">match</span> self<span class="token punctuation">.</span>field<span class="token punctuation">:</span>            <span class="token keyword">case</span> <span class="token string">'r_address'</span><span class="token punctuation">:</span>off <span class="token operator">=</span> <span class="token number">0</span>            <span class="token keyword">case</span> <span class="token string">'r_info'</span><span class="token punctuation">:</span> off <span class="token operator">=</span> <span class="token number">8</span>            <span class="token keyword">case</span> <span class="token string">'r_addend'</span><span class="token punctuation">:</span> off <span class="token operator">=</span> <span class="token number">16</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>reloc<span class="token punctuation">.</span>idx <span class="token operator">*</span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">+</span> off <span class="token operator">+</span> rela<span class="token punctuation">.</span>virtual_address    <span class="token decorator annotation punctuation">@dataclass</span><span class="token keyword">class</span> <span class="token class-name">FlagAddr</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    idx<span class="token punctuation">:</span> <span class="token builtin">int</span>    <span class="token keyword">def</span> <span class="token function">__repr__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f'flag[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>idx<span class="token punctuation">&#125;</span></span><span class="token string">]'</span></span><span class="token decorator annotation punctuation">@dataclass</span><span class="token keyword">class</span> <span class="token class-name">OutAddr</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    idx<span class="token punctuation">:</span> <span class="token builtin">int</span>            <span class="token keyword">def</span> <span class="token function">__repr__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f'out[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>idx<span class="token punctuation">&#125;</span></span><span class="token string">]'</span></span>    <span class="token decorator annotation punctuation">@dataclass</span><span class="token keyword">class</span> <span class="token class-name">ArrAddr</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    idx<span class="token punctuation">:</span> <span class="token builtin">int</span>            <span class="token keyword">def</span> <span class="token function">__repr__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f'arr[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>idx<span class="token punctuation">&#125;</span></span><span class="token string">]'</span></span>BaseAddr <span class="token operator">=</span> namedtuple<span class="token punctuation">(</span><span class="token string">'baseaddr'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>FailAddr <span class="token operator">=</span> namedtuple<span class="token punctuation">(</span><span class="token string">'fail'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">format_addr</span><span class="token punctuation">(</span>addr<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> addr <span class="token operator">>=</span> rela<span class="token punctuation">.</span>virtual_address <span class="token keyword">and</span> addr <span class="token operator">&lt;</span> rela<span class="token punctuation">.</span>virtual_address <span class="token operator">+</span> rela<span class="token punctuation">.</span>size<span class="token punctuation">:</span>        offset <span class="token operator">=</span> addr <span class="token operator">-</span> rela<span class="token punctuation">.</span>virtual_address        r_offset <span class="token operator">=</span> <span class="token punctuation">(</span>offset <span class="token operator">//</span> <span class="token number">24</span><span class="token punctuation">)</span>        r_rem <span class="token operator">=</span> offset <span class="token operator">%</span> <span class="token number">24</span>                <span class="token keyword">if</span> r_offset <span class="token operator">>=</span> <span class="token number">3</span> <span class="token keyword">and</span> r_offset <span class="token operator">&lt;=</span> <span class="token number">88</span><span class="token punctuation">:</span>            arr_idx <span class="token operator">=</span> <span class="token punctuation">(</span>r_offset <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token punctuation">(</span>r_rem <span class="token operator">//</span> <span class="token number">8</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> ArrAddr<span class="token punctuation">(</span>arr_idx<span class="token punctuation">)</span>        <span class="token keyword">elif</span> r_offset <span class="token operator">==</span> <span class="token number">89</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> OutAddr<span class="token punctuation">(</span>r_rem<span class="token punctuation">)</span>                <span class="token keyword">match</span> r_rem<span class="token punctuation">:</span>            <span class="token keyword">case</span> <span class="token number">0</span><span class="token punctuation">:</span> <span class="token keyword">return</span> RelocAddr<span class="token punctuation">(</span>Reloc<span class="token punctuation">(</span>r_offset<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'r_address'</span><span class="token punctuation">)</span>            <span class="token keyword">case</span> <span class="token number">8</span><span class="token punctuation">:</span> <span class="token keyword">return</span> RelocAddr<span class="token punctuation">(</span>Reloc<span class="token punctuation">(</span>r_offset<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'r_info'</span><span class="token punctuation">)</span>            <span class="token keyword">case</span> <span class="token number">16</span><span class="token punctuation">:</span> <span class="token keyword">return</span> RelocAddr<span class="token punctuation">(</span>Reloc<span class="token punctuation">(</span>r_offset<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'r_addend'</span><span class="token punctuation">)</span>            <span class="token keyword">case</span> <span class="token keyword">_</span><span class="token punctuation">:</span> <span class="token keyword">return</span> RelocAddr<span class="token punctuation">(</span>Reloc<span class="token punctuation">(</span>r_offset<span class="token punctuation">)</span><span class="token punctuation">,</span> r_rem<span class="token punctuation">)</span>    <span class="token keyword">elif</span> addr <span class="token operator">></span> dynsym<span class="token punctuation">.</span>virtual_address <span class="token keyword">and</span> addr <span class="token operator">&lt;</span> dynsym<span class="token punctuation">.</span>virtual_address <span class="token operator">+</span> dynsym<span class="token punctuation">.</span>size<span class="token punctuation">:</span>        offset <span class="token operator">=</span> addr <span class="token operator">-</span> dynsym<span class="token punctuation">.</span>virtual_address        r_offset <span class="token operator">=</span> <span class="token punctuation">(</span>offset <span class="token operator">//</span> <span class="token number">24</span><span class="token punctuation">)</span>        r_rem <span class="token operator">=</span> offset <span class="token operator">%</span> <span class="token number">24</span>                <span class="token keyword">match</span> r_rem<span class="token punctuation">:</span>            <span class="token keyword">case</span> <span class="token number">0</span><span class="token punctuation">:</span> <span class="token keyword">return</span> SymAddr<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span>r_offset<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'st_name'</span><span class="token punctuation">)</span>            <span class="token keyword">case</span> <span class="token number">8</span><span class="token punctuation">:</span> <span class="token keyword">return</span> Symbol<span class="token punctuation">(</span>r_offset<span class="token punctuation">)</span>            <span class="token keyword">case</span> <span class="token number">16</span><span class="token punctuation">:</span> <span class="token keyword">return</span> SymAddr<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span>r_offset<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'st_size'</span><span class="token punctuation">)</span>            <span class="token keyword">case</span> <span class="token keyword">_</span><span class="token punctuation">:</span> <span class="token keyword">return</span> SymAddr<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span>r_offset<span class="token punctuation">)</span><span class="token punctuation">,</span> r_rem<span class="token punctuation">)</span>    <span class="token keyword">elif</span> addr <span class="token operator">>=</span> <span class="token number">0x404040</span> <span class="token keyword">and</span> addr <span class="token operator">&lt;</span> <span class="token number">0x404040</span><span class="token operator">+</span><span class="token number">33</span><span class="token punctuation">:</span>        off <span class="token operator">=</span> addr<span class="token operator">-</span><span class="token number">0x404040</span>        <span class="token keyword">return</span> FlagAddr<span class="token punctuation">(</span>off<span class="token punctuation">)</span>    <span class="token keyword">elif</span> addr <span class="token operator">==</span> <span class="token number">0x804000</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> BaseAddr<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> addr <span class="token operator">==</span> <span class="token number">0x404064</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> FailAddr<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> addr<span class="token keyword">def</span> <span class="token function">to_sym</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">assert</span> <span class="token builtin">len</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span>    <span class="token keyword">return</span> Symbol<span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>Rel <span class="token operator">=</span> namedtuple<span class="token punctuation">(</span><span class="token string">'REL'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'dst'</span><span class="token punctuation">,</span><span class="token string">'val'</span><span class="token punctuation">,</span><span class="token string">'ridx'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>Copy <span class="token operator">=</span> namedtuple<span class="token punctuation">(</span><span class="token string">'CPY'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'dst'</span><span class="token punctuation">,</span> <span class="token string">'symbol'</span><span class="token punctuation">,</span> <span class="token string">'ridx'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>R64 <span class="token operator">=</span> namedtuple<span class="token punctuation">(</span><span class="token string">'R64'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'dst'</span><span class="token punctuation">,</span><span class="token string">'symbol'</span><span class="token punctuation">,</span><span class="token string">'addend'</span><span class="token punctuation">,</span><span class="token string">'ridx'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>R32 <span class="token operator">=</span> namedtuple<span class="token punctuation">(</span><span class="token string">'R32'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'dst'</span><span class="token punctuation">,</span><span class="token string">'symbol'</span><span class="token punctuation">,</span><span class="token string">'addend'</span><span class="token punctuation">,</span><span class="token string">'ridx'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">list</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[*] Loading relocations...'</span><span class="token punctuation">)</span>    relocs <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>relocations<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[*] Parsing...'</span><span class="token punctuation">)</span>    instructions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>relocs<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        r <span class="token operator">=</span> relocs<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        <span class="token keyword">match</span> r<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">:</span>            <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span> <span class="token comment"># R64</span>                instructions<span class="token punctuation">.</span>append<span class="token punctuation">(</span>R64<span class="token punctuation">(</span>format_addr<span class="token punctuation">(</span>r<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">,</span> to_sym<span class="token punctuation">(</span>r<span class="token punctuation">.</span>symbol<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span> format_addr<span class="token punctuation">(</span>r<span class="token punctuation">.</span>addend<span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">case</span> <span class="token number">5</span><span class="token punctuation">:</span> <span class="token comment"># CPY</span>                instructions<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Copy<span class="token punctuation">(</span>format_addr<span class="token punctuation">(</span>r<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">,</span> to_sym<span class="token punctuation">(</span>r<span class="token punctuation">.</span>symbol<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">case</span> <span class="token number">8</span><span class="token punctuation">:</span> <span class="token comment"># REL</span>                instructions<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Rel<span class="token punctuation">(</span>format_addr<span class="token punctuation">(</span>r<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">,</span> format_addr<span class="token punctuation">(</span>r<span class="token punctuation">.</span>addend<span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">case</span> <span class="token number">10</span><span class="token punctuation">:</span> <span class="token comment"># R32</span>                instructions<span class="token punctuation">.</span>append<span class="token punctuation">(</span>R32<span class="token punctuation">(</span>format_addr<span class="token punctuation">(</span>r<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">,</span> to_sym<span class="token punctuation">(</span>r<span class="token punctuation">.</span>symbol<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span> format_addr<span class="token punctuation">(</span>r<span class="token punctuation">.</span>addend<span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token keyword">return</span> instructionsMov <span class="token operator">=</span> namedtuple<span class="token punctuation">(</span><span class="token string">'mov'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'dst'</span><span class="token punctuation">,</span> <span class="token string">'src'</span><span class="token punctuation">,</span> <span class="token string">'sz'</span><span class="token punctuation">,</span> <span class="token string">'ridx'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>Add <span class="token operator">=</span> namedtuple<span class="token punctuation">(</span><span class="token string">'add'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'dst'</span><span class="token punctuation">,</span> <span class="token string">'src'</span><span class="token punctuation">,</span> <span class="token string">'addend'</span><span class="token punctuation">,</span> <span class="token string">'ridx'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">lift_mov_add</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>    idx <span class="token operator">=</span> <span class="token number">0</span>        sizes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    curr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">8</span>    sizes<span class="token punctuation">.</span>append<span class="token punctuation">(</span>curr<span class="token punctuation">)</span>    <span class="token keyword">for</span> instr <span class="token keyword">in</span> instructions<span class="token punctuation">:</span>        c <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>curr<span class="token punctuation">)</span>        <span class="token keyword">match</span> instr<span class="token punctuation">:</span>            <span class="token keyword">case</span> Rel<span class="token punctuation">(</span>SymAddr<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'st_size'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> val<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">:</span>                c<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> val        sizes<span class="token punctuation">.</span>append<span class="token punctuation">(</span>c<span class="token punctuation">)</span>        <span class="token keyword">while</span> idx <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">match</span> instructions<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">case</span> Rel<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> val<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">:</span>                instructions<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> Mov<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> Ref<span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> ridx<span class="token punctuation">)</span>            <span class="token keyword">case</span> Copy<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> sym<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">:</span>                instructions<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> Mov<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> sym<span class="token punctuation">,</span> sizes<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">[</span>sym<span class="token punctuation">.</span>idx<span class="token punctuation">]</span><span class="token punctuation">,</span> ridx<span class="token punctuation">)</span>            <span class="token keyword">case</span> R64<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> sym<span class="token punctuation">,</span> add<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">:</span>                instructions<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> Add<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> sym<span class="token punctuation">,</span> add<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span>        idx <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">return</span> instructions<span class="token keyword">def</span> <span class="token function">remove_sizes</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># Sizes are now nops</span>    idx <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">while</span> idx <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">match</span> instructions<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">case</span> Mov<span class="token punctuation">(</span>SymAddr<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'st_size'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _<span class="token punctuation">,</span> _<span class="token punctuation">,</span> _<span class="token punctuation">)</span> <span class="token keyword">if</span> s <span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">:</span>                instructions<span class="token punctuation">[</span>idx<span class="token punctuation">:</span>idx<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        idx <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">return</span> instructions<span class="token keyword">def</span> <span class="token function">lift_indirect</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>    idx <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">while</span> idx <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">match</span> instructions<span class="token punctuation">[</span>idx<span class="token punctuation">:</span>idx<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">case</span> <span class="token punctuation">[</span>                Mov<span class="token punctuation">(</span>RelocAddr<span class="token punctuation">(</span>Reloc<span class="token punctuation">(</span>rel_1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'r_addend'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Symbol<span class="token punctuation">(</span>sidx_1<span class="token punctuation">)</span><span class="token punctuation">,</span> sz_1<span class="token punctuation">,</span> ridx_1<span class="token punctuation">)</span><span class="token punctuation">,</span>                Add<span class="token punctuation">(</span>dst_2<span class="token punctuation">,</span> sym_2<span class="token punctuation">,</span> _<span class="token punctuation">,</span> ridx_2<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>RelocAddr<span class="token punctuation">(</span>Reloc<span class="token punctuation">(</span>rel_3<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'r_addend'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Ref<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sz_3<span class="token punctuation">,</span> _<span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">]</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>                <span class="token punctuation">(</span>rel_1 <span class="token operator">==</span> ridx_2<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>rel_3 <span class="token operator">==</span> ridx_2<span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">:</span>                instructions<span class="token punctuation">[</span>idx<span class="token punctuation">:</span>idx<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>                    Add<span class="token punctuation">(</span>dst_2<span class="token punctuation">,</span> sym_2<span class="token punctuation">,</span> Symbol<span class="token punctuation">(</span>sidx_1<span class="token punctuation">)</span><span class="token punctuation">,</span> ridx_1<span class="token punctuation">)</span>                <span class="token punctuation">]</span>        idx <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">return</span> instructionsBlock <span class="token operator">=</span> namedtuple<span class="token punctuation">(</span><span class="token string">'block'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'arr'</span><span class="token punctuation">,</span> <span class="token string">'flag'</span><span class="token punctuation">,</span> <span class="token string">'ridx'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>Output <span class="token operator">=</span> namedtuple<span class="token punctuation">(</span><span class="token string">'output'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'out'</span><span class="token punctuation">,</span> <span class="token string">'arr'</span><span class="token punctuation">,</span> <span class="token string">'ridx'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">lift_block</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>     idx <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">while</span> idx <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">match</span> instructions<span class="token punctuation">[</span>idx<span class="token punctuation">:</span>idx<span class="token operator">+</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">case</span> <span class="token punctuation">[</span>                Mov<span class="token punctuation">(</span>_<span class="token punctuation">,</span>arr<span class="token punctuation">,</span>_<span class="token punctuation">,</span>ridx<span class="token punctuation">)</span><span class="token punctuation">,</span>                Add<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>_<span class="token punctuation">,</span>flag<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Add<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                R32<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Add<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Add<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Add<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Add<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Add<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">]</span><span class="token punctuation">:</span>                instructions<span class="token punctuation">[</span>idx<span class="token punctuation">:</span>idx<span class="token operator">+</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>                    Block<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> flag<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span>                <span class="token punctuation">]</span>        idx <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">return</span> instructionsReset <span class="token operator">=</span> namedtuple<span class="token punctuation">(</span><span class="token string">'reset'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'ridx'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>ShuffleBlock <span class="token operator">=</span> namedtuple<span class="token punctuation">(</span><span class="token string">'shuffleblock'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'f1'</span><span class="token punctuation">,</span> <span class="token string">'f2'</span><span class="token punctuation">,</span> <span class="token string">'ridx'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">lift_reset</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>    idx <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">while</span> idx <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">256</span><span class="token punctuation">:</span>        good <span class="token operator">=</span> <span class="token boolean">True</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            op <span class="token operator">=</span> instructions<span class="token punctuation">[</span>idx<span class="token operator">+</span>i<span class="token punctuation">]</span>            <span class="token keyword">if</span> <span class="token builtin">type</span><span class="token punctuation">(</span>op<span class="token punctuation">)</span> <span class="token operator">==</span> Mov<span class="token punctuation">:</span>                dst<span class="token punctuation">,</span> src<span class="token punctuation">,</span> _<span class="token punctuation">,</span> _ <span class="token operator">=</span> op                <span class="token keyword">if</span> dst <span class="token operator">!=</span> ArrAddr<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">or</span> src <span class="token operator">!=</span> Ref<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">:</span>                    good <span class="token operator">=</span> <span class="token boolean">False</span>                    <span class="token keyword">break</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                good <span class="token operator">=</span> <span class="token boolean">False</span>                <span class="token keyword">break</span>        <span class="token keyword">if</span> good<span class="token punctuation">:</span>            instructions<span class="token punctuation">[</span>idx<span class="token punctuation">:</span>idx<span class="token operator">+</span><span class="token number">256</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>Reset<span class="token punctuation">(</span>instructions<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">.</span>ridx<span class="token punctuation">)</span><span class="token punctuation">]</span>        idx <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">return</span> instructions<span class="token keyword">def</span> <span class="token function">lift_shuffle_block</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>    idx <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">while</span> idx <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">256</span><span class="token punctuation">:</span>        good <span class="token operator">=</span> <span class="token boolean">True</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            op <span class="token operator">=</span> instructions<span class="token punctuation">[</span>idx<span class="token operator">+</span>i<span class="token punctuation">]</span>            <span class="token keyword">if</span> <span class="token builtin">type</span><span class="token punctuation">(</span>op<span class="token punctuation">)</span> <span class="token operator">==</span> Block<span class="token punctuation">:</span>                arr<span class="token punctuation">,</span> flag<span class="token punctuation">,</span> ridx <span class="token operator">=</span> op                <span class="token keyword">if</span> arr <span class="token operator">!=</span> Ref<span class="token punctuation">(</span>ArrAddr<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    good <span class="token operator">=</span> <span class="token boolean">False</span>                    <span class="token keyword">break</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                good <span class="token operator">=</span> <span class="token boolean">False</span>                <span class="token keyword">break</span>        <span class="token keyword">if</span> good<span class="token punctuation">:</span>            instructions<span class="token punctuation">[</span>idx<span class="token punctuation">:</span>idx<span class="token operator">+</span><span class="token number">256</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>ShuffleBlock<span class="token punctuation">(</span>instructions<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">.</span>flag<span class="token punctuation">,</span> instructions<span class="token punctuation">[</span>idx<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>flag<span class="token punctuation">,</span> instructions<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">.</span>ridx<span class="token punctuation">)</span><span class="token punctuation">]</span>        idx <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">return</span> instructionsOutput <span class="token operator">=</span> namedtuple<span class="token punctuation">(</span><span class="token string">'output'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'out'</span><span class="token punctuation">,</span> <span class="token string">'arr'</span><span class="token punctuation">,</span> <span class="token string">'ridx'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">lift_output</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>    idx <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">while</span> idx <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">match</span> instructions<span class="token punctuation">[</span>idx<span class="token punctuation">:</span>idx<span class="token operator">+</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">case</span> <span class="token punctuation">[</span>                Mov<span class="token punctuation">(</span>_<span class="token punctuation">,</span>arr<span class="token punctuation">,</span>_<span class="token punctuation">,</span>ridx<span class="token punctuation">)</span><span class="token punctuation">,</span>                Add<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                R32<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Add<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Add<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Add<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Add<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Add<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Add<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                R32<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Add<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Add<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Add<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Add<span class="token punctuation">(</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>out<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">,</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">]</span><span class="token punctuation">:</span>                instructions<span class="token punctuation">[</span>idx<span class="token punctuation">:</span>idx<span class="token operator">+</span><span class="token number">26</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>Output<span class="token punctuation">(</span>out<span class="token punctuation">,</span> arr<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">]</span>        idx <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">return</span> instructionsMultAdd <span class="token operator">=</span> namedtuple<span class="token punctuation">(</span><span class="token string">'multadd'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'out'</span><span class="token punctuation">,</span> <span class="token string">'val'</span><span class="token punctuation">,</span> <span class="token string">'k'</span><span class="token punctuation">,</span> <span class="token string">'ridx'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">lift_multadd</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>    idx <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">while</span> idx <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">match</span> instructions<span class="token punctuation">[</span>idx<span class="token punctuation">:</span>idx<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token comment"># block prefix</span>            <span class="token keyword">case</span> <span class="token punctuation">[</span>                Mov<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> out<span class="token punctuation">,</span> _<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Symbol<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _<span class="token punctuation">,</span> _<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Ref<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _<span class="token punctuation">,</span> _<span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">]</span><span class="token punctuation">:</span>                k <span class="token operator">=</span> <span class="token number">0</span>                double <span class="token operator">=</span> <span class="token boolean">False</span>                ptr <span class="token operator">=</span> idx <span class="token operator">+</span> <span class="token number">3</span>                good <span class="token operator">=</span> <span class="token boolean">True</span>                <span class="token keyword">while</span> ptr <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token keyword">match</span> instructions<span class="token punctuation">[</span>ptr<span class="token punctuation">]</span><span class="token punctuation">:</span>                        <span class="token keyword">case</span> Mov<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Ref<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _<span class="token punctuation">,</span> _<span class="token punctuation">)</span><span class="token punctuation">:</span>                            double <span class="token operator">=</span> <span class="token boolean">True</span>                        <span class="token keyword">case</span> Mov<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Ref<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _<span class="token punctuation">,</span> _<span class="token punctuation">)</span><span class="token punctuation">:</span>                            double <span class="token operator">=</span> <span class="token boolean">False</span>                        <span class="token keyword">case</span> Add<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Symbol<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Symbol<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _<span class="token punctuation">)</span><span class="token punctuation">:</span>                            k <span class="token operator">=</span> <span class="token punctuation">(</span>k <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">if</span> double <span class="token keyword">else</span> <span class="token punctuation">(</span>k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>                        <span class="token keyword">case</span> Add<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Symbol<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Symbol<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _<span class="token punctuation">)</span><span class="token punctuation">:</span>                            ptr <span class="token operator">+=</span> <span class="token number">1</span>                            <span class="token keyword">break</span>                        <span class="token keyword">case</span> <span class="token keyword">_</span><span class="token punctuation">:</span>                            good <span class="token operator">=</span> <span class="token boolean">False</span>                            <span class="token keyword">break</span>                    ptr <span class="token operator">+=</span> <span class="token number">1</span>                                <span class="token keyword">if</span> good<span class="token punctuation">:</span>                    instructions<span class="token punctuation">[</span>idx<span class="token punctuation">:</span>ptr<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>                        MultAdd<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> out<span class="token punctuation">,</span> k<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span>                    <span class="token punctuation">]</span>        idx <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">return</span> instructionsTrunc <span class="token operator">=</span> namedtuple<span class="token punctuation">(</span><span class="token string">'trunc'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'val'</span><span class="token punctuation">,</span> <span class="token string">'k'</span><span class="token punctuation">,</span> <span class="token string">'ridx'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">lift_truncate</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>    idx <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">while</span> idx <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">match</span> instructions<span class="token punctuation">[</span>idx<span class="token punctuation">:</span>idx<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">case</span> <span class="token punctuation">[</span>                Mov<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Ref<span class="token punctuation">(</span>SymAddr<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>SymAddr<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Symbol<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> _<span class="token punctuation">)</span>            <span class="token punctuation">]</span><span class="token punctuation">:</span>                instructions<span class="token punctuation">[</span>idx<span class="token punctuation">:</span>idx<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>                    Trunc<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0xffffff</span><span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">]</span>        idx <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">return</span> instructionsArraySlots <span class="token operator">=</span> namedtuple<span class="token punctuation">(</span><span class="token string">'arr'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'values'</span><span class="token punctuation">,</span> <span class="token string">'ridx'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">lift_array_slots</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>    idx <span class="token operator">=</span> <span class="token number">0</span>       <span class="token keyword">while</span> idx <span class="token operator">&lt;</span> <span class="token number">1300</span><span class="token punctuation">:</span>        <span class="token keyword">match</span> instructions<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">case</span> Mov<span class="token punctuation">(</span>BaseAddr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Ref<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">:</span>                ptr <span class="token operator">=</span> idx<span class="token operator">+</span><span class="token number">1</span>                <span class="token keyword">while</span> ptr <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>                    op <span class="token operator">=</span> instructions<span class="token punctuation">[</span>ptr<span class="token punctuation">]</span>                    <span class="token keyword">if</span> <span class="token builtin">type</span><span class="token punctuation">(</span>op<span class="token punctuation">)</span> <span class="token operator">!=</span> Mov <span class="token keyword">or</span> op<span class="token punctuation">.</span>dst <span class="token operator">!=</span> BaseAddr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                        <span class="token keyword">break</span>                    ptr <span class="token operator">+=</span> <span class="token number">1</span>                start <span class="token operator">=</span> idx                end <span class="token operator">=</span> ptr                data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>                <span class="token comment"># Check for movs into array.</span>                vstart <span class="token operator">=</span> RelocAddr<span class="token punctuation">(</span>Reloc<span class="token punctuation">(</span>ridx<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'r_address'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>vaddr<span class="token punctuation">(</span><span class="token punctuation">)</span>                offset <span class="token operator">=</span> <span class="token number">0</span>                <span class="token keyword">while</span> end <span class="token operator">+</span> offset <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span> <span class="token keyword">and</span> offset <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    op <span class="token operator">=</span> instructions<span class="token punctuation">[</span>end <span class="token operator">+</span> offset<span class="token punctuation">]</span>                    <span class="token keyword">if</span> <span class="token builtin">type</span><span class="token punctuation">(</span>op<span class="token punctuation">)</span> <span class="token operator">==</span> Mov <span class="token keyword">and</span> <span class="token builtin">type</span><span class="token punctuation">(</span>op<span class="token punctuation">.</span>dst<span class="token punctuation">)</span> <span class="token keyword">is</span> RelocAddr <span class="token keyword">and</span> op<span class="token punctuation">.</span>dst<span class="token punctuation">.</span>vaddr<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> vstart <span class="token operator">+</span> <span class="token punctuation">(</span>offset <span class="token operator">*</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                        data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>op<span class="token punctuation">.</span>src<span class="token punctuation">.</span>val<span class="token punctuation">)</span>                    <span class="token keyword">else</span><span class="token punctuation">:</span>                        <span class="token keyword">break</span>                    offset <span class="token operator">+=</span> <span class="token number">1</span>                <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>                    data <span class="token operator">+=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>                       instructions<span class="token punctuation">[</span>idx<span class="token punctuation">:</span>end<span class="token operator">+</span>offset<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>                        ArraySlots<span class="token punctuation">(</span>data<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span>                    <span class="token punctuation">]</span>        idx <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">return</span> instructionsShellcode <span class="token operator">=</span> namedtuple<span class="token punctuation">(</span><span class="token string">'shellcode'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'dst'</span><span class="token punctuation">,</span> <span class="token string">'code'</span><span class="token punctuation">,</span> <span class="token string">'ridx'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">lift_shellcode</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>    idx <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">while</span> idx <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">match</span> instructions<span class="token punctuation">[</span>idx<span class="token punctuation">:</span>idx<span class="token operator">+</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">case</span> <span class="token punctuation">[</span>                ArraySlots<span class="token punctuation">(</span>values<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Ref<span class="token punctuation">(</span>RelocAddr<span class="token punctuation">(</span>Reloc<span class="token punctuation">(</span>rel2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'r_address'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _<span class="token punctuation">,</span> _<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>SymAddr<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'st_name'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _<span class="token punctuation">,</span> _<span class="token punctuation">,</span> _<span class="token punctuation">)</span><span class="token punctuation">,</span>                Add<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> Symbol<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _<span class="token punctuation">,</span> _<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _<span class="token punctuation">,</span> _<span class="token punctuation">,</span> _<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>RelocAddr<span class="token punctuation">(</span>Reloc<span class="token punctuation">(</span>rel6<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'r_address'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Symbol<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _<span class="token punctuation">,</span> _<span class="token punctuation">)</span>            <span class="token punctuation">]</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>rel2 <span class="token operator">==</span> ridx<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>rel6 <span class="token operator">==</span> ridx<span class="token punctuation">)</span><span class="token punctuation">:</span>                instructions<span class="token punctuation">[</span>idx<span class="token punctuation">:</span>idx<span class="token operator">+</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>                    Shellcode<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> <span class="token string">b''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span>x <span class="token operator">&amp;</span> <span class="token number">0xffffffffffffffff</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_bytes<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">'little'</span><span class="token punctuation">)</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> values<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ridx<span class="token punctuation">)</span>                <span class="token punctuation">]</span>        idx <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">return</span> instructionsAop <span class="token operator">=</span> namedtuple<span class="token punctuation">(</span><span class="token string">'aop'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'dst'</span><span class="token punctuation">,</span> <span class="token string">'op'</span><span class="token punctuation">,</span> <span class="token string">'val'</span><span class="token punctuation">,</span> <span class="token string">'k'</span><span class="token punctuation">,</span> <span class="token string">'ridx'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">lift_aop</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>    idx <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">while</span> idx <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">match</span> instructions<span class="token punctuation">[</span>idx<span class="token punctuation">:</span>idx<span class="token operator">+</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">case</span> <span class="token punctuation">[</span>                Mov<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> val<span class="token punctuation">,</span> _<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Symbol<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _<span class="token punctuation">,</span> _<span class="token punctuation">)</span><span class="token punctuation">,</span>                Shellcode<span class="token punctuation">(</span>_<span class="token punctuation">,</span> data<span class="token punctuation">,</span> _<span class="token punctuation">)</span><span class="token punctuation">,</span>                Mov<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Ref<span class="token punctuation">(</span>Symbol<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _<span class="token punctuation">,</span> _<span class="token punctuation">)</span><span class="token punctuation">,</span>                Add<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> dst2<span class="token punctuation">,</span> Symbol<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _<span class="token punctuation">)</span>            <span class="token punctuation">]</span> <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">24</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>dst <span class="token operator">==</span> dst2<span class="token punctuation">)</span><span class="token punctuation">:</span>                op <span class="token operator">=</span> <span class="token builtin">next</span><span class="token punctuation">(</span>md<span class="token punctuation">.</span>disasm<span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                t <span class="token operator">=</span> op<span class="token punctuation">.</span>mnemonic                k <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>op<span class="token punctuation">.</span>op_str<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">', '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>                instructions<span class="token punctuation">[</span>idx<span class="token punctuation">:</span>idx<span class="token operator">+</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>                    Aop<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> t<span class="token punctuation">,</span> val<span class="token punctuation">,</span> k<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span>                <span class="token punctuation">]</span>        idx <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">return</span> instructions<span class="token keyword">def</span> <span class="token function">dump</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> op <span class="token keyword">in</span> instructions<span class="token punctuation">:</span>        <span class="token keyword">match</span> op<span class="token punctuation">:</span>            <span class="token keyword">case</span> Mov<span class="token punctuation">(</span>SymAddr<span class="token punctuation">(</span>sym<span class="token punctuation">,</span> <span class="token string">'st_name'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Ref<span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> ridx<span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token builtin">type</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token keyword">is</span> <span class="token builtin">int</span><span class="token punctuation">:</span>                name <span class="token operator">=</span> val <span class="token operator">&amp;</span> <span class="token number">0xffffffff</span>                info <span class="token operator">=</span> <span class="token punctuation">(</span>val <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span>                other <span class="token operator">=</span> <span class="token punctuation">(</span>val <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span>                shndx <span class="token operator">=</span> <span class="token punctuation">(</span>val <span class="token operator">>></span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xffff</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>ridx<span class="token punctuation">:</span><span class="token format-spec">04d</span><span class="token punctuation">&#125;</span></span><span class="token string">] :: setinfo </span><span class="token interpolation"><span class="token punctuation">&#123;</span>sym<span class="token punctuation">&#125;</span></span><span class="token string">, name=0x</span><span class="token interpolation"><span class="token punctuation">&#123;</span>name<span class="token punctuation">:</span><span class="token format-spec">x</span><span class="token punctuation">&#125;</span></span><span class="token string">, info=0x</span><span class="token interpolation"><span class="token punctuation">&#123;</span>info<span class="token punctuation">:</span><span class="token format-spec">x</span><span class="token punctuation">&#125;</span></span><span class="token string">, other=0x</span><span class="token interpolation"><span class="token punctuation">&#123;</span>other<span class="token punctuation">:</span><span class="token format-spec">x</span><span class="token punctuation">&#125;</span></span><span class="token string">, shndx=0x</span><span class="token interpolation"><span class="token punctuation">&#123;</span>shndx<span class="token punctuation">:</span><span class="token format-spec">x</span><span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>            <span class="token keyword">case</span> Mov<span class="token punctuation">(</span>BaseAddr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Ref<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>ridx<span class="token punctuation">:</span><span class="token format-spec">04d</span><span class="token punctuation">&#125;</span></span><span class="token string">] :: [ARRAY SLOT]'</span></span><span class="token punctuation">)</span>            <span class="token keyword">case</span> Mov<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> src<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>ridx<span class="token punctuation">:</span><span class="token format-spec">04d</span><span class="token punctuation">&#125;</span></span><span class="token string">] :: mov </span><span class="token interpolation"><span class="token punctuation">&#123;</span>dst<span class="token punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token punctuation">&#123;</span>src<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>            <span class="token keyword">case</span> Mov<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> src<span class="token punctuation">,</span> sz<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>ridx<span class="token punctuation">:</span><span class="token format-spec">04d</span><span class="token punctuation">&#125;</span></span><span class="token string">] :: mov(</span><span class="token interpolation"><span class="token punctuation">&#123;</span>sz<span class="token punctuation">&#125;</span></span><span class="token string">) </span><span class="token interpolation"><span class="token punctuation">&#123;</span>dst<span class="token punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token punctuation">&#123;</span>src<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>            <span class="token keyword">case</span> Add<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> src<span class="token punctuation">,</span> add<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>ridx<span class="token punctuation">:</span><span class="token format-spec">04d</span><span class="token punctuation">&#125;</span></span><span class="token string">] :: add </span><span class="token interpolation"><span class="token punctuation">&#123;</span>dst<span class="token punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token punctuation">&#123;</span>src<span class="token punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token punctuation">&#123;</span>add<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>            <span class="token keyword">case</span> R32<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> src<span class="token punctuation">,</span> add<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>ridx<span class="token punctuation">:</span><span class="token format-spec">04d</span><span class="token punctuation">&#125;</span></span><span class="token string">] :: r32 </span><span class="token interpolation"><span class="token punctuation">&#123;</span>dst<span class="token punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token punctuation">&#123;</span>src<span class="token punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token punctuation">&#123;</span>add<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>            <span class="token keyword">case</span> Block<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> flag<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>ridx<span class="token punctuation">:</span><span class="token format-spec">04d</span><span class="token punctuation">&#125;</span></span><span class="token string">] :: shuffle </span><span class="token interpolation"><span class="token punctuation">&#123;</span>arr<span class="token punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token punctuation">&#123;</span>flag<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>            <span class="token keyword">case</span> Output<span class="token punctuation">(</span>out<span class="token punctuation">,</span> arr<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>ridx<span class="token punctuation">:</span><span class="token format-spec">04d</span><span class="token punctuation">&#125;</span></span><span class="token string">] :: output </span><span class="token interpolation"><span class="token punctuation">&#123;</span>out<span class="token punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token punctuation">&#123;</span>arr<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>            <span class="token keyword">case</span> ShuffleBlock<span class="token punctuation">(</span>f1<span class="token punctuation">,</span> f2<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>ridx<span class="token punctuation">:</span><span class="token format-spec">04d</span><span class="token punctuation">&#125;</span></span><span class="token string">] :: shuffleblock </span><span class="token interpolation"><span class="token punctuation">&#123;</span>f1<span class="token punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token punctuation">&#123;</span>f2<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>            <span class="token keyword">case</span> MultAdd<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> val<span class="token punctuation">,</span> k<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>ridx<span class="token punctuation">:</span><span class="token format-spec">04d</span><span class="token punctuation">&#125;</span></span><span class="token string">] :: madd </span><span class="token interpolation"><span class="token punctuation">&#123;</span>dst<span class="token punctuation">&#125;</span></span><span class="token string"> += (</span><span class="token interpolation"><span class="token punctuation">&#123;</span>val<span class="token punctuation">&#125;</span></span><span class="token string"> * </span><span class="token interpolation"><span class="token punctuation">&#123;</span>k<span class="token punctuation">&#125;</span></span><span class="token string">)'</span></span><span class="token punctuation">)</span>            <span class="token keyword">case</span> Aop<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> op<span class="token punctuation">,</span> val<span class="token punctuation">,</span> k<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>ridx<span class="token punctuation">:</span><span class="token format-spec">04d</span><span class="token punctuation">&#125;</span></span><span class="token string">] :: aop </span><span class="token interpolation"><span class="token punctuation">&#123;</span>dst<span class="token punctuation">&#125;</span></span><span class="token string"> += (</span><span class="token interpolation"><span class="token punctuation">&#123;</span>val<span class="token punctuation">&#125;</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">&#123;</span>op<span class="token punctuation">&#125;</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">&#123;</span>k<span class="token punctuation">&#125;</span></span><span class="token string">)'</span></span><span class="token punctuation">)</span>            <span class="token keyword">case</span> Reset<span class="token punctuation">(</span>ridx<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>ridx<span class="token punctuation">:</span><span class="token format-spec">04d</span><span class="token punctuation">&#125;</span></span><span class="token string">] :: reset'</span></span><span class="token punctuation">)</span>            <span class="token keyword">case</span> Trunc<span class="token punctuation">(</span>val<span class="token punctuation">,</span> k<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>ridx<span class="token punctuation">:</span><span class="token format-spec">04d</span><span class="token punctuation">&#125;</span></span><span class="token string">] :: trunc </span><span class="token interpolation"><span class="token punctuation">&#123;</span>val<span class="token punctuation">&#125;</span></span><span class="token string"> &amp;= 0x</span><span class="token interpolation"><span class="token punctuation">&#123;</span>k<span class="token punctuation">:</span><span class="token format-spec">x</span><span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>            <span class="token keyword">case</span> ArraySlots<span class="token punctuation">(</span>values<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>ridx<span class="token punctuation">:</span><span class="token format-spec">04d</span><span class="token punctuation">&#125;</span></span><span class="token string">] :: array [</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token string">", "</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">hex</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> values<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">]'</span></span><span class="token punctuation">)</span>            <span class="token keyword">case</span> Shellcode<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> code<span class="token punctuation">,</span> ridx<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>ridx<span class="token punctuation">:</span><span class="token format-spec">04d</span><span class="token punctuation">&#125;</span></span><span class="token string">] :: exec </span><span class="token interpolation"><span class="token punctuation">&#123;</span>dst<span class="token punctuation">&#125;</span></span><span class="token string"> &lt;- </span><span class="token interpolation"><span class="token punctuation">&#123;</span>code<span class="token punctuation">.</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'-'</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span>                <span class="token keyword">for</span> i <span class="token keyword">in</span> md<span class="token punctuation">.</span>disasm<span class="token punctuation">(</span>code<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token keyword">if</span> i<span class="token punctuation">.</span>mnemonic <span class="token operator">==</span> <span class="token string">'ret'</span><span class="token punctuation">:</span>                        <span class="token keyword">break</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"    0x%x:\t%s\t%s"</span> <span class="token operator">%</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>address<span class="token punctuation">,</span> i<span class="token punctuation">.</span>mnemonic<span class="token punctuation">,</span> i<span class="token punctuation">.</span>op_str<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'0x8040e4'</span><span class="token punctuation">,</span> <span class="token string">'s5'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'0x8040cc'</span><span class="token punctuation">,</span> <span class="token string">'s4'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'-'</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span>            <span class="token keyword">case</span> <span class="token keyword">_</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>op<span class="token punctuation">)</span>LIFTS <span class="token operator">=</span> <span class="token punctuation">[</span>    lift_mov_add<span class="token punctuation">,</span>    remove_sizes<span class="token punctuation">,</span>    lift_indirect<span class="token punctuation">,</span>    lift_block<span class="token punctuation">,</span>    lift_reset<span class="token punctuation">,</span>    lift_shuffle_block<span class="token punctuation">,</span>    lift_output<span class="token punctuation">,</span>    lift_multadd<span class="token punctuation">,</span>    lift_truncate<span class="token punctuation">,</span>    lift_array_slots<span class="token punctuation">,</span>    lift_shellcode<span class="token punctuation">,</span>    lift_aop<span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">lift</span><span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> lift_fn <span class="token keyword">in</span> LIFTS<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'[*] </span><span class="token interpolation"><span class="token punctuation">&#123;</span>lift_fn<span class="token punctuation">.</span>__name__<span class="token punctuation">&#125;</span></span><span class="token string">...'</span></span><span class="token punctuation">)</span>        instructions <span class="token operator">=</span> lift_fn<span class="token punctuation">(</span>instructions<span class="token punctuation">)</span>    <span class="token keyword">return</span> instructionsinstructions <span class="token operator">=</span> parse<span class="token punctuation">(</span>b<span class="token punctuation">)</span>instructions <span class="token operator">=</span> lift<span class="token punctuation">(</span>instructions<span class="token punctuation">)</span>dump<span class="token punctuation">(</span>instructions<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这题主要是把opcode和data都放到了重定位表里，而lief解析重定位数据和符号引用非常好。跑出来大概有1300行左右的伪代码，然后再转成汇编的样子。</p><p>因为伪代码到汇编的转换只需要1300行就够了，后面都是无用指令，所以lift_array_slots函数需要把循环条件缩小到1300行就行了，要不然会去翻译十万行指令，比较浪费时间</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">.rela.dyn           RELA           804272    24fd08    4272      0.767243  ALLOC                         LOAD           [*] Loading relocations...[*] Parsing...[*] lift_mov_add...[*] remove_sizes...[*] lift_indirect...[*] lift_block...[*] lift_reset...[*] lift_shuffle_block...[*] lift_output...[*] lift_multadd...[*] lift_truncate...[*] lift_array_slots...[*] lift_shellcode...[*] lift_aop...REL(dst&#x3D;baseaddr(), val&#x3D;0, ridx&#x3D;3)REL(dst&#x3D;baseaddr(), val&#x3D;0, ridx&#x3D;4)[0005] :: mov s2, &amp;flag[0][0007] :: mov(1) s4, s2[0008] :: [ARRAY SLOT][0009] :: mov arr[15], &amp;1585408084625667200[0010] :: mov arr[16], &amp;195xorbyte ptr [s4], 0x16[0011] :: mov s3, &amp;arr[15][0012] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0013] :: add arr[15], s3, 0[0014] :: mov s2, &amp;r101002.r_address[0016] :: mov(24) arr[15], s2[0017] :: [ARRAY SLOT][0018] :: mov arr[42], &amp;141015791240320[0019] :: mov arr[43], &amp;195add byte ptr [s4],0[0020] :: mov s3, &amp;arr[42][0021] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0022] :: add arr[42], s3, 0[0023] :: mov arr[42], s2[0024] :: mov s2, &amp;s4[0026] :: mov(1) arr[0], s2[0027] :: mov s2, &amp;flag[1][0028] :: mov s4, s2[0029] :: [ARRAY SLOT][0030] :: mov arr[78], &amp;1657465678663595136[0031] :: mov arr[79], &amp;195xorbyte ptr [s4], 0x17[0032] :: mov s3, &amp;arr[78][0033] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0034] :: add arr[78], s3, 0[0035] :: mov s2, &amp;r101002.r_address[0037] :: mov(24) arr[78], s2[0038] :: [ARRAY SLOT][0039] :: mov arr[105], &amp;72198609829168256[0040] :: mov arr[106], &amp;195add byte ptr [s4],1[0041] :: mov s3, &amp;arr[105][0042] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0043] :: add arr[105], s3, 0[0044] :: mov arr[105], s2[0045] :: mov s2, &amp;s4[0047] :: mov(1) arr[0], s2[0048] :: mov s2, &amp;flag[2][0049] :: mov s4, s2[0050] :: [ARRAY SLOT][0051] :: mov arr[141], &amp;1153062520398099584[0052] :: mov arr[142], &amp;195xorbyte ptr [s4], 0x10[0053] :: mov s3, &amp;arr[141][0054] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0055] :: add arr[141], s3, 0[0056] :: mov s2, &amp;r101002.r_address[0058] :: mov(24) arr[141], s2[0059] :: [ARRAY SLOT][0060] :: mov arr[168], &amp;144256203867096192[0061] :: mov arr[169], &amp;195add byte ptr [s4],2[0062] :: mov s3, &amp;arr[168][0063] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0064] :: add arr[168], s3, 0[0065] :: mov arr[168], s2[0066] :: mov s2, &amp;s4[0068] :: mov(1) arr[0], s2[0069] :: mov s2, &amp;flag[3][0070] :: mov s4, s2[0071] :: [ARRAY SLOT][0072] :: mov arr[204], &amp;1297177708473955456[0073] :: mov arr[205], &amp;195xorbyte ptr [s4], 0x12[0074] :: mov s3, &amp;arr[204][0075] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0076] :: add arr[204], s3, 0[0077] :: mov s2, &amp;r101002.r_address[0079] :: mov(24) arr[204], s2[0080] :: [ARRAY SLOT][0081] :: mov arr[231], &amp;216313797905024128[0082] :: mov arr[232], &amp;195add byte ptr [s4],3[0083] :: mov s3, &amp;arr[231][0084] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0085] :: add arr[231], s3, 0[0086] :: mov arr[231], s2[0087] :: mov s2, &amp;s4[0089] :: mov(1) arr[0], s2[0090] :: mov s2, &amp;flag[4][0091] :: mov s4, s2[0092] :: exec r92.r_address &lt;- 803425cc40800010c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x10--------------------[0101] :: array [0x4008040cc250480, 0xc3, 0x0][0104] :: mov s3, &amp;r101.r_address[0105] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0106] :: add r101.r_address, s3, 0[0107] :: mov r101.r_address, s2[0108] :: mov s2, &amp;s4[0110] :: mov(1) arr[0], s2[0111] :: mov s2, &amp;flag[5][0112] :: mov s4, s2[0113] :: exec r113.r_address &lt;- 803425cc40800011c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x11--------------------[0122] :: array [0x5008040cc250480, 0xc3, 0x0][0125] :: mov s3, &amp;r122.r_address[0126] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0127] :: add r122.r_address, s3, 0[0128] :: mov r122.r_address, s2[0129] :: mov s2, &amp;s4[0131] :: mov(1) arr[0], s2[0132] :: mov s2, &amp;flag[6][0133] :: mov s4, s2[0134] :: exec r134.r_address &lt;- 803425cc40800012c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x12--------------------[0143] :: array [0x6008040cc250480, 0xc3, 0x0][0146] :: mov s3, &amp;r143.r_address[0147] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0148] :: add r143.r_address, s3, 0[0149] :: mov r143.r_address, s2[0150] :: mov s2, &amp;s4[0152] :: mov(1) arr[0], s2[0153] :: mov s2, &amp;flag[7][0154] :: mov s4, s2[0155] :: exec r155.r_address &lt;- 803425cc40800013c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x13--------------------[0164] :: array [0x7008040cc250480, 0xc3, 0x0][0167] :: mov s3, &amp;r164.r_address[0168] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0169] :: add r164.r_address, s3, 0[0170] :: mov r164.r_address, s2[0171] :: mov s2, &amp;s4[0173] :: mov(1) arr[0], s2[0174] :: mov s2, &amp;flag[8][0175] :: mov s4, s2[0176] :: exec r176.r_address &lt;- 803425cc40800014c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x14--------------------[0185] :: array [0x8008040cc250480, 0xc3, 0x0][0188] :: mov s3, &amp;r185.r_address[0189] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0190] :: add r185.r_address, s3, 0[0191] :: mov r185.r_address, s2[0192] :: mov s2, &amp;s4[0194] :: mov(1) arr[1], s2[0195] :: mov s2, &amp;flag[9][0196] :: mov s4, s2[0197] :: exec r197.r_address &lt;- 803425cc40800015c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x15--------------------[0206] :: array [0x9008040cc250480, 0xc3, 0x0][0209] :: mov s3, &amp;r206.r_address[0210] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0211] :: add r206.r_address, s3, 0[0212] :: mov r206.r_address, s2[0213] :: mov s2, &amp;s4[0215] :: mov(1) arr[1], s2[0216] :: mov s2, &amp;flag[10][0217] :: mov s4, s2[0218] :: exec r218.r_address &lt;- 803425cc40800016c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x16--------------------[0227] :: array [0xa008040cc250480, 0xc3, 0x0][0230] :: mov s3, &amp;r227.r_address[0231] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0232] :: add r227.r_address, s3, 0[0233] :: mov r227.r_address, s2[0234] :: mov s2, &amp;s4[0236] :: mov(1) arr[1], s2[0237] :: mov s2, &amp;flag[11][0238] :: mov s4, s2[0239] :: exec r239.r_address &lt;- 803425cc40800017c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x17--------------------[0248] :: array [0xb008040cc250480, 0xc3, 0x0][0251] :: mov s3, &amp;r248.r_address[0252] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0253] :: add r248.r_address, s3, 0[0254] :: mov r248.r_address, s2[0255] :: mov s2, &amp;s4[0257] :: mov(1) arr[1], s2[0258] :: mov s2, &amp;flag[12][0259] :: mov s4, s2[0260] :: exec r260.r_address &lt;- 803425cc40800018c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x18--------------------[0269] :: array [0xc008040cc250480, 0xc3, 0x0][0272] :: mov s3, &amp;r269.r_address[0273] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0274] :: add r269.r_address, s3, 0[0275] :: mov r269.r_address, s2[0276] :: mov s2, &amp;s4[0278] :: mov(1) arr[1], s2[0279] :: mov s2, &amp;flag[13][0280] :: mov s4, s2[0281] :: exec r281.r_address &lt;- 803425cc40800019c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x19--------------------[0290] :: array [0xd008040cc250480, 0xc3, 0x0][0293] :: mov s3, &amp;r290.r_address[0294] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0295] :: add r290.r_address, s3, 0[0296] :: mov r290.r_address, s2[0297] :: mov s2, &amp;s4[0299] :: mov(1) arr[1], s2[0300] :: mov s2, &amp;flag[14][0301] :: mov s4, s2[0302] :: exec r302.r_address &lt;- 803425cc40800024c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x24--------------------[0311] :: array [0xe008040cc250480, 0xc3, 0x0][0314] :: mov s3, &amp;r311.r_address[0315] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0316] :: add r311.r_address, s3, 0[0317] :: mov r311.r_address, s2[0318] :: mov s2, &amp;s4[0320] :: mov(1) arr[1], s2[0321] :: mov s2, &amp;flag[15][0322] :: mov s4, s2[0323] :: exec r323.r_address &lt;- 803425cc4080002cc3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x2c--------------------[0332] :: array [0xf008040cc250480, 0xc3, 0x0][0335] :: mov s3, &amp;r332.r_address[0336] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0337] :: add r332.r_address, s3, 0[0338] :: mov r332.r_address, s2[0339] :: mov s2, &amp;s4[0341] :: mov(1) arr[1], s2[0342] :: mov s2, &amp;flag[16][0343] :: mov s4, s2[0344] :: exec r344.r_address &lt;- 803425cc40800026c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x26--------------------[0353] :: array [0x10008040cc250480, 0xc3, 0x0][0356] :: mov s3, &amp;r353.r_address[0357] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0358] :: add r353.r_address, s3, 0[0359] :: mov r353.r_address, s2[0360] :: mov s2, &amp;s4[0362] :: mov(1) arr[2], s2[0363] :: mov s2, &amp;flag[17][0364] :: mov s4, s2[0365] :: exec r365.r_address &lt;- 803425cc4080001ec3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x1e--------------------[0374] :: array [0x11008040cc250480, 0xc3, 0x0][0377] :: mov s3, &amp;r374.r_address[0378] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0379] :: add r374.r_address, s3, 0[0380] :: mov r374.r_address, s2[0381] :: mov s2, &amp;s4[0383] :: mov(1) arr[2], s2[0384] :: mov s2, &amp;flag[18][0385] :: mov s4, s2[0386] :: exec r386.r_address &lt;- 803425cc4080001fc3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x1f--------------------[0395] :: array [0x12008040cc250480, 0xc3, 0x0][0398] :: mov s3, &amp;r395.r_address[0399] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0400] :: add r395.r_address, s3, 0[0401] :: mov r395.r_address, s2[0402] :: mov s2, &amp;s4[0404] :: mov(1) arr[2], s2[0405] :: mov s2, &amp;flag[19][0406] :: mov s4, s2[0407] :: exec r407.r_address &lt;- 803425cc40800020c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x20--------------------[0416] :: array [0x13008040cc250480, 0xc3, 0x0][0419] :: mov s3, &amp;r416.r_address[0420] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0421] :: add r416.r_address, s3, 0[0422] :: mov r416.r_address, s2[0423] :: mov s2, &amp;s4[0425] :: mov(1) arr[2], s2[0426] :: mov s2, &amp;flag[20][0427] :: mov s4, s2[0428] :: exec r428.r_address &lt;- 803425cc40800020c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x20--------------------[0437] :: array [0x14008040cc250480, 0xc3, 0x0][0440] :: mov s3, &amp;r437.r_address[0441] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0442] :: add r437.r_address, s3, 0[0443] :: mov r437.r_address, s2[0444] :: mov s2, &amp;s4[0446] :: mov(1) arr[2], s2[0447] :: mov s2, &amp;flag[21][0448] :: mov s4, s2[0449] :: exec r449.r_address &lt;- 803425cc40800021c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x21--------------------[0458] :: array [0x15008040cc250480, 0xc3, 0x0][0461] :: mov s3, &amp;r458.r_address[0462] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0463] :: add r458.r_address, s3, 0[0464] :: mov r458.r_address, s2[0465] :: mov s2, &amp;s4[0467] :: mov(1) arr[2], s2[0468] :: mov s2, &amp;flag[22][0469] :: mov s4, s2[0470] :: exec r470.r_address &lt;- 803425cc40800023c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x23--------------------[0479] :: array [0x16008040cc250480, 0xc3, 0x0][0482] :: mov s3, &amp;r479.r_address[0483] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0484] :: add r479.r_address, s3, 0[0485] :: mov r479.r_address, s2[0486] :: mov s2, &amp;s4[0488] :: mov(1) arr[2], s2[0489] :: mov s2, &amp;flag[23][0490] :: mov s4, s2[0491] :: exec r491.r_address &lt;- 803425cc40800027c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x27--------------------[0500] :: array [0x17008040cc250480, 0xc3, 0x0][0503] :: mov s3, &amp;r500.r_address[0504] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0505] :: add r500.r_address, s3, 0[0506] :: mov r500.r_address, s2[0507] :: mov s2, &amp;s4[0509] :: mov(1) arr[2], s2[0510] :: mov s2, &amp;flag[24][0511] :: mov s4, s2[0512] :: exec r512.r_address &lt;- 803425cc40800024c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x24--------------------[0521] :: array [0x18008040cc250480, 0xc3, 0x0][0524] :: mov s3, &amp;r521.r_address[0525] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0526] :: add r521.r_address, s3, 0[0527] :: mov r521.r_address, s2[0528] :: mov s2, &amp;s4[0530] :: mov(1) arr[3], s2[0531] :: mov s2, &amp;flag[25][0532] :: mov s4, s2[0533] :: exec r533.r_address &lt;- 803425cc40800025c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x25--------------------[0542] :: array [0x19008040cc250480, 0xc3, 0x0][0545] :: mov s3, &amp;r542.r_address[0546] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0547] :: add r542.r_address, s3, 0[0548] :: mov r542.r_address, s2[0549] :: mov s2, &amp;s4[0551] :: mov(1) arr[3], s2[0552] :: mov s2, &amp;flag[26][0553] :: mov s4, s2[0554] :: exec r554.r_address &lt;- 803425cc40800026c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x26--------------------[0563] :: array [0x1a008040cc250480, 0xc3, 0x0][0566] :: mov s3, &amp;r563.r_address[0567] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0568] :: add r563.r_address, s3, 0[0569] :: mov r563.r_address, s2[0570] :: mov s2, &amp;s4[0572] :: mov(1) arr[3], s2[0573] :: mov s2, &amp;flag[27][0574] :: mov s4, s2[0575] :: exec r575.r_address &lt;- 803425cc40800027c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [s4], 0x27--------------------[0584] :: array [0x1b008040cc250480, 0xc3, 0x0][0587] :: mov s3, &amp;r584.r_address[0588] :: setinfo s3, name&#x3D;0x1a, info&#x3D;0x1, other&#x3D;0x0, shndx&#x3D;0x0[0589] :: add r584.r_address, s3, 0[0590] :: mov r584.r_address, s2[0591] :: mov s2, &amp;s4[0593] :: mov(1) arr[3], s2[0594] :: mov s4, &amp;0[0595] :: mov fail(), &amp;0[0596] :: mov s5, &amp;0[0597] :: mov s2, &amp;arr[0][0599] :: mov s6, s2[0600] :: exec r600.r_address &lt;- 803425fc40800070c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x70--------------------[0609] :: mov s2, &amp;s6[0611] :: add s5, s5, s2[0614] :: mov s6, &amp;0[0615] :: mov s2, &amp;arr[0][0616] :: mov s6, s2[0617] :: exec r617.r_address &lt;- 803425fc4080007cc3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x7c--------------------[0626] :: mov s2, &amp;s6[0628] :: add s5, s5, s2[0631] :: mov s6, &amp;0[0632] :: mov s2, &amp;arr[0][0633] :: mov s6, s2[0634] :: exec r634.r_address &lt;- 803425fc40800073c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x73--------------------[0643] :: mov s2, &amp;s6[0645] :: add s5, s5, s2[0648] :: mov s6, &amp;0[0649] :: mov s2, &amp;arr[0][0650] :: mov s6, s2[0651] :: exec r651.r_address &lt;- 803425fc40800078c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x78--------------------[0660] :: mov s2, &amp;s6[0662] :: add s5, s5, s2[0665] :: mov s6, &amp;0[0666] :: mov s2, &amp;arr[0][0667] :: mov s6, s2[0668] :: exec r668.r_address &lt;- 803425fc4080006fc3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x6f--------------------[0677] :: mov s2, &amp;s6[0679] :: add s5, s5, s2[0682] :: mov s6, &amp;0[0683] :: mov s2, &amp;arr[0][0684] :: mov s6, s2[0685] :: exec r685.r_address &lt;- 803425fc40800027c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x27--------------------[0694] :: mov s2, &amp;s6[0696] :: add s5, s5, s2[0699] :: mov s6, &amp;0[0700] :: mov s2, &amp;arr[0][0701] :: mov s6, s2[0702] :: exec r702.r_address &lt;- 803425fc4080002ac3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x2a--------------------[0711] :: mov s2, &amp;s6[0713] :: add s5, s5, s2[0716] :: mov s6, &amp;0[0717] :: mov s2, &amp;arr[0][0718] :: mov s6, s2[0719] :: exec r719.r_address &lt;- 803425fc4080002cc3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x2c--------------------[0728] :: mov s2, &amp;s6[0730] :: add s5, s5, s2[0733] :: mov s6, &amp;0[0734] :: mov s2, &amp;arr[1][0735] :: mov s6, s2[0736] :: exec r736.r_address &lt;- 803425fc4080007fc3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x7f--------------------[0745] :: mov s2, &amp;s6[0747] :: add s5, s5, s2[0750] :: mov s6, &amp;0[0751] :: mov s2, &amp;arr[1][0752] :: mov s6, s2[0753] :: exec r753.r_address &lt;- 803425fc40800035c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x35--------------------[0762] :: mov s2, &amp;s6[0764] :: add s5, s5, s2[0767] :: mov s6, &amp;0[0768] :: mov s2, &amp;arr[1][0769] :: mov s6, s2[0770] :: exec r770.r_address &lt;- 803425fc4080002dc3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x2d--------------------[0779] :: mov s2, &amp;s6[0781] :: add s5, s5, s2[0784] :: mov s6, &amp;0[0785] :: mov s2, &amp;arr[1][0786] :: mov s6, s2[0787] :: exec r787.r_address &lt;- 803425fc40800032c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x32--------------------[0796] :: mov s2, &amp;s6[0798] :: add s5, s5, s2[0801] :: mov s6, &amp;0[0802] :: mov s2, &amp;arr[1][0803] :: mov s6, s2[0804] :: exec r804.r_address &lt;- 803425fc40800037c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x37--------------------[0813] :: mov s2, &amp;s6[0815] :: add s5, s5, s2[0818] :: mov s6, &amp;0[0819] :: mov s2, &amp;arr[1][0820] :: mov s6, s2[0821] :: exec r821.r_address &lt;- 803425fc4080003bc3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x3b--------------------[0830] :: mov s2, &amp;s6[0832] :: add s5, s5, s2[0835] :: mov s6, &amp;0[0836] :: mov s2, &amp;arr[1][0837] :: mov s6, s2[0838] :: exec r838.r_address &lt;- 803425fc40800022c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x22--------------------[0847] :: mov s2, &amp;s6[0849] :: add s5, s5, s2[0852] :: mov s6, &amp;0[0853] :: mov s2, &amp;arr[1][0854] :: mov s6, s2[0855] :: exec r855.r_address &lt;- 803425fc40800059c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x59--------------------[0864] :: mov s2, &amp;s6[0866] :: add s5, s5, s2[0869] :: mov s6, &amp;0[0870] :: mov s2, &amp;arr[2][0871] :: mov s6, s2[0872] :: exec r872.r_address &lt;- 803425fc40800053c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x53--------------------[0881] :: mov s2, &amp;s6[0883] :: add s5, s5, s2[0886] :: mov s6, &amp;0[0887] :: mov s2, &amp;arr[2][0888] :: mov s6, s2[0889] :: exec r889.r_address &lt;- 803425fc4080008ec3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x8e--------------------[0898] :: mov s2, &amp;s6[0900] :: add s5, s5, s2[0903] :: mov s6, &amp;0[0904] :: mov s2, &amp;arr[2][0905] :: mov s6, s2[0906] :: exec r906.r_address &lt;- 803425fc4080003dc3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x3d--------------------[0915] :: mov s2, &amp;s6[0917] :: add s5, s5, s2[0920] :: mov s6, &amp;0[0921] :: mov s2, &amp;arr[2][0922] :: mov s6, s2[0923] :: exec r923.r_address &lt;- 803425fc4080002ac3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x2a--------------------[0932] :: mov s2, &amp;s6[0934] :: add s5, s5, s2[0937] :: mov s6, &amp;0[0938] :: mov s2, &amp;arr[2][0939] :: mov s6, s2[0940] :: exec r940.r_address &lt;- 803425fc40800059c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x59--------------------[0949] :: mov s2, &amp;s6[0951] :: add s5, s5, s2[0954] :: mov s6, &amp;0[0955] :: mov s2, &amp;arr[2][0956] :: mov s6, s2[0957] :: exec r957.r_address &lt;- 803425fc40800027c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x27--------------------[0966] :: mov s2, &amp;s6[0968] :: add s5, s5, s2[0971] :: mov s6, &amp;0[0972] :: mov s2, &amp;arr[2][0973] :: mov s6, s2[0974] :: exec r974.r_address &lt;- 803425fc4080002dc3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x2d--------------------[0983] :: mov s2, &amp;s6[0985] :: add s5, s5, s2[0988] :: mov s6, &amp;0[0989] :: mov s2, &amp;arr[2][0990] :: mov s6, s2[0991] :: exec r991.r_address &lt;- 803425fc40800029c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x29--------------------[1000] :: mov s2, &amp;s6[1002] :: add s5, s5, s2[1005] :: mov s6, &amp;0[1006] :: mov s2, &amp;arr[3][1007] :: mov s6, s2[1008] :: exec r1008.r_address &lt;- 803425fc40800034c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x34--------------------[1017] :: mov s2, &amp;s6[1019] :: add s5, s5, s2[1022] :: mov s6, &amp;0[1023] :: mov s2, &amp;arr[3][1024] :: mov s6, s2[1025] :: exec r1025.r_address &lt;- 803425fc4080002dc3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x2d--------------------[1034] :: mov s2, &amp;s6[1036] :: add s5, s5, s2[1039] :: mov s6, &amp;0[1040] :: mov s2, &amp;arr[3][1041] :: mov s6, s2[1042] :: exec r1042.r_address &lt;- 803425fc40800061c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x61--------------------[1051] :: mov s2, &amp;s6[1053] :: add s5, s5, s2[1056] :: mov s6, &amp;0[1057] :: mov s2, &amp;arr[3][1058] :: mov s6, s2[1059] :: exec r1059.r_address &lt;- 803425fc40800032c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x8040fc], 0x32--------------------[1068] :: mov s2, &amp;s6[1070] :: add s5, s5, s2[1073] :: mov s6, &amp;0[1074] :: mov s2, &amp;flag[28] s2 &#x3D; flag[28][1075] :: mov s6, s2 s6 &#x3D; s2 &#x3D; flag[28][1076] :: mov s2, &amp;flag[29] s2 &#x3D; flag[29][1077] :: mov s7, s2 s7 &#x3D; s2 &#x3D; flag[29][1078] :: mov s8, &amp;0 s8 &#x3D; 0[1079] :: mov s2, &amp;s8 s2 &#x3D; s8 &#x3D;0[1080] :: add s8, s8, s2 s8 &#x3D; s8 + s2 &#x3D; 0[1083] :: mov s2, &amp;s6 s2 &#x3D; s6[1084] :: add s8, s8, s2 s8 &#x3D; s8 + s2 &#x3D; flag[28][1087] :: mov s9, &amp;0 s9 &#x3D; 0[1088] :: mov s2, &amp;s9 s2 &#x3D; s9 &#x3D; 0[1089] :: add s9, s9, s2 s9 &#x3D; s9 + s2 &#x3D; 0[1092] :: mov s2, &amp;s7 s2 &#x3D; s7 &#x3D; flag[29][1093] :: add s9, s9, s2 s9 &#x3D; s9 + s2 &#x3D; flag[29][1096] :: mov s2, &amp;s9 s2 &#x3D; s9 &#x3D; flag[29][1097] :: add s10, s8, s2 s10 &#x3D; s8 + s2 &#x3D; flag[28] + flag[29][1100] :: exec r1100.r_address &lt;- 8034255c4180006cc3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x80415c], 0x6c--------------------[1109] :: mov s2, &amp;s10[1111] :: add s5, s5, s2[1114] :: mov s6, &amp;0[1115] :: mov s7, &amp;0[1116] :: mov s8, &amp;0[1117] :: mov s9, &amp;0[1118] :: mov s10, &amp;0[1119] :: mov s2, &amp;flag[28] s2 &#x3D; flag[28][1120] :: mov s6, s2 s6 &#x3D; s2 &#x3D; flag[28][1121] :: mov s2, &amp;flag[29] s2 &#x3D; flag[29][1122] :: mov s7, s2 s7 &#x3D; s2 &#x3D; flag[29][1123] :: mov s8, &amp;0 s8 &#x3D; 0[1124] :: mov s2, &amp;s8 s2 &#x3D; s8 &#x3D;0[1125] :: add s8, s8, s2 s8 &#x3D; s8 + s2 &#x3D; 0[1128] :: mov s2, &amp;s6 s2 &#x3D; s6[1129] :: add s8, s8, s2 s8 &#x3D; s8 + s2 &#x3D; flag[28][1132] :: mov s2, &amp;s8 s2 &#x3D; s8 &#x3D; flag[28][1133] :: add s8, s8, s2 s8 &#x3D; s8 + s2 &#x3D; flag[28] + flag[28][1136] :: mov s9, &amp;0 s9 &#x3D; 0[1137] :: mov s2, &amp;s9 s2 &#x3D; s9 &#x3D; 0[1138] :: add s9, s9, s2 s9 &#x3D; s9 + s2 &#x3D; 0[1141] :: mov s2, &amp;s7 s2 &#x3D; s7 &#x3D; flag[29][1142] :: add s9, s9, s2 s9 &#x3D; s9 + s2 &#x3D; flag[29][1145] :: mov s2, &amp;s9 s2 &#x3D; s9 &#x3D; flag[29][1146] :: add s10, s8, s2 s10 &#x3D; s8 + s2 &#x3D; 2*flag[28] + flag[29][1149] :: exec r1149.r_address &lt;- 8034255c418000a1c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x80415c], 0xa1--------------------[1158] :: mov s2, &amp;s10[1160] :: add s5, s5, s2[1163] :: mov s6, &amp;0[1164] :: mov s7, &amp;0[1165] :: mov s8, &amp;0[1166] :: mov s9, &amp;0[1167] :: mov s10, &amp;0[1168] :: mov s2, &amp;flag[30] s2 &#x3D; flag[30][1169] :: mov s6, s2 s6 &#x3D; s2 &#x3D; flag[30][1170] :: mov s2, &amp;flag[31] s2 &#x3D; flag[31][1171] :: mov s7, s2 s7 &#x3D; s2 &#x3D; flag[31][1172] :: mov s8, &amp;0 s8 &#x3D; 0[1173] :: mov s2, &amp;s8 s2 &#x3D; s8 &#x3D; 0[1174] :: add s8, s8, s2 s8 &#x3D; s8 + s2 &#x3D; 0[1177] :: mov s2, &amp;s6 s2 &#x3D; s6 &#x3D; flag[30][1178] :: add s8, s8, s2 s8 &#x3D; s8 + s2 &#x3D; flag[30][1181] :: mov s9, &amp;0 s9 &#x3D; 0[1182] :: mov s2, &amp;s9 s2 &#x3D; s9 &#x3D; 0[1183] :: add s9, s9, s2  s9 &#x3D; s9 + s2 &#x3D; 0[1186] :: mov s2, &amp;s7 s2 &#x3D; s7 &#x3D; flag[31][1187] :: add s9, s9, s2 s9 &#x3D; s9 + s2 &#x3D; flag[31][1190] :: mov s2, &amp;s9 s2 &#x3D; s9 &#x3D; flag[31][1191] :: add s10, s8, s2 s10 &#x3D; s8 + s2 &#x3D; flag[31] + flag[30][1194] :: exec r1194.r_address &lt;- 8034255c418000b1c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x80415c], 0xb1--------------------[1203] :: mov s2, &amp;s10[1205] :: add s5, s5, s2[1208] :: mov s6, &amp;0[1209] :: mov s7, &amp;0[1210] :: mov s8, &amp;0[1211] :: mov s9, &amp;0[1212] :: mov s10, &amp;0[1213] :: mov s2, &amp;flag[30] s2 &#x3D; flag[30][1214] :: mov s6, s2 s6 &#x3D; s2 &#x3D; flag[30][1215] :: mov s2, &amp;flag[31] s2 &#x3D; flag[31][1216] :: mov s7, s2 s7 &#x3D; s2 &#x3D; flag[31][1217] :: mov s8, &amp;0 s8 &#x3D; 0[1218] :: mov s2, &amp;s8 s2 &#x3D; s8 &#x3D; 0[1219] :: add s8, s8, s2 s8 &#x3D; s8 + s2 &#x3D; 0 [1222] :: mov s2, &amp;s6 s2 &#x3D; s6 &#x3D; flag[30][1223] :: add s8, s8, s2 s8 &#x3D; s8 + s2 &#x3D; flag[30][1226] :: mov s2, &amp;s8 s2 &#x3D; s8[1227] :: add s8, s8, s2 s8 &#x3D; s8 + s2 &#x3D; 2*flag[30] [1230] :: mov s9, &amp;0 s9 &#x3D; 0[1231] :: mov s2, &amp;s9 s2 &#x3D; s9 &#x3D; 0 [1232] :: add s9, s9, s2 s9 &#x3D; s9 + s2 &#x3D; 0[1235] :: mov s2, &amp;s7 s2&#x3D; s7[1236] :: add s9, s9, s2 s9&#x3D; s9 + s2 &#x3D; flag[31][1239] :: mov s2, &amp;s9 s2 &#x3D;s9[1240] :: add s10, s8, s2 s10 &#x3D; s8 + s2 &#x3D; 2*flag[30] + flag[31][1243] :: exec r1243.r_address &lt;- 8034255c418000e5c3000000000000000000000000000000--------------------    0x0:xorbyte ptr [0x80415c], 0xe5--------------------[1252] :: mov s2, &amp;s10[1254] :: add s5, s5, s2[1257] :: mov s6, &amp;0[1258] :: mov s7, &amp;0[1259] :: mov s8, &amp;0[1260] :: mov s9, &amp;0[1261] :: mov s10, &amp;0[1262] :: mov s2, &amp;s5[1264] :: mov(1) fail(), s2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我直接ctrl+c停止的，后面打印的都没有用，当然也可以修改脚本里面的dump函数</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806000538.png"></p><p>195的十六进制是C3,也就是汇编指令的ret<img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806000654.png"></p><p>所以怀疑这一段常数都是机器码，转成十六进制看看</p><p>1585408084625667200转成16进制1600 8040 CC25 3480，小端序转一下803425CC40800016</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806001009.png"></p><p>和这条比较像，27对应的是xor 0x27，那么16应该对应的是xor 16</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806001755.png"></p><p>141015791240320转成十六进制800425CC4080</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806003507.png"></p><p>最后总结一下前面的机器码的功能</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">xor      byte ptr [s4], 0x16add      byte ptr [s4],0xor      byte ptr [s4], 0x17add      byte ptr [s4],1xor      byte ptr [s4], 0x10add      byte ptr [s4],2xor     byte ptr [s4], 0x12add      byte ptr [s4],3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>伪代码大致可以分为三部分：第一部分对输入前28个字节进行异或和加常数；第二部分异或固定值来进行比较；第三部分可以通过题目提示进行hash爆破</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">keystream<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x16</span><span class="token punctuation">,</span><span class="token number">0x17</span><span class="token punctuation">,</span><span class="token number">0x10</span><span class="token punctuation">,</span><span class="token number">0x12</span><span class="token punctuation">,</span><span class="token number">0x10</span><span class="token punctuation">,</span><span class="token number">0x11</span><span class="token punctuation">,</span><span class="token number">0x12</span><span class="token punctuation">,</span><span class="token number">0x13</span><span class="token punctuation">,</span><span class="token number">0x14</span><span class="token punctuation">,</span><span class="token number">0x15</span><span class="token punctuation">,</span><span class="token number">0x16</span><span class="token punctuation">,</span><span class="token number">0x17</span><span class="token punctuation">,</span><span class="token number">0x18</span><span class="token punctuation">,</span><span class="token number">0x19</span><span class="token punctuation">,</span><span class="token number">0x24</span><span class="token punctuation">,</span><span class="token number">0x2c</span><span class="token punctuation">,</span><span class="token number">0x26</span><span class="token punctuation">,</span><span class="token number">0x1e</span><span class="token punctuation">,</span><span class="token number">0x1f</span><span class="token punctuation">,</span><span class="token number">0x20</span><span class="token punctuation">,</span><span class="token number">0x20</span><span class="token punctuation">,</span><span class="token number">0x21</span><span class="token punctuation">,</span><span class="token number">0x23</span><span class="token punctuation">,</span><span class="token number">0x27</span><span class="token punctuation">,</span><span class="token number">0x24</span><span class="token punctuation">,</span><span class="token number">0x25</span><span class="token punctuation">,</span><span class="token number">0x26</span><span class="token punctuation">,</span><span class="token number">0x27</span><span class="token punctuation">]</span>enc<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x70</span><span class="token punctuation">,</span><span class="token number">0x7c</span><span class="token punctuation">,</span><span class="token number">0x73</span><span class="token punctuation">,</span><span class="token number">0x78</span><span class="token punctuation">,</span><span class="token number">0x6f</span><span class="token punctuation">,</span><span class="token number">0x27</span><span class="token punctuation">,</span><span class="token number">0x2a</span><span class="token punctuation">,</span><span class="token number">0x2c</span><span class="token punctuation">,</span><span class="token number">0x7f</span><span class="token punctuation">,</span><span class="token number">0x35</span><span class="token punctuation">,</span><span class="token number">0x2d</span><span class="token punctuation">,</span><span class="token number">0x32</span><span class="token punctuation">,</span><span class="token number">0x37</span><span class="token punctuation">,</span><span class="token number">0x3b</span><span class="token punctuation">,</span><span class="token number">0x22</span><span class="token punctuation">,</span><span class="token number">0x59</span><span class="token punctuation">,</span><span class="token number">0x53</span><span class="token punctuation">,</span><span class="token number">0x8e</span><span class="token punctuation">,</span><span class="token number">0x3d</span><span class="token punctuation">,</span><span class="token number">0x2a</span><span class="token punctuation">,</span><span class="token number">0x59</span><span class="token punctuation">,</span><span class="token number">0x27</span><span class="token punctuation">,</span><span class="token number">0x2d</span><span class="token punctuation">,</span><span class="token number">0x29</span><span class="token punctuation">,</span><span class="token number">0x34</span><span class="token punctuation">,</span><span class="token number">0x2d</span><span class="token punctuation">,</span><span class="token number">0x61</span><span class="token punctuation">,</span><span class="token number">0x32</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>keystream<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token punctuation">)</span>t<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">28</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>keystream<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span>enc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token operator">^</span>keystream<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到flag{366c950370fec47e34581a0，然后爆破hash</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> hashlibxor<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x16</span><span class="token punctuation">,</span><span class="token number">0x17</span><span class="token punctuation">,</span><span class="token number">0x10</span><span class="token punctuation">,</span><span class="token number">0x12</span><span class="token punctuation">,</span><span class="token number">0x10</span><span class="token punctuation">,</span><span class="token number">0x11</span><span class="token punctuation">,</span><span class="token number">0x12</span><span class="token punctuation">,</span><span class="token number">0x13</span><span class="token punctuation">,</span><span class="token number">0x14</span><span class="token punctuation">,</span><span class="token number">0x15</span><span class="token punctuation">,</span><span class="token number">0x16</span><span class="token punctuation">,</span><span class="token number">0x17</span><span class="token punctuation">,</span><span class="token number">0x18</span><span class="token punctuation">,</span><span class="token number">0x19</span><span class="token punctuation">,</span><span class="token number">0x24</span><span class="token punctuation">,</span><span class="token number">0x2c</span><span class="token punctuation">,</span><span class="token number">0x26</span><span class="token punctuation">,</span><span class="token number">0x1e</span><span class="token punctuation">,</span><span class="token number">0x1f</span><span class="token punctuation">,</span><span class="token number">0x20</span><span class="token punctuation">,</span><span class="token number">0x20</span><span class="token punctuation">,</span><span class="token number">0x21</span><span class="token punctuation">,</span><span class="token number">0x23</span><span class="token punctuation">,</span><span class="token number">0x27</span><span class="token punctuation">,</span><span class="token number">0x24</span><span class="token punctuation">,</span><span class="token number">0x25</span><span class="token punctuation">,</span><span class="token number">0x26</span><span class="token punctuation">,</span><span class="token number">0x27</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>xor<span class="token punctuation">)</span><span class="token punctuation">)</span>encflag<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x70</span><span class="token punctuation">,</span><span class="token number">0x7c</span><span class="token punctuation">,</span><span class="token number">0x73</span><span class="token punctuation">,</span><span class="token number">0x78</span><span class="token punctuation">,</span><span class="token number">0x6f</span><span class="token punctuation">,</span><span class="token number">0x27</span><span class="token punctuation">,</span><span class="token number">0x2a</span><span class="token punctuation">,</span><span class="token number">0x2c</span><span class="token punctuation">,</span><span class="token number">0x7f</span><span class="token punctuation">,</span><span class="token number">0x35</span><span class="token punctuation">,</span><span class="token number">0x2d</span><span class="token punctuation">,</span><span class="token number">0x32</span><span class="token punctuation">,</span><span class="token number">0x37</span><span class="token punctuation">,</span><span class="token number">0x3b</span><span class="token punctuation">,</span><span class="token number">0x22</span><span class="token punctuation">,</span><span class="token number">0x59</span><span class="token punctuation">,</span><span class="token number">0x53</span><span class="token punctuation">,</span><span class="token number">0x8e</span><span class="token punctuation">,</span><span class="token number">0x3d</span><span class="token punctuation">,</span><span class="token number">0x2a</span><span class="token punctuation">,</span><span class="token number">0x59</span><span class="token punctuation">,</span><span class="token number">0x27</span><span class="token punctuation">,</span><span class="token number">0x2d</span><span class="token punctuation">,</span><span class="token number">0x29</span><span class="token punctuation">,</span><span class="token number">0x34</span><span class="token punctuation">,</span><span class="token number">0x2d</span><span class="token punctuation">,</span><span class="token number">0x61</span><span class="token punctuation">,</span><span class="token number">0x32</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>encflag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>encflag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>encflag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token operator">^</span>xor<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span>s <span class="token operator">=</span> <span class="token string">"flag&#123;366c950370fec47e34581a0"</span>l <span class="token operator">=</span> <span class="token string">"1234567890abcdef"</span><span class="token keyword">for</span> a <span class="token keyword">in</span> l<span class="token punctuation">:</span>    <span class="token keyword">for</span> b <span class="token keyword">in</span> l<span class="token punctuation">:</span>        <span class="token keyword">for</span> c <span class="token keyword">in</span> l<span class="token punctuation">:</span>            flag <span class="token operator">=</span> s<span class="token operator">+</span>a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token operator">+</span><span class="token string">"&#125;"</span>            sha <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>sha256<span class="token punctuation">(</span>flag<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> sha<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"f860464d767610bb"</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>                <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当然我们也可以分析flag最后一部分，详细解析都在上面的伪代码里</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806011555.png"></p><p>其实就是一个方程组求解，可以用z3</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> z3 <span class="token keyword">import</span> <span class="token operator">*</span>s <span class="token operator">=</span> Solver<span class="token punctuation">(</span><span class="token punctuation">)</span>flag_end <span class="token operator">=</span> <span class="token punctuation">[</span>BitVec<span class="token punctuation">(</span><span class="token string">'f%d'</span><span class="token operator">%</span>i<span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span>s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag_end<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> flag_end<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0x6c</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>flag_end<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> flag_end<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0xa1</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag_end<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> flag_end<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0xb1</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>flag_end<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> flag_end<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0xe5</span><span class="token punctuation">)</span><span class="token keyword">if</span> s<span class="token punctuation">.</span>check<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> sat<span class="token punctuation">:</span>   <span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>model<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>t<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">53</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token number">52</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> t<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="easyre"><a href="#easyre" class="headerlink" title="easyre"></a>easyre</h1><h2 id="Easyre"><a href="#Easyre" class="headerlink" title="Easyre"></a>Easyre</h2><p>这个文件是没有符号的，我们可以利用插件finger去恢复一下</p><p>安装教程：<a href="https://www.anquanke.com/post/id/256461">https://www.anquanke.com/post/id/256461</a></p><p>跑了一段时间可以恢复大部分的函数</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806141240.png"></p><p>首先分析一下sub_402150</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806141323.png"></p><p>这里是释放一个elf文件，名字为re3，我们可以自己dump，可以动调然后提取文件，elf的长度存放在dword_4C2070中</p><p>在fork函数执行完毕后，如果创建新进程成功，则出现两个进程，一个是子进程，一个是父进程。在子进程中，fork函数返回0，在父进程中，fork返回新创建子进程的进程ID。我们可以通过fork返回的值来判断当前进程是子进程还是父进程。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806161708.png"></p><p>父进程执行sub_401F2F后就删除了释放的文件，而子进程会执行sub_44CC50和sub_44B680操作</p><h3 id="sub-401F2F"><a href="#sub-401F2F" class="headerlink" title="sub_401F2F"></a>sub_401F2F</h3><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806184936.png"></p><p>有些函数一开始识别不出来，需要进去进行分析底层调用，上图为修改完的效果</p><p>关于ptrace的一些介绍<a href="https://bbs.pediy.com/thread-265924.htm#msg_header_h2_1">https://bbs.pediy.com/thread-265924.htm#msg_header_h2_1</a></p><p>这里使用ptrace函数实现父进程与子进程之间的通信</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">long</span> ptrace（<span class="token keyword">enum</span> <span class="token class-name">_ptrace_request</span> request<span class="token punctuation">,</span><span class="token class-name">pid_t</span> pid<span class="token punctuation">,</span><span class="token keyword">void</span> <span class="token operator">*</span> addr <span class="token punctuation">,</span><span class="token keyword">void</span> <span class="token operator">*</span>data）<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>ptrace最重要的就是第一个参数</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806185144.png"></p><h3 id="sub-4017E5"><a href="#sub-4017E5" class="headerlink" title="sub_4017E5"></a>sub_4017E5</h3><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806212737.png"></p><p>这里只是把a39872382055541数据提取出来由字符串转为数字，然后存放到v6数组里</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806212819.png"></p><p>一共有39条数据，sub_401F2F的v8指向这个数组</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806212934.png"></p><p>有些数据直接静态分析不好分析，我们还是利用动调比较方便</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806213249.png"></p><p>sub_401F2F的主要操作就是先把某组数据转成数字存放在数组里，然后复制子进程的寄存器到父进程，还有就是一些数据，通过读取的数据比对0xCAFEB055BFCC和0xCAFE1055BFC走不同的条件语句，我们先分析一下子进程附件。</p><h2 id="re3"><a href="#re3" class="headerlink" title="re3"></a>re3</h2><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806213837.png"></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806214020.png"></p><p>子进程一进来有很多无法识别的数据，我以为这一块被SMC了，结果ida按c后可以正常识别，再p创建函数，成功F5</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806214926.png"></p><h3 id="sub-2490"><a href="#sub-2490" class="headerlink" title="sub_2490"></a>sub_2490</h3><p>这个函数是对输入的一些判断</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806215246.png"></p><p>一个25*25的数组，判断输入是否是0或1的ASCII，然后成立后减48转成0或1的数字，再存入byte_55C0</p><h3 id="loc-21F9"><a href="#loc-21F9" class="headerlink" title="loc_21F9"></a>loc_21F9</h3><p>这也是个函数，但是有加密，无法直接识别为指令，参数有sub_2490操作后的数组，还有v9和v8</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806215704.png"></p><p>突然发现这一块的数字似曾相识，好像在哪见过！原来是easyre附件的if判断那一块出现过</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806215755.png"></p><p>这里通过int 3断点向父进程发生通知，这个时候父进程就会进入条件语句执行sub_401BB1了</p><p>函数末尾还有个int 3</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806220057.png"></p><p>这个数据对应的是父进程if语句中的else部分，此时我的大脑中的想法就是:</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">1、父进程创建子进程，父进程处于wait状态2、子进程得到输入，遇到int 3 ，向父进程发送通知3、父进程接收到通知，执行SMC4、SMC结束后，子进程再次遇到int 3,向父进程发送通知5、父进程结束SMC，执行else部分<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="SMC"><a href="#SMC" class="headerlink" title="SMC"></a>SMC</h2><p>现在我们只要知道SMC的加密过程，就可以写脚本解密，或者直接动调解密</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806220718.png"></p><p>smc在父进程中，我们分析一下加密逻辑</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806235411.png"></p><p>首先分析一下sub_401AC2函数，发现是把re3里面的SMC数据部分取到easyre中</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806235349.png"></p><p>动调完发现SMC的逻辑就是把re3的数据xor 上面分析的a39872382055541MD5后的结果</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220806235928.png"></p><p>我们可以先尝试把所有的MD5都提取出来,先在转完16进制函数后下个断点，然后编辑断点</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220807001052.png"></p><p>已经提取到数据了，接下来就是手工patch子进程</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">xorKey <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">8723</span><span class="token punctuation">:</span> <span class="token number">2533025110152939745</span><span class="token punctuation">,</span> <span class="token number">8739</span><span class="token punctuation">:</span> <span class="token number">5590097037203163468</span><span class="token punctuation">,</span> <span class="token number">8755</span><span class="token punctuation">:</span> <span class="token number">17414346542877855401</span><span class="token punctuation">,</span> <span class="token number">8771</span><span class="token punctuation">:</span> <span class="token number">17520503086133755340</span><span class="token punctuation">,</span> <span class="token number">8787</span><span class="token punctuation">:</span> <span class="token number">12492599841064285544</span><span class="token punctuation">,</span> <span class="token number">8803</span><span class="token punctuation">:</span> <span class="token number">12384833368350302160</span><span class="token punctuation">,</span> <span class="token number">8819</span><span class="token punctuation">:</span> <span class="token number">11956541642520230699</span><span class="token punctuation">,</span> <span class="token number">8835</span><span class="token punctuation">:</span> <span class="token number">12628929057681570616</span><span class="token punctuation">,</span> <span class="token number">8851</span><span class="token punctuation">:</span> <span class="token number">910654967627959011</span><span class="token punctuation">,</span> <span class="token number">8867</span><span class="token punctuation">:</span> <span class="token number">5684234031469876551</span><span class="token punctuation">,</span> <span class="token number">8883</span><span class="token punctuation">:</span> <span class="token number">6000358478182005051</span><span class="token punctuation">,</span> <span class="token number">8899</span><span class="token punctuation">:</span> <span class="token number">3341586462889168127</span><span class="token punctuation">,</span> <span class="token number">8915</span><span class="token punctuation">:</span> <span class="token number">11094889238442167020</span><span class="token punctuation">,</span> <span class="token number">8931</span><span class="token punctuation">:</span> <span class="token number">17237527861538956365</span><span class="token punctuation">,</span> <span class="token number">8947</span><span class="token punctuation">:</span> <span class="token number">17178915143649401084</span><span class="token punctuation">,</span> <span class="token number">8963</span><span class="token punctuation">:</span> <span class="token number">11176844209899222046</span><span class="token punctuation">,</span> <span class="token number">8979</span><span class="token punctuation">:</span> <span class="token number">18079493192679046363</span><span class="token punctuation">,</span> <span class="token number">8995</span><span class="token punctuation">:</span> <span class="token number">7090159446630928781</span><span class="token punctuation">,</span> <span class="token number">9011</span><span class="token punctuation">:</span> <span class="token number">863094436381699168</span><span class="token punctuation">,</span> <span class="token number">9027</span><span class="token punctuation">:</span> <span class="token number">6906972144372600884</span><span class="token punctuation">,</span> <span class="token number">9043</span><span class="token punctuation">:</span> <span class="token number">16780793948225765908</span><span class="token punctuation">,</span> <span class="token number">9059</span><span class="token punctuation">:</span> <span class="token number">7086655467811962655</span><span class="token punctuation">,</span> <span class="token number">9075</span><span class="token punctuation">:</span> <span class="token number">13977154540038163446</span><span class="token punctuation">,</span> <span class="token number">9091</span><span class="token punctuation">:</span> <span class="token number">7066662532691991888</span><span class="token punctuation">,</span> <span class="token number">9107</span><span class="token punctuation">:</span> <span class="token number">15157921356638311270</span><span class="token punctuation">,</span> <span class="token number">9123</span><span class="token punctuation">:</span> <span class="token number">12585839823593393444</span><span class="token punctuation">,</span> <span class="token number">9139</span><span class="token punctuation">:</span> <span class="token number">1360651393631625694</span><span class="token punctuation">,</span> <span class="token number">9155</span><span class="token punctuation">:</span> <span class="token number">2139328426318955142</span><span class="token punctuation">,</span> <span class="token number">9171</span><span class="token punctuation">:</span> <span class="token number">2478274715212481947</span><span class="token punctuation">,</span> <span class="token number">9187</span><span class="token punctuation">:</span> <span class="token number">12876028885252459748</span><span class="token punctuation">,</span> <span class="token number">9203</span><span class="token punctuation">:</span> <span class="token number">18132176846268847269</span><span class="token punctuation">,</span> <span class="token number">9219</span><span class="token punctuation">:</span> <span class="token number">17242441603067001509</span><span class="token punctuation">,</span> <span class="token number">9235</span><span class="token punctuation">:</span> <span class="token number">8492111998925944081</span><span class="token punctuation">,</span> <span class="token number">9251</span><span class="token punctuation">:</span> <span class="token number">14679986489201789069</span><span class="token punctuation">,</span> <span class="token number">9267</span><span class="token punctuation">:</span> <span class="token number">13188777131396593592</span><span class="token punctuation">,</span> <span class="token number">9283</span><span class="token punctuation">:</span> <span class="token number">5298970373130621883</span><span class="token punctuation">,</span> <span class="token number">9299</span><span class="token punctuation">:</span> <span class="token number">525902164359904478</span><span class="token punctuation">,</span> <span class="token number">9315</span><span class="token punctuation">:</span> <span class="token number">2117701741234018776</span><span class="token punctuation">,</span> <span class="token number">9331</span><span class="token punctuation">:</span> <span class="token number">9158760851580517972</span><span class="token punctuation">&#125;</span>addr <span class="token operator">=</span> <span class="token number">0x2213</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    data <span class="token operator">=</span> get_qword<span class="token punctuation">(</span>addr<span class="token punctuation">)</span>    key <span class="token operator">=</span> xorKey<span class="token punctuation">[</span>addr<span class="token punctuation">]</span>    dec <span class="token operator">=</span> data <span class="token operator">^</span> key    idc<span class="token punctuation">.</span>patch_qword<span class="token punctuation">(</span>addr<span class="token punctuation">,</span> dec<span class="token punctuation">)</span>    addr <span class="token operator">+=</span> <span class="token number">16</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修复完有些地方需要我们nop掉，才能正常F5，同时把最后的int 3 也nop了，因为我们用不到了</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220807003449.png"></p><p>这是一个数织游戏，我们只要找到对应的数据，通过网站就可以跑</p><p>我们的比较应该是一个25*25的矩阵</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220807013937.png"></p><p>这里对矩阵做了一些操作，直接dump就行了</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">row5  1  3  2  1  11  1  1  1  1  1  1  13  1  3  1  4  1 11  1  1  2  1  1  1  11  4  1  3  2  1 34  4  4  1  1  11 2 2 1 2 1 2 11 1 1 1 3 4 3 11 1 1 1 1 1 1 1 1 13 1 3 1 4 1 121 1 4 1 1 48 1 1 1 1 2 11 1 1 1 1 1 1 42 2 1 2 1 1 1 1 1 12 5 1 1 312 2 1 1 1 12 1 1 1 1 1 1 1 14 7 2 1 1 1 11 1 2 1 1 1 1 1 112 21 1 1 14 2 1 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">col5 5 3 1 31 1 1 1 1 1 1 1 1 11 1 5 1 3 1 11 2 4 5 15 2 1 1 1 1 1 1 1 1 1 51 2 6 1 32 2 1 1 1 1 12 5 1 3 1 11 1 1 1 1 1 1 3 12 1 1 1 1 1 12 5 3 13 5 1 1 11 1 1 1 1 1 1 11 1 1 3 5 51 3 5 1 1 11 1 35 1 2 4 11 1 4 31 1 2 4 15 4 32 5 4 15 3 1 1 11 2 1 1 1 4 11 1 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220807014545.png"></p><p>最后的效果FLAG{I LOVE PLAY ctf_QWB2022}</p><h1 id="find-basic"><a href="#find-basic" class="headerlink" title="find_basic"></a>find_basic</h1><p>首先运行看看</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220807151206.png"></p><p>特殊字符串:basic secret，等会去IDA看看</p><p>搜到了，但是无法交叉引用到主函数逻辑，观察代码发现这题使用了类似虚拟保护的switch混淆执行逻辑分析</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220807152057.png"></p><p>每个handler自己又作为分发器</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220807152236.png"></p><p>结构都比较类似，handler的结构体为</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">.text:5661743E                 cmp     dl, 0E0h             判断控制码.text:56617441                 jnz     short sub_5661745C   跳转到下一个handler或者分发器.text:56617443                 popa 弹出通用寄存器.text:56617444                 popf弹出标志寄存器.text:56617445                 push    0               ; buf.text:56617447                 push    eax             ; stream.text:56617448                 call    j__setvbuf该handler实际执行的指令.text:5661744D                 jmp     short loc_56617454   跳转到下一个handler或者分发器<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在开始调试</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220808103658.png"></p><p>我们逐个函数分析，首先把cl赋值0X3F，然后进入函数sub_5658D4FA</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220808103815.png"></p><p>进去继续分析sub_5658D7D6和sub_5658D782</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220808103908.png"></p><p>off_5661506C的值自增1就没了</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220808104004.png"></p><p>这个函数就是获取一个rand值，然后v3判断是否大于随机数，貌似只是一段垃圾代码，交叉引用发现这个函数被调用多次，我改个名字randfunc，方便之后分析的识别</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220808104207.png"></p><p>这里把上层的ecd，也就是0x3F传进来就行比较，一直单步调试，走到0x3F的判断语句</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220808104257.png"></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220808104336.png"></p><p>好像并没有执行什么东西，然后继续走就到了这</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220808104426.png"></p><p>sub_5658D360没啥用，也是一个rand函数</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220808104456.png"></p><p>下面一个函数有点变化，貌似和sub_5658D7D6对应，这里是-1</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220808104512.png"></p><p>当我单步步过sub_5658D360，会发生报错，怀疑是死循环，建议patch掉循环，然后就又回到了main了</p><p>到这我怀疑每一次的比较都类似opcode和function的对应，也就是之前说的加了switch混淆的vm，下面的opcode也是类似的分析方法</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220808105830.png"></p><p>这里执行完会打印——–obf_xx_find v1.0———</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220808110222.png"></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220808110245.png"></p><p>这就是对应的打印basic secret:</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220808110446.png"></p><p>0E对应的是scanf，此时程序卡住，等待我们输入，同时可以得知eax是存flag的地址</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220808111213.png"></p><p>现在我可以在flag上下断点，看谁访问了他</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220808111459.png"></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220808111552.png"></p><p>cl为3A的时候触发了flag，把flag[0]取出来乘上42B45h<img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220808111805.png"></p><p>这里把我们的flag[0]*0x42B45然后减去0x1A93D7E，类似汇编里面cmp的功能，我们通过这个等式反求一下flag[0],0x1A93D7E&#x2F;0x42B45&#x3D;0x66,也就是f的ASCII码。</p><p>同理我们再给flag[1]也下上断点，并把数据记录下来</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220808112311.png"></p><p>这里发现又是flag[0]*0x1E4E0,然后又加上了edx，而edx是flag[1]*0x3B10F</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220808112457.png"></p><p>减去0x24FE394，整理第二轮就是flag[1]*0x3B10F+flag[0]*0x1E4E0&#x3D;&#x3D;0x24FE394,验证一下flag[1]为0x6c，确实是l的ASCII码</p><p>下面就慢慢调就行了，流程太多就不贴出来了，原理一样</p><p>也可以用trace，具体教程可以参考这位师傅<a href="https://www.bilibili.com/video/BV1Wt4y137qG?spm_id_from=333.337.search-card.all.click&vd_source=b9e4755863227a308257fcc956a9e9e7">https://www.bilibili.com/video/BV1Wt4y137qG?spm_id_from=333.337.search-card.all.click&amp;vd_source=b9e4755863227a308257fcc956a9e9e7</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> z3 <span class="token keyword">import</span> <span class="token operator">*</span>flag <span class="token operator">=</span> <span class="token punctuation">[</span>BitVec<span class="token punctuation">(</span><span class="token string">'flag[%d]'</span> <span class="token operator">%</span> i<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0x1c</span><span class="token punctuation">)</span><span class="token punctuation">]</span>solver <span class="token operator">=</span> Solver<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0x1c</span><span class="token punctuation">)</span><span class="token punctuation">:</span> solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">>=</span> <span class="token number">32</span><span class="token punctuation">)</span> solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">127</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'f'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'l'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'g'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'&#123;'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'&#125;'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x42b45</span> <span class="token operator">-</span> <span class="token number">0x1a93d7e</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x3b10f</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x1e4e0</span> <span class="token operator">-</span> <span class="token number">0x24fe394</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x31fc4</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffdb038</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x1390f</span> <span class="token operator">-</span> <span class="token number">0xbb9e67</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x32494</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe5a07</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xa4e6</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x6ba7</span> <span class="token operator">-</span> <span class="token number">0x1052718</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe0c3f</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x43e32</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x3f49d</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xc094</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffb7eff</span> <span class="token operator">-</span> <span class="token number">0x7fb225</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x33e5b</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x157f8</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xd4eb</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc9ad6</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x9c95</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd8c2e</span> <span class="token operator">-</span> <span class="token number">0x6a31d</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x6d8c</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffedd66</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x46fd4</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc79bb</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffbe7f5</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x14cde</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc4acd</span> <span class="token operator">+</span> <span class="token number">0x3083b63</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x129fd</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x2a3cd</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x52a1</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x87de</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x357c1</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffbe625</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffec17b</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x8039</span> <span class="token operator">-</span> <span class="token number">0xd3b6ed</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe590f</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc6bb7</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x2aec8</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd58b1</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">*</span> <span class="token number">0xfffcf131</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc0fae</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffcf46a</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffbbb98</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc9913</span> <span class="token operator">+</span> <span class="token number">0x7a4d9d3</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x3cb6</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc5201</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffdec99</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x195a8</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffbcea6</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd4f63</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x3852e</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x36c09</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffdffc6</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffffbb8f</span> <span class="token operator">+</span> <span class="token number">0x27b7033</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffb7a1c</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffff35fe</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe5693</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffdb9f4</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xbd38</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x25b89</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x3074d</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe5f6f</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x1400e</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span><span class="token number">0xfffcd14c</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x4036d</span> <span class="token operator">+</span> <span class="token number">0xa8256</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x2da7a</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffbfd56</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffff0011</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffce077</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">*</span> <span class="token number">0x34d5d</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffb8def</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffff2d4e</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x237a3</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x386e1</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">*</span><span class="token number">0xfb89</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x2e485</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x42574</span> <span class="token operator">-</span> <span class="token number">0x24df62a</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x21c5e</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x32144</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x420e3</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x3f6d0</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x1a459</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc900e</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x3fd03</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x43d16</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe4105</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd400a</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffffc29b</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x2f9f0</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x19432</span> <span class="token operator">-</span> <span class="token number">0x6f9b293</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffca694</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffce151</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x30418</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x2f6aa</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span><span class="token number">0x1b619</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x22e4</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe1384</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffffa664</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x13e07</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc46de</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x79d6</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x4372b</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x3d1d</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x4d41</span> <span class="token operator">-</span> <span class="token number">0x176513c</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x29b04</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd2684</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd9a2f</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd79fc</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x2594e</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x41c45</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc9c57</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc5f95</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffec65c</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffffb642</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffcb527</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x2792e</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe1bb7</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x445a1</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd25cc</span> <span class="token operator">+</span> <span class="token number">0x5338cd6</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd399c</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffff3edb</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x26b94</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffcee81</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffefe93</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffcdfa4</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe2a42</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x10ba4</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x38e1d</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x14c1e</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffffce4a</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd2a4b</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x41fc</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffedbac</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffeab6a</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe4e59</span> <span class="token operator">+</span> <span class="token number">0x299ff72</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffdc67b</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffffb1fc</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffff59be</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x3684</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">*</span> <span class="token number">0x202c2</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x2e43</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffff3a46</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x6a23</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xebfb</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffbb78a</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xd44a</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x385eb</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffee046</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffeb282</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffde639</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd6738</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffff1aa3</span> <span class="token operator">+</span> <span class="token number">0x4728350</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x28c9c</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffdc4ae</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x278ad</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x326ca</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd423d</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc96fc</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffeeb1a</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc2ee0</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x106be</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token operator">*</span> <span class="token number">0xffff5d67</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x27</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffbc3b6</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd163c</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffb9b47</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x1e6ed</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc6c6f</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x3b32b</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x2feea</span> <span class="token operator">+</span> <span class="token number">0x48d1119</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc2bb3</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffce76f</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffca692</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffdf4bc</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x192f9</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe5a1e</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffed4f3</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffff94f8</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc717e</span><span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffed29b</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd28d9</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x218df</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x28e00</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffdd0af</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x25d22</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x42ebb</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffff1382</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x7404</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe2dff</span> <span class="token operator">+</span> <span class="token number">0x60245a5</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x21061</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffbcb01</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffff7442</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x24568</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">*</span><span class="token number">0x1b201</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x2d232</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x13777</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffee013</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc7505</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span><span class="token number">0x264ed</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x33b4f</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x286d8</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x33e8b</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x21529</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffb7c1a</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd07a3</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffff8453</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x9754</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd603d</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token operator">*</span> <span class="token number">0xfffdd85b</span> <span class="token operator">-</span> <span class="token number">0x254e142</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe206e</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x2f048</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc19fa</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token number">6</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x370d</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd9c2f</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffdb413</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x30e0a</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe07f8</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffedfd5</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffee6f6</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x46247</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x2b8ed</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x2d291</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffdc54d</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc5b55</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffb8061</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x43913</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffffe191</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd276e</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe5841</span> <span class="token operator">+</span> <span class="token number">0xce53e7</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffed971</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x46741</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffbac8c</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffeb4e7</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x1026b</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe7d86</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd5fec</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x48ddb</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc6bc1</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x37ece</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x41105</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe6667</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe75b2</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x61b0</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffffd602</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffbce29</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffff07d7</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x34c8e</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x32996</span><span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x49530</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x33822</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffce161</span> <span class="token operator">+</span> <span class="token number">0x42666b</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe06e8</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd0441</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x16357</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x1d95f</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span> <span class="token operator">*</span><span class="token number">0xffff89d3</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffba022</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x46180</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffff4240</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x199c5</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffff442c</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc2fac</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x32600</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x1d03a</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x19435</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd1667</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x35d1d</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x96c4</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x2fa24</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xb20c</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">*</span><span class="token number">0xebee</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x428a6</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffceb8a</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x22784</span> <span class="token operator">-</span> <span class="token number">0x3604a63</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x1e3e2</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x1cfb9</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xc3f7</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x94cd</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc7fd0</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x21165</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffcfb41</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffff819d</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffbeb76</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x16751</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xe1a</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x238a0</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x28f99</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x45bc</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffffcb18</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x32d58</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffffe4bc</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffeea95</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x44f3a</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xb047</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffcfc36</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x1719</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x1b011</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffea265</span> <span class="token operator">-</span> <span class="token number">0x2918269</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffbf307</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffff2847</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffcfd31</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x40f96</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x2b265</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc7802</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x1b103</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x42452</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x3c5d</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x15b55</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffeb722</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x1d9a9</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x28df</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc89eb</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">*</span><span class="token number">0xfffe1221</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x4462a</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x23353</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x3c514</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x316a4</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x176e1</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xcf0e</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x46b55</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffffbcc1</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xf2a7</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x1d33c</span> <span class="token operator">-</span> <span class="token number">0x5df35b6</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffbf624</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffec87a</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x19aaa</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x5f14</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">*</span><span class="token number">0xfffcfc43</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffbe879</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffdfc92</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffffc258</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd02fd</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x12560</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xae46</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffeb6f5</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x30c11</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffcb4ae</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x2a00a</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc76de</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x4162</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe95b2</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe60e7</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffff908d</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffb7f42</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x1c31</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffff900c</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x2ad6e</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd7c6d</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xc499</span> <span class="token operator">+</span> <span class="token number">0x83646cd</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x26b02</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffb92e5</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x30dd1</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe4c7b</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span> <span class="token number">0xffff0433</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x276b1</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc241e</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe3fdc</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffee787</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x230c</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd53f8</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffc108c</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffffbac1</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffff0bdb</span><span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffbc5e2</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xa1f6</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x1e758</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x1725f</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x3387e</span><span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x87b</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd8475</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x3776a</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffff4515</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x1a454</span><span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffbf3a1</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x25174</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffbccc2</span> <span class="token operator">+</span> <span class="token number">0x52dfb3f</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x2f139</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x21b53</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x2ad74</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffba19b</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">*</span><span class="token number">0x1ac4e</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x2208e</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffdd738</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffdfb9f</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe4b65</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x10937</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffbfdf3</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x3cc1a</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe93ee</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe3b8a</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffe792c</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x3e9ff</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x128e6</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x574b</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x16707</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x3fe4c</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffed658</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x3cc8c</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x458b4</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffd74d0</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x22e02</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xffff098d</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0x30b99</span> <span class="token operator">+</span> flag<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0xfffba5e9</span> <span class="token operator">-</span> <span class="token number">0x38186f4</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>flag_str <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">if</span> solver<span class="token punctuation">.</span>check<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> sat<span class="token punctuation">:</span> m <span class="token operator">=</span> solver<span class="token punctuation">.</span>model<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0x1c</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag_str <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>m<span class="token punctuation">[</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>as_long<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag_str<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>后来看Chamd5的大哥直接写了一个去混淆的脚本，等有空再看看了。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>强网杯先复现到这里，还有三道题还没复现，看做出来的人不是很多，应该有些难度，等后面有时间再搞了，最近有点忙。这四道题复现下来给我的收获挺多的，学会了一些插件的使用还有就是做题上面的思路的改变，混淆在ctf逆向中也越来越多了，得弄个专题专门学习一下混淆。不得不说，强网杯的体验还是可以的，虽然只写出来两题。今年比去年好一点，去年只有110多名，今年39名，差一点就进总决赛了，明年加油。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第六届蓝帽杯初赛CTF题目 Re WriteUp</title>
      <link href="//post/bluecup.html"/>
      <url>//post/bluecup.html</url>
      
        <content type="html"><![CDATA[<h1 id="LOADER-exe"><a href="#LOADER-exe" class="headerlink" title="LOADER.exe"></a>LOADER.exe</h1><p>首先64位程序，没壳</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220714142045.png"></p><p>通过VirtualProtect 更改unk_140003040地址处数据的属性，0x40为PAGE_EXECUTE_READWRITE，即可执行可读写，作为sub_7FF7D5941040的参数传入。查看该函数的汇编指令</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220714142733.png"></p><p>我们发现把unk_140003040的地址覆盖到了ret的位置，所以该函数执行完后跳到unk_140003040的地址执行，然后就是不断调式找真正执行程序逻辑的函数</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220714143121.png"></p><p>继续跟</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220714143245.png"></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220714143343.png"></p><p>主要就一直下断点找函数就行了，这里就是程序的真正逻辑</p><p>通过动调可以发现一些函数的执行逻辑</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220714143644.png"></p><p>我们输入测试flag进行调试，不过在多次调试后，我们发现flag是有长度限制的</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220714143856.png"></p><p>长度为42,测试flag{123456123456123456123456123456123456}</p><p>我们点击v1查看存储flag的内存时，其实是指向0000018DF0A42050，并不是直接指向flag字符串的</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220714144204.png"></p><p>所以这应该是一个结构体</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220714152343.png"></p><p>这里是把flag{}里面的前18个字符串取出来</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220714153002.png"></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220714153249.png"></p><p>sub_7FF7592D4380函数有三个参数v13，10，xmmword_7FF7592EF1B0，其中v13就是我们输入的123456123456123456，最后一个参数应该是用来接收输出的</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220714153212.png"></p><p>可以发现这个函数作用是把我们的字符串转换成了10进制的数字形式123456123456123456</p><p>下面同样出现了相同的循环</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220714153622.png"></p><p>我们猜测是对后面18位的flag进行操作，所以我们换一组测试数据，可以看到下面又多了两组str_to_int的操作，并且是常数，我们进去观察一下，一个是72,057,594,037,927,936，另外一个是1,152,921,504,606,846,976</p><p>测试输入flag{720575940379279361152921504606846976}</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220714155129.png"></p><p>这里的sub_7FF7592D50C0是一个比较大小的函数，要求我们的flag要在72,057,594,037,927,936与1,152,921,504,606,846,976之间</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220714155821.png"></p><p>将flag第一部分进行两次传参，结果返回到v31中，v31结果为0x1400000000000001</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220714160142.png"></p><p>可以发现这个函数是一个乘法</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220714160519.png"></p><p>同理下面对flag的后18位也是乘法操作</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220714160755.png"></p><p>继续往后调试</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220714162014.png"></p><p>这里是把flag后半部分在经过平方后又乘上了11</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220714162625.png"></p><p>sub_7FF7592D5400里面最后执行这个函数</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220714162814.png"></p><p>进去分析一下，得到结果为0x327557B48632115FC02A5000000001</p><p>现在我们理一下数据</p><p>flag前18位进行了平方操作，得到了0x640000000000001400000000000001</p><p>flag后18位进行了平方操作，再乘以11，得到了0x318AA84B79CDEE0B43FD5B00000000</p><p>现在经过函数sub_7FF7592D5400后得到0x327557B48632115FC02A5000000001</p><p>经过测试，发现这个函数的作用是一个减法</p><p>最后一个strcmp，比较的结果是9，所以这道题其实就是一个方程求解问题</p><p>x^2 - 11*y^2 &#x3D; 9   (72057594037927936&lt;x&lt;1152921504606846976)</p><p>在x的范围内求出对应的整数y，都为64bit的大整数，需要用到一般Pell方程进行求解，也可以使用wolframalpha在线计算。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220714165012.png"></p><p>求出来的解118936021352508390 和35860559716724409，判断两段长度是否为18，不足在最前面补0。flag{118936021352508390035860559716724409}</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第十五届全国大学生信息安全竞赛创新实践能力赛CISCN</title>
      <link href="//post/CISCN2022.html"/>
      <url>//post/CISCN2022.html</url>
      
        <content type="html"><![CDATA[<h1 id="baby-tree"><a href="#baby-tree" class="headerlink" title="baby_tree"></a>baby_tree</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这道题打开是个ast后缀文件，没有遇到过，上网搜了一下，大概了解是抽象语法树，以前没遇到过，先收集资料学习一波</p><h2 id="AST在的应用"><a href="#AST在的应用" class="headerlink" title="AST在的应用"></a>AST在的应用</h2><p>1、代码语法的检查、代码风格的检查、代码的格式化、代码的高亮、代码错误提示、代码自动补全</p><p>2、语法分析器会生成一个抽象语法树（AST）。之后，语义分析器会进行工作并生成一个通过类型检查的 AST，这一步的实现就是依赖于 SwiftSyntax （基于 libSyntax 库开发）</p><h2 id="AST产生的原理"><a href="#AST产生的原理" class="headerlink" title="AST产生的原理"></a>AST产生的原理</h2><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/e3a6b5ba927d4b5928b90f8005ee9fa2.png"></p><p><a href="https://trinhngocthuyen.github.io/posts/tech/how-a-swift-file-is-compiled/">参考博客</a></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/swift%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B.jpg"></p><p>生成AST</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">swiftc  <span class="token operator">-</span>dump<span class="token operator">-</span>ast main<span class="token punctuation">.</span>swift <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="从Swift到源码"><a href="#从Swift到源码" class="headerlink" title="从Swift到源码"></a>从Swift到源码</h2><p>目前还没有能够从Swift AST编译回Swift的方法，那么我们就只能类似于做阅读理解一样，硬读AST，但是这也是有技巧的，寻找规律，才能轻松化解</p><p>我这里用notepad.exe打开的源码，然后让其识别为js代码，这样子就会有层次比较明显的父子节点关系</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220602182106.png"></p><h3 id="首先是函数初始化"><a href="#首先是函数初始化" class="headerlink" title="首先是函数初始化"></a>首先是函数初始化</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token punctuation">(</span>func_decl range<span class="token operator">=</span><span class="token punctuation">[</span>re<span class="token operator">.</span>swift<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">1</span> <span class="token operator">-</span> line<span class="token punctuation">:</span><span class="token number">14</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token string double-quoted-string">"check(_:_:)"</span> <span class="token keyword">interface</span> <span class="token class-name-definition class-name">type</span><span class="token operator">=</span><span class="token string single-quoted-string">'(String, String) -> Bool'</span> access<span class="token operator">=</span>internal<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>首先是一个函数的定义Bool check(String,String),我们先收起这个函数，往下分析</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/111.png"></p><h3 id="变量赋值"><a href="#变量赋值" class="headerlink" title="变量赋值"></a>变量赋值</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token punctuation">(</span><span class="token function">argument</span>      <span class="token punctuation">(</span>integer_literal_expr type<span class="token operator">=</span><span class="token string single-quoted-string">'Int'</span> location<span class="token operator">=</span>re<span class="token operator">.</span>swift<span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token number">55</span> range<span class="token operator">=</span><span class="token punctuation">[</span>re<span class="token operator">.</span>swift<span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token number">55</span> <span class="token operator">-</span> line<span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token number">55</span><span class="token punctuation">]</span> value<span class="token operator">=</span><span class="token number">3</span> builtin_initializer<span class="token operator">=</span>Swift<span class="token operator">.</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token operator">.</span><span class="token keyword type-declaration">Int</span><span class="token operator">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token argument-name">_builtinIntegerLiteral</span><span class="token punctuation">:</span><span class="token punctuation">)</span> initializer<span class="token operator">=</span><span class="token operator">**</span><span class="token constant">NULL</span><span class="token operator">**</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                      <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>我们在这题中要注意的是value</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220602191719.png"></p><p>主函数根据猜测check的两个参数分别为data和key,结果给result，key为345y，而data是我们输入的flag，现在我们分析收起来的部分，也就是check部分</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220602191938.png"></p><p>这里说明函数Bool check(String encoded,String keyValue)</p><h3 id="list转换为字符数组"><a href="#list转换为字符数组" class="headerlink" title="list转换为字符数组"></a>list转换为字符数组</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token punctuation">(</span><span class="token function">argument_list</span>            <span class="token punctuation">(</span><span class="token function">argument</span>              <span class="token punctuation">(</span>member_ref_expr type<span class="token operator">=</span><span class="token string single-quoted-string">'String.UTF8View'</span> location<span class="token operator">=</span>re<span class="token operator">.</span>swift<span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">29</span> range<span class="token operator">=</span><span class="token punctuation">[</span>re<span class="token operator">.</span>swift<span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">21</span> <span class="token operator">-</span> line<span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">29</span><span class="token punctuation">]</span> decl<span class="token operator">=</span>Swift<span class="token operator">.</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token operator">.</span><span class="token keyword type-declaration">String</span> extension<span class="token operator">.</span><span class="token function">utf8</span>                <span class="token punctuation">(</span>declref_expr type<span class="token operator">=</span><span class="token string single-quoted-string">'String'</span> location<span class="token operator">=</span>re<span class="token operator">.</span>swift<span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">21</span> range<span class="token operator">=</span><span class="token punctuation">[</span>re<span class="token operator">.</span>swift<span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">21</span> <span class="token operator">-</span> line<span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">21</span><span class="token punctuation">]</span> decl<span class="token operator">=</span>re<span class="token operator">.</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token operator">.</span><span class="token function">check</span><span class="token punctuation">(</span><span class="token argument-name">_</span><span class="token punctuation">:</span><span class="token constant">_</span><span class="token punctuation">:</span><span class="token punctuation">)</span><span class="token operator">.</span>encoded@re<span class="token operator">.</span>swift<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">14</span> function_ref<span class="token operator">=</span>unapplied<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这段代码可以翻译成</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">encoded<span class="token operator">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'utf8'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>从11行到70行的代码类似，其中一个变量是b，另外一个是k，是两个数组，用来存放我们传入的key和data</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220602193247.png"></p><p>这里是定义了四个变量，r0，r1，r2，r3，到这里为止程序的意思都是能猜出来的，在98行开始for_each_stmt，程序正式进入算法部分，就要认真分析了。</p><h3 id="如何获取算法的计算过程"><a href="#如何获取算法的计算过程" class="headerlink" title="如何获取算法的计算过程"></a>如何获取算法的计算过程</h3><h4 id="extension"><a href="#extension" class="headerlink" title="extension"></a>extension</h4><p>我们要注意程序中的.extersion后缀 后面存储的是运算符号，比如此处，存储了我们的减号</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220602194409.png"></p><h4 id="本题目中出现的-extersion"><a href="#本题目中出现的-extersion" class="headerlink" title="本题目中出现的.extersion"></a>本题目中出现的.extersion</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">extersion<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>extersion<span class="token punctuation">.</span><span class="token operator">-</span> extersion<span class="token punctuation">.</span>count <span class="token operator">//</span>获取flag的长度extension<span class="token punctuation">.</span>subscriptextension<span class="token punctuation">.</span><span class="token operator">+</span> extension<span class="token punctuation">.</span><span class="token operator">^</span>extension<span class="token punctuation">.</span><span class="token operator">&amp;</span> extension<span class="token punctuation">.</span><span class="token operator">>></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220602195000.png"></p><p>这里应该是个循环，i&#x3D;0，binary_expr，113-119是对binary_expr的操作，操作为extersion后的减，而减法有两个参数，一个是 extension.count，另外一个是4，所以就是len-4，最后整理出来就是</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> count<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220602200523.png"></p><p>创建一个tupl元组tuple_expr，tuple&#x3D;(r0,r1,r2,r3)</p><p>后面的操作又是类似的，先是b数组 ，参数是i和value，一共有四个</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220602201342.png"></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220602201427.png"></p><p>故我们可以整理得到这条赋值语句为 r0, r1, r2, r3 &#x3D; ( b[i], b[i+1], b[i+2], b[i+3] )</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220602203646.png"></p><p>分析得出b[i+0] &#x3D; r2^(0xFF&amp; (k[0]+ (r0&gt;&gt;4)) )</p><p>同理得出</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">b<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>r3<span class="token operator">^</span><span class="token punctuation">(</span><span class="token number">0xFF</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>k<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span>r1<span class="token operator">>></span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>b<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span>r0<span class="token operator">^</span>k<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>b<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">=</span>r1<span class="token operator">^</span>k<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>k<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> k<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220602204152.png"></p><p>这个是value密文，直接写脚本就行</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">88</span> <span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">225</span><span class="token punctuation">,</span> <span class="token number">7</span> <span class="token punctuation">,</span><span class="token number">201</span><span class="token punctuation">,</span> <span class="token number">57</span> <span class="token punctuation">,</span><span class="token number">94</span> <span class="token punctuation">,</span><span class="token number">77</span> <span class="token punctuation">,</span><span class="token number">56</span> <span class="token punctuation">,</span><span class="token number">75</span> <span class="token punctuation">,</span><span class="token number">168</span> <span class="token punctuation">,</span><span class="token number">72</span> <span class="token punctuation">,</span><span class="token number">218</span> <span class="token punctuation">,</span><span class="token number">64</span> <span class="token punctuation">,</span><span class="token number">91</span> <span class="token punctuation">,</span><span class="token number">16</span> <span class="token punctuation">,</span>   <span class="token number">101</span> <span class="token punctuation">,</span><span class="token number">32</span> <span class="token punctuation">,</span><span class="token number">207</span> <span class="token punctuation">,</span><span class="token number">73</span> <span class="token punctuation">,</span><span class="token number">130</span><span class="token punctuation">,</span><span class="token number">74</span> <span class="token punctuation">,</span><span class="token number">128</span><span class="token punctuation">,</span><span class="token number">76</span> <span class="token punctuation">,</span><span class="token number">201</span><span class="token punctuation">,</span><span class="token number">16</span> <span class="token punctuation">,</span><span class="token number">248</span><span class="token punctuation">,</span><span class="token number">41</span> <span class="token punctuation">,</span><span class="token number">205</span><span class="token punctuation">,</span><span class="token number">103</span><span class="token punctuation">,</span><span class="token number">84</span> <span class="token punctuation">,</span><span class="token number">91</span> <span class="token punctuation">,</span><span class="token number">99</span> <span class="token punctuation">,</span><span class="token number">79</span> <span class="token punctuation">,</span><span class="token number">202</span><span class="token punctuation">,</span><span class="token number">22</span> <span class="token punctuation">,</span><span class="token number">131</span><span class="token punctuation">,</span><span class="token number">63</span> <span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">20</span> <span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">]</span>k<span class="token operator">=</span><span class="token punctuation">[</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'3'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'4'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'5'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span> <span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">4</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    k<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>k<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>k<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>k<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">=</span>k<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>k<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>k<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>k<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span> <span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    r0 <span class="token operator">=</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    r1 <span class="token operator">=</span> b<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span>    r2 <span class="token operator">=</span> b<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span>    r3 <span class="token operator">=</span> b<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span>    k<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>k<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>k<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>k<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>k<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>k<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>k<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>k<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>    b<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>r3<span class="token operator">^</span>k<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>    b<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>r2<span class="token operator">^</span>k<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    b<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span>r0<span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span>k<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span>b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">>></span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0xff</span><span class="token punctuation">)</span>    b<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">=</span>r1<span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span>k<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span>b<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0xff</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="babycode"><a href="#babycode" class="headerlink" title="babycode"></a>babycode</h1><p>这题下载下来是个.mrb后缀的文件，之前没遇到过，搜了一下发现是ruby语言的中间态，然后找到了篇以前ctf出过的<a href="https://www.anquanke.com/post/id/253572#h2-1">ruby题</a>，既然是mruby题，那我们先安装环境</p><h2 id="安装mruby"><a href="#安装mruby" class="headerlink" title="安装mruby"></a>安装mruby</h2><p>将<a href="https://mruby.org/">mruby源码</a>clone到本地并编译，这里我下的最新版mruby，因为.mrb文件用notepad打开后，开头的RITE0300意味着版本很高</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ20220606-133744@2x.png"></p><p>根据图片，我们在文件夹内输入命令rake -v就可以完成编译，在bin文件夹里就可以找到我们需要的mruby程序</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ20220606-133909@2x.png"></p><p>查看文档，发现可以通过指令参数执行mrb文件，但是我的库文件好像有点问题，跑不起来，只能看字节码，自己翻译了</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ20220606-134654@2x.png"></p><pre class="line-numbers language-none"><code class="language-none">mruby -v -b babycode.mrb 得到Ruby汇编<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">mruby 3.1.0 (2022-05-12)irep 0x55d3b2e1e4d0 nregs&#x3D;5 nlocals&#x3D;2 pools&#x3D;1 syms&#x3D;5 reps&#x3D;2 ilen&#x3D;55local variable names:  R1:p      000 LOADNIL       R2      002 LOADNIL       R3      004 CLASS         R2      :Crypt      007 EXEC          R2      I(0:0x55d3b2e1e580)      010 TCLASS        R2      012 METHOD        R3      I(1:0x55d3b2e1ed80)      015 DEF           R2      :check      018 SSEND         R2      :gets   n&#x3D;0 (0x00)      022 SEND          R2      :chomp  n&#x3D;0 (0x00)      026 MOVE          R1      R2              ; R1:p      029 MOVE          R3      R1              ; R1:p      032 SSEND         R2      :check  n&#x3D;1 (0x01)      036 JMPNOT        R2      050      040 STRING        R3      L(0)    ; yes      043 SSEND         R2      :puts   n&#x3D;1 (0x01)      047 JMP           052      050 LOADNIL       R2      052 RETURN        R2      054 STOPirep 0x55d3b2e1e580 nregs&#x3D;3 nlocals&#x3D;1 pools&#x3D;0 syms&#x3D;1 reps&#x3D;1 ilen&#x3D;12      000 LOADNIL       R1      002 LOADNIL       R2      004 CLASS         R1      :CIPHER      007 EXEC          R1      I(0:0x55d3b2e1e650)      010 RETURN        R1irep 0x55d3b2e1e650 nregs&#x3D;3 nlocals&#x3D;1 pools&#x3D;0 syms&#x3D;6 reps&#x3D;4 ilen&#x3D;55      000 LOADI32       R1      305419896      006 SETCONST      XX      R1      009 LOADI         R1      16      012 SETCONST      YY      R1      015 LOADSELF      R1      017 SCLASS                R1      019 METHOD        R2      I(0:0x55d3b2e1e790)      022 DEF           R1      :encrypt      025 TCLASS        R1      027 METHOD        R2      I(1:0x55d3b2e1e830)      030 DEF           R1      :encrypt      033 SSEND         R1      :private        n&#x3D;0 (0x00)      037 TCLASS        R1      039 METHOD        R2      I(2:0x55d3b2e1eb50)      042 DEF           R1      :to_key      045 TCLASS        R1      047 METHOD        R2      I(3:0x55d3b2e1ec20)      050 DEF           R1      :enc_one      053 RETURN        R1irep 0x55d3b2e1e790 nregs&#x3D;9 nlocals&#x3D;5 pools&#x3D;0 syms&#x3D;3 reps&#x3D;0 ilen&#x3D;29local variable names:  R1:t  R2:p  R3:&amp;  R4:cip      000 ENTER         2:0:0:0:0:0:0 (0x80000)      004 GETCONST      R5      CIPHER      007 SEND          R5      :new    n&#x3D;0 (0x00)      011 MOVE          R4      R5              ; R4:cip      014 MOVE          R5      R4              ; R4:cip      017 MOVE          R6      R1              ; R1:t      020 MOVE          R7      R2              ; R2:p      023 SEND          R5      :encrypt        n&#x3D;2 (0x02)      027 RETURN        R5irep 0x55d3b2e1e830 nregs&#x3D;16 nlocals&#x3D;11 pools&#x3D;1 syms&#x3D;8 reps&#x3D;1 ilen&#x3D;346local variable names:  R1:t  R2:p  R3:&amp;  R4:key  R5:c  R6:n  R7:num1  R8:num2  R9:enum1  R10:enum2      000 ENTER         2:0:0:0:0:0:0 (0x80000)      004 MOVE          R12     R2              ; R2:p      007 SSEND         R11     :to_key n&#x3D;1 (0x01)      011 MOVE          R4      R11             ; R4:key      014 ARRAY         R5      R5      0       ; R5:c      017 LOADI_0       R6                      ; R6:n      019 MOVE          R11     R6              ; R6:n      022 MOVE          R12     R1              ; R1:t      025 SEND          R12     :length n&#x3D;0 (0x00)      029 LT            R11     R12      031 JMPNOT        R11     327      035 MOVE          R11     R1              ; R1:t      038 MOVE          R12     R6              ; R6:n      041 GETIDX        R11     R12      043 SEND          R11     :ord    n&#x3D;0 (0x00)      047 SEND          R11     :to_i   n&#x3D;0 (0x00)      051 LOADI         R12     24      054 SEND          R11     :&lt;&lt;     n&#x3D;1 (0x01)      058 MOVE          R7      R11             ; R7:num1      061 MOVE          R11     R7              ; R7:num1      064 MOVE          R12     R1              ; R1:t      067 MOVE          R13     R6              ; R6:n      070 ADDI          R13     1      073 GETIDX        R12     R13      075 SEND          R12     :ord    n&#x3D;0 (0x00)      079 SEND          R12     :to_i   n&#x3D;0 (0x00)      083 LOADI         R13     16      086 SEND          R12     :&lt;&lt;     n&#x3D;1 (0x01)      090 ADD           R11     R12      092 MOVE          R7      R11             ; R7:num1      095 MOVE          R11     R7              ; R7:num1      098 MOVE          R12     R1              ; R1:t      101 MOVE          R13     R6              ; R6:n      104 ADDI          R13     2      107 GETIDX        R12     R13      109 SEND          R12     :ord    n&#x3D;0 (0x00)      113 SEND          R12     :to_i   n&#x3D;0 (0x00)      117 LOADI         R13     8      120 SEND          R12     :&lt;&lt;     n&#x3D;1 (0x01)      124 ADD           R11     R12      126 MOVE          R7      R11             ; R7:num1      129 MOVE          R11     R7              ; R7:num1      132 MOVE          R12     R1              ; R1:t      135 MOVE          R13     R6              ; R6:n      138 ADDI          R13     3      141 GETIDX        R12     R13      143 SEND          R12     :ord    n&#x3D;0 (0x00)      147 SEND          R12     :to_i   n&#x3D;0 (0x00)      151 ADD           R11     R12      153 MOVE          R7      R11             ; R7:num1      156 MOVE          R11     R1              ; R1:t      159 MOVE          R12     R6              ; R6:n      162 ADDI          R12     4      165 GETIDX        R11     R12      167 SEND          R11     :ord    n&#x3D;0 (0x00)      171 SEND          R11     :to_i   n&#x3D;0 (0x00)      175 LOADI         R12     24      178 SEND          R11     :&lt;&lt;     n&#x3D;1 (0x01)      182 MOVE          R8      R11             ; R8:num2      185 MOVE          R11     R8              ; R8:num2      188 MOVE          R12     R1              ; R1:t      191 MOVE          R13     R6              ; R6:n      194 ADDI          R13     5      197 GETIDX        R12     R13      199 SEND          R12     :ord    n&#x3D;0 (0x00)      203 SEND          R12     :to_i   n&#x3D;0 (0x00)      207 LOADI         R13     16      210 SEND          R12     :&lt;&lt;     n&#x3D;1 (0x01)      214 ADD           R11     R12      216 MOVE          R8      R11             ; R8:num2      219 MOVE          R11     R8              ; R8:num2      222 MOVE          R12     R1              ; R1:t      225 MOVE          R13     R6              ; R6:n      228 ADDI          R13     6      231 GETIDX        R12     R13      233 SEND          R12     :ord    n&#x3D;0 (0x00)      237 SEND          R12     :to_i   n&#x3D;0 (0x00)      241 LOADI         R13     8      244 SEND          R12     :&lt;&lt;     n&#x3D;1 (0x01)      248 ADD           R11     R12      250 MOVE          R8      R11             ; R8:num2      253 MOVE          R11     R8              ; R8:num2      256 MOVE          R12     R1              ; R1:t      259 MOVE          R13     R6              ; R6:n      262 ADDI          R13     7      265 GETIDX        R12     R13      267 SEND          R12     :ord    n&#x3D;0 (0x00)      271 SEND          R12     :to_i   n&#x3D;0 (0x00)      275 ADD           R11     R12      277 MOVE          R8      R11             ; R8:num2      280 MOVE          R12     R7              ; R7:num1      283 MOVE          R13     R8              ; R8:num2      286 MOVE          R14     R4              ; R4:key      289 SSEND         R11     :enc_one        n&#x3D;3 (0x03)      293 AREF          R9      R11     0       ; R9:enum1      297 AREF          R10     R11     1       ; R10:enum2      301 MOVE          R11     R5              ; R5:c      304 MOVE          R12     R9              ; R9:enum1      307 SEND          R11     :&lt;&lt;     n&#x3D;1 (0x01)      311 MOVE          R11     R5              ; R5:c      314 MOVE          R12     R10             ; R10:enum2      317 SEND          R11     :&lt;&lt;     n&#x3D;1 (0x01)      321 ADDI          R6      8               ; R6:n      324 JMP           019      327 MOVE          R11     R5              ; R5:c      330 BLOCK         R12     I(0:0x55d3b2e1ea80)      333 SENDB         R11     :collect        n&#x3D;0 (0x00)      337 STRING        R12     L(0)    ;       340 SEND          R11     :join   n&#x3D;1 (0x01)      344 RETURN        R11irep 0x55d3b2e1ea80 nregs&#x3D;7 nlocals&#x3D;3 pools&#x3D;1 syms&#x3D;1 reps&#x3D;0 ilen&#x3D;16local variable names:  R1:x  R2:&amp;      000 ENTER         1:0:0:0:0:0:0 (0x40000)      004 STRING        R4      L(0)    ; %.8x      007 MOVE          R5      R1              ; R1:x      010 SSEND         R3      :sprintf        n&#x3D;2 (0x02)      014 RETURN        R3irep 0x55d3b2e1eb50 nregs&#x3D;6 nlocals&#x3D;3 pools&#x3D;1 syms&#x3D;1 reps&#x3D;0 ilen&#x3D;16local variable names:  R1:p  R2:&amp;      000 ENTER         1:0:0:0:0:0:0 (0x40000)      004 MOVE          R3      R1              ; R1:p      007 STRING        R4      L(0)    ; L*      010 SEND          R3      :unpack n&#x3D;1 (0x01)      014 RETURN        R3irep 0x55d3b2e1ec20 nregs&#x3D;11 nlocals&#x3D;8 pools&#x3D;0 syms&#x3D;2 reps&#x3D;1 ilen&#x3D;42local variable names:  R1:num1  R2:num2  R3:key  R4:&amp;  R5:y  R6:z  R7:s      000 ENTER         3:0:0:0:0:0:0 (0xc0000)      004 MOVE          R8      R1              ; R1:num1      007 MOVE          R9      R2              ; R2:num2      010 LOADI_0       R10      012 MOVE          R5      R8              ; R5:y      015 MOVE          R6      R9              ; R6:z      018 MOVE          R7      R10             ; R7:s      021 GETCONST      R8      YY      024 BLOCK         R9      I(0:0x55d3b2e1ecf0)      027 SENDB         R8      :times  n&#x3D;0 (0x00)      031 MOVE          R8      R5              ; R5:y      034 MOVE          R9      R6              ; R6:z      037 ARRAY         R8      R8      2      040 RETURN        R8irep 0x55d3b2e1ecf0 nregs&#x3D;10 nlocals&#x3D;3 pools&#x3D;1 syms&#x3D;5 reps&#x3D;0 ilen&#x3D;186local variable names:  R1:i  R2:&amp;      000 ENTER         1:0:0:0:0:0:0 (0x40000)      004 GETUPVAR      R3      5       0      008 GETUPVAR      R4      6       0      012 LOADI_3       R5      014 SEND          R4      :&lt;&lt;     n&#x3D;1 (0x01)      018 GETUPVAR      R5      6       0      022 LOADI_5       R6      024 SEND          R5      :&gt;&gt;     n&#x3D;1 (0x01)      028 SEND          R4      :^      n&#x3D;1 (0x01)      032 GETUPVAR      R5      6       0      036 ADD           R4      R5      038 GETUPVAR      R5      7       0      042 GETUPVAR      R6      3       0      046 GETUPVAR      R7      7       0      050 LOADI         R8      11      053 SEND          R7      :&gt;&gt;     n&#x3D;1 (0x01)      057 ADDI          R7      1      060 LOADI_3       R8      062 SEND          R7      :&amp;      n&#x3D;1 (0x01)      066 GETIDX        R6      R7      068 ADD           R5      R6      070 SEND          R4      :^      n&#x3D;1 (0x01)      074 ADD           R3      R4      076 SETUPVAR      R3      5       0      080 LOADL         R4      L(0)    ; 4294967295      083 SEND          R3      :&amp;      n&#x3D;1 (0x01)      087 SETUPVAR      R3      5       0      091 GETUPVAR      R3      7       0      095 GETCONST      R4      XX      098 ADD           R3      R4      100 SETUPVAR      R3      7       0      104 GETUPVAR      R3      6       0      108 GETUPVAR      R4      5       0      112 LOADI_3       R5      114 SEND          R4      :&lt;&lt;     n&#x3D;1 (0x01)      118 GETUPVAR      R5      5       0      122 LOADI_5       R6      124 SEND          R5      :&gt;&gt;     n&#x3D;1 (0x01)      128 SEND          R4      :^      n&#x3D;1 (0x01)      132 GETUPVAR      R5      5       0      136 ADD           R4      R5      138 GETUPVAR      R5      7       0      142 GETUPVAR      R6      3       0      146 GETUPVAR      R7      7       0      150 ADDI          R7      1      153 LOADI_3       R8      155 SEND          R7      :&amp;      n&#x3D;1 (0x01)      159 GETIDX        R6      R7      161 ADD           R5      R6      163 SEND          R4      :^      n&#x3D;1 (0x01)      167 ADD           R3      R4      169 SETUPVAR      R3      6       0      173 LOADL         R4      L(0)    ; 4294967295      176 SEND          R3      :&amp;      n&#x3D;1 (0x01)      180 SETUPVAR      R3      6       0      184 RETURN        R3irep 0x55d3b2e1ed80 nregs&#x3D;13 nlocals&#x3D;8 pools&#x3D;2 syms&#x3D;7 reps&#x3D;0 ilen&#x3D;128local variable names:  R1:p  R2:&amp;  R3:i  R4:lst_ch  R5:c  R6:k  R7:cipher_text      000 ENTER         1:0:0:0:0:0:0 (0x40000)      004 LOADI_0       R3                      ; R3:i      006 LOADI_0       R4                      ; R4:lst_ch      008 MOVE          R8      R3              ; R3:i      011 MOVE          R9      R1              ; R1:p      014 SEND          R9      :length n&#x3D;0 (0x00)      018 LT            R8      R9      020 JMPNOT        R8      086      024 MOVE          R8      R1              ; R1:p      027 MOVE          R9      R3              ; R3:i      030 GETIDX        R8      R9      032 SEND          R8      :ord    n&#x3D;0 (0x00)      036 MOVE          R5      R8              ; R5:c      039 MOVE          R8      R5              ; R5:c      042 MOVE          R9      R4              ; R4:lst_ch      045 SEND          R8      :^      n&#x3D;1 (0x01)      049 MOVE          R9      R3              ; R3:i      052 ADDI          R9      1      055 SEND          R8      :^      n&#x3D;1 (0x01)      059 SEND          R8      :chr    n&#x3D;0 (0x00)      063 MOVE          R9      R1              ; R1:p      066 MOVE          R10     R3              ; R3:i      069 MOVE          R11     R8      072 SETIDX        R9      R10     R11      074 MOVE          R8      R5              ; R5:c      077 MOVE          R4      R8              ; R4:lst_ch      080 ADDI          R3      1               ; R3:i      083 JMP           008      086 STRING        R6      L(0)    ; aaaassssddddffff      ; R6:k      089 GETCONST      R8      Crypt      092 GETMCNST      R8      R8::CIPHER      095 MOVE          R9      R1              ; R1:p      098 MOVE          R10     R6              ; R6:k      101 SEND          R8      :encrypt        n&#x3D;2 (0x02)      105 MOVE          R7      R8              ; R7:cipher_text      108 MOVE          R8      R7              ; R7:cipher_text      111 STRING        R9      L(1)    ; f469358b7f165145116e127ad6105917bce5225d6d62a714c390c5ed93b22d8b6b102a8813488fdb      114 EQ            R8      R9      116 JMPNOT        R8      124      120 LOADT         R8      122 RETURN        R8      124 LOADF         R8      126 RETURN        R8<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ruby字节码文档"><a href="#ruby字节码文档" class="headerlink" title="ruby字节码文档"></a>ruby字节码文档</h2><p>找到一份ruby<a href="https://ruby-doc.org/core-mruby/doc/opcode_md.html">字节码文档</a>，可以对着看，比较乱，可以整理一下</p><table><thead><tr><th align="left">Instruction Name</th><th align="center">Operand type</th><th align="left">Semantics</th></tr></thead><tbody><tr><td align="left">OP_NOP</td><td align="center">-</td><td align="left"></td></tr><tr><td align="left">OP_MOVE“</td><td align="center">BB</td><td align="left">R(a) &#x3D; R(b)</td></tr><tr><td align="left">OP_LOADL”</td><td align="center">BB</td><td align="left">R(a) &#x3D; Pool(b)</td></tr><tr><td align="left">OP_LOADI“</td><td align="center">BsB</td><td align="left">R(a) &#x3D; mrb_int(b)</td></tr><tr><td align="left">OP_LOADI_0’</td><td align="center">B</td><td align="left">R(a) &#x3D; 0</td></tr><tr><td align="left">OP_LOADI_1’</td><td align="center">B</td><td align="left">R(a) &#x3D; 1</td></tr><tr><td align="left">OP_LOADI_2’</td><td align="center">B</td><td align="left">R(a) &#x3D; 2</td></tr><tr><td align="left">OP_LOADI_3’</td><td align="center">B</td><td align="left">R(a) &#x3D; 3</td></tr><tr><td align="left">OP_LOADSYM”</td><td align="center">BB</td><td align="left">R(a) &#x3D; Syms(b)</td></tr><tr><td align="left">OP_LOADNIL’</td><td align="center">B</td><td align="left">R(a) &#x3D; nil</td></tr><tr><td align="left">OP_LOADSELF’</td><td align="center">B</td><td align="left">R(a) &#x3D; self</td></tr><tr><td align="left">OP_LOADT’</td><td align="center">B</td><td align="left">R(a) &#x3D; true</td></tr><tr><td align="left">OP_LOADF’</td><td align="center">B</td><td align="left">R(a) &#x3D; false</td></tr><tr><td align="left">OP_GETGV“</td><td align="center">BB</td><td align="left">R(a) &#x3D; getglobal(Syms(b))</td></tr><tr><td align="left">OP_SETGV”</td><td align="center">BB</td><td align="left">setglobal(Syms(b), R(a))</td></tr><tr><td align="left">OP_GETSV“</td><td align="center">BB</td><td align="left">R(a) &#x3D; Special[b]</td></tr><tr><td align="left">OP_SETSV”</td><td align="center">BB</td><td align="left">Special &#x3D; R(a)</td></tr><tr><td align="left">OP_GETIV“</td><td align="center">BB</td><td align="left">R(a) &#x3D; ivget(Syms(b))</td></tr><tr><td align="left">OP_SETIV”</td><td align="center">BB</td><td align="left">ivset(Syms(b),R(a))</td></tr><tr><td align="left">OP_GETCV“</td><td align="center">BB</td><td align="left">R(a) &#x3D; cvget(Syms(b))</td></tr><tr><td align="left">OP_SETCV”</td><td align="center">BB</td><td align="left">cvset(Syms(b),R(a))</td></tr><tr><td align="left">OP_GETCONST“</td><td align="center">BB</td><td align="left">R(a) &#x3D; constget(Syms(b))</td></tr><tr><td align="left">OP_SETCONST”</td><td align="center">BB</td><td align="left">constset(Syms(b),R(a))</td></tr><tr><td align="left">OP_GETMCNST“</td><td align="center">BB</td><td align="left">R(a) &#x3D; R(a)::Syms(b)</td></tr><tr><td align="left">OP_SETMCNST”</td><td align="center">BB</td><td align="left">R(a+1)::Syms(b) &#x3D; R(a)</td></tr><tr><td align="left">OP_GETUPVAR’</td><td align="center">BBB</td><td align="left">R(a) &#x3D; uvget(b,c)</td></tr><tr><td align="left">OP_SETUPVAR’</td><td align="center">BBB</td><td align="left">uvset(b,c,R(a))</td></tr><tr><td align="left">OP_JMP</td><td align="center">S</td><td align="left">pc+&#x3D;a</td></tr><tr><td align="left">OP_JMPIF’</td><td align="center">SB</td><td align="left">if R(b) pc+&#x3D;a</td></tr><tr><td align="left">OP_JMPNOT’</td><td align="center">SB</td><td align="left">if !R(b) pc+&#x3D;a</td></tr><tr><td align="left">OP_ONERR</td><td align="center">sS</td><td align="left">rescue_push(pc+a)</td></tr><tr><td align="left">OP_EXCEPT’</td><td align="center">B</td><td align="left">R(a) &#x3D; exc</td></tr><tr><td align="left">OP_RESCUE“</td><td align="center">BB</td><td align="left">R(b) &#x3D; R(a).isa?(R(b))</td></tr><tr><td align="left">OP_POPERR</td><td align="center">B</td><td align="left">a.times{rescue_pop()}</td></tr><tr><td align="left">OP_RAISE’</td><td align="center">B</td><td align="left">raise(R(a))</td></tr><tr><td align="left">OP_EPOP</td><td align="center">B</td><td align="left">A.times{ensure_pop().call}</td></tr><tr><td align="left">OP_SENDV”</td><td align="center">BB</td><td align="left">R(a) &#x3D; call(R(a),Syms(b),R(a+1))</td></tr><tr><td align="left">OP_SENDVB“</td><td align="center">BB</td><td align="left">R(a) &#x3D; call(R(a),Syms(b),R(a+1),&amp;R(a+2))</td></tr><tr><td align="left">OP_SEND”</td><td align="center">BBB</td><td align="left">R(a) &#x3D; call(R(a),Syms(b),R(a+1),…,R(a+c))</td></tr><tr><td align="left">OP_SENDB“</td><td align="center">BBB</td><td align="left">R(a) &#x3D; call(R(a),Syms(Bx),R(a+1),…,R(a+c),&amp;R(a+c+1))</td></tr><tr><td align="left">OP_CALL’</td><td align="center">B</td><td align="left">R(a) &#x3D; self.call(frame.argc, frame.argv)</td></tr><tr><td align="left">OP_SUPER’</td><td align="center">BB</td><td align="left">R(a) &#x3D; super(R(a+1),… ,R(a+b+1))</td></tr><tr><td align="left">OP_ARGARY’</td><td align="center">BS</td><td align="left">R(a) &#x3D; argument array (16&#x3D;5:1:5:1:4)</td></tr><tr><td align="left">OP_ENTER</td><td align="center">W</td><td align="left">arg setup according to flags (23&#x3D;5:5:1:5:5:1:1)</td></tr><tr><td align="left">OP_KARG”</td><td align="center">BB</td><td align="left">R(a) &#x3D; kdict # todo</td></tr><tr><td align="left">OP_KARG2“</td><td align="center">BB</td><td align="left">R(a) &#x3D; kdict; kdict.rm(Syms(b)) # todo</td></tr><tr><td align="left">OP_RETURN’</td><td align="center">B</td><td align="left">return R(a) (normal)</td></tr><tr><td align="left">OP_RETURN_BLK’</td><td align="center">B</td><td align="left">return R(a) (in-block return)</td></tr><tr><td align="left">OP_BREAK’</td><td align="center">B</td><td align="left">break R(a)</td></tr><tr><td align="left">OP_BLKPUSH’</td><td align="center">BS</td><td align="left">R(a) &#x3D; block (16&#x3D;5:1:5:1:4)</td></tr><tr><td align="left">OP_ADD”</td><td align="center">BB</td><td align="left">R(a) &#x3D; R(a)+R(a+1)</td></tr><tr><td align="left">OP_ADDI“</td><td align="center">BBB</td><td align="left">R(a) &#x3D; R(a)+mrb_int©</td></tr><tr><td align="left">OP_SUB”</td><td align="center">BB</td><td align="left">R(a) &#x3D; R(a)-R(a+1)</td></tr><tr><td align="left">OP_SUBI“</td><td align="center">BB</td><td align="left">R(a) &#x3D; R(a)-C</td></tr><tr><td align="left">OP_MUL”</td><td align="center">BB</td><td align="left">R(a) &#x3D; R(a)R(a+1)</td></tr><tr><td align="left">OP_DIV“</td><td align="center">BB</td><td align="left">R(a) &#x3D; R(a)&#x2F;R(a+1)</td></tr><tr><td align="left">OP_EQ”</td><td align="center">BB</td><td align="left">R(a) &#x3D; R(a)&#x3D;&#x3D;R(a+1)</td></tr><tr><td align="left">OP_LT“</td><td align="center">BB</td><td align="left">R(a) &#x3D; R(a)&lt;R(a+1)</td></tr><tr><td align="left">OP_LE”</td><td align="center">BB</td><td align="left">R(a) &#x3D; R(a)&lt;&#x3D;R(a+1)</td></tr><tr><td align="left">OP_GT“</td><td align="center">BB</td><td align="left">R(a) &#x3D; R</td></tr><tr><td align="left">OP_GE”</td><td align="center">BB</td><td align="left">R(a) &#x3D; R(a)&gt;&#x3D;R(a+1)</td></tr><tr><td align="left">OP_ARRAY’</td><td align="center">BB</td><td align="left">R(a) &#x3D; ary_new(R(a),R(a+1)…R(a+b))</td></tr><tr><td align="left">OP_ARRAY2“</td><td align="center">BB</td><td align="left">R</td></tr><tr><td align="left">OP_ARYCAT’</td><td align="center">B</td><td align="left">ary_cat(R(a),R(a+1))</td></tr><tr><td align="left">OP_ARYPUSH’</td><td align="center">B</td><td align="left">ary_push(R(a),R(a+1))</td></tr><tr><td align="left">OP_AREF’</td><td align="center">BB</td><td align="left">R(a) &#x3D; R(a)</td></tr><tr><td align="left">OP_ASET’</td><td align="center">BB</td><td align="left">R(a) &#x3D; R(a+1)</td></tr><tr><td align="left">OP_APOST’</td><td align="center">BB</td><td align="left">R(a),R(A+1)…R(A+C) &#x3D; R(a)[B…]</td></tr><tr><td align="left">OP_STRING”</td><td align="center">BB</td><td align="left">R(a) &#x3D; str_dup(Lit(b))</td></tr><tr><td align="left">OP_STRCAT’</td><td align="center">B</td><td align="left">str_cat(R(a),R(a+1))</td></tr><tr><td align="left">OP_HASH’</td><td align="center">BB</td><td align="left">R(a) &#x3D; hash_new(R(a),R(a+1)…R(a+b))</td></tr><tr><td align="left">OP_HASHADD’</td><td align="center">BB</td><td align="left">R(a) &#x3D; hash_push(R(a),R(a+1)…R(a+b))</td></tr><tr><td align="left">OP_LAMBDA“</td><td align="center">BB</td><td align="left">R(a) &#x3D; lambda(SEQ,OP_L_LAMBDA)</td></tr><tr><td align="left">OP_BLOCK”</td><td align="center">BB</td><td align="left">R(a) &#x3D; lambda(SEQ,OP_L_BLOCK)</td></tr><tr><td align="left">OP_METHOD“</td><td align="center">BB</td><td align="left">R(a) &#x3D; lambda(SEQ,OP_L_METHOD)</td></tr><tr><td align="left">OP_RANGE_INC’</td><td align="center">B</td><td align="left">R(a) &#x3D; range_new(R(a),R(a+1),FALSE)</td></tr><tr><td align="left">OP_RANGE_EXC’</td><td align="center">B</td><td align="left">R(a) &#x3D; range_new(R(a),R(a+1),TRUE)</td></tr><tr><td align="left">OP_OCLASS’</td><td align="center">B</td><td align="left">R(a) &#x3D; ::Object</td></tr><tr><td align="left">OP_CLASS”</td><td align="center">BB</td><td align="left">R(a) &#x3D; newclass(R(a),Syms(b),R(a+1))</td></tr><tr><td align="left">OP_MODULE“</td><td align="center">BB</td><td align="left">R(a) &#x3D; newmodule(R(a),Syms(b))</td></tr><tr><td align="left">OP_EXEC”</td><td align="center">BB</td><td align="left">R(a) &#x3D; blockexec(R(a),SEQ)</td></tr><tr><td align="left">OP_DEF“</td><td align="center">BB</td><td align="left">R(a).newmethod(Syms(b),R(a+1))</td></tr><tr><td align="left">OP_ALIAS’</td><td align="center">B</td><td align="left">alias_method(R(a),R(a+1),R(a+2))</td></tr><tr><td align="left">OP_UNDEF”</td><td align="center">BB</td><td align="left">undef_method(R(a),Syms(b))</td></tr><tr><td align="left">OP_SCLASS’</td><td align="center">B</td><td align="left">R(a) &#x3D; R(a).singleton_class</td></tr><tr><td align="left">OP_TCLASS’</td><td align="center">B</td><td align="left">R(a) &#x3D; target_class</td></tr><tr><td align="left">OP_ERR’</td><td align="center">B</td><td align="left">raise(RuntimeError, Lit(Bx))</td></tr><tr><td align="left">OP_EXT1</td><td align="center">-</td><td align="left">make 1st operand 16bit</td></tr><tr><td align="left">OP_EXT2</td><td align="center">-</td><td align="left">make 2nd operand 16bit</td></tr><tr><td align="left">OP_EXT3</td><td align="center">-</td><td align="left">make 1st and 2nd operands 16bit</td></tr><tr><td align="left">OP_STOP</td><td align="center">-</td><td align="left">stop VM</td></tr></tbody></table><h2 id="check函数-也包含逐字节xor操作"><a href="#check函数-也包含逐字节xor操作" class="headerlink" title="check函数,也包含逐字节xor操作"></a>check函数,也包含逐字节xor操作</h2><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">irep 0x55d3b2e1ed80 nregs&#x3D;13 nlocals&#x3D;8 pools&#x3D;2 syms&#x3D;7 reps&#x3D;0 ilen&#x3D;128local variable names:  R1:p  R2:&amp;  R3:i  R4:lst_ch  R5:c  R6:k  R7:cipher_text      000 ENTER         1:0:0:0:0:0:0 (0x40000)      004 LOADI_0       R3                      ; R3:i      i&#x3D;0      006 LOADI_0       R4                      ; R4:lst_ch      lst_ch&#x3D;0      008 MOVE          R8      R3              ; R3:i      R8&#x3D;i      011 MOVE          R9      R1              ; R1:p      R9&#x3D;p      014 SEND          R9      :length n&#x3D;0 (0x00)      call length(p)      018 LT            R8      R9      if i&lt;length(p)继续执行，否则跳到86行      020 JMPNOT        R8      086      024 MOVE          R8      R1              ; R1:p      R8&#x3D;p      027 MOVE          R9      R3              ; R3:i      R9&#x3D;i      030 GETIDX        R8      R9      p[i]      032 SEND          R8      :ord    n&#x3D;0 (0x00)      call ord(p[i])      036 MOVE          R5      R8              ; R5:c      c&#x3D;ord(p[i])      039 MOVE          R8      R5              ; R5:c      R8&#x3D;c      042 MOVE          R9      R4              ; R4:lst_ch      R9&#x3D;lst_ch      045 SEND          R8      :^      n&#x3D;1 (0x01)      call c^lst_ch      049 MOVE          R9      R3              ; R3:i      R9&#x3D;i      052 ADDI          R9      1      R9&#x3D;i+1      055 SEND          R8      :^      n&#x3D;1 (0x01)      call c^lst_ch^(i+1)      059 SEND          R8      :chr    n&#x3D;0 (0x00)      call c^lst_ch^(i+1)      063 MOVE          R9      R1              ; R1:p      R9&#x3D;p      066 MOVE          R10     R3              ; R3:i      R10&#x3D;i      069 MOVE          R11     R8      R11&#x3D;c^lst_ch^(i+1)      072 SETIDX        R9      R10     R11      p[i]&#x3D;c^lst_ch^(i+1)      074 MOVE          R8      R5              ; R5:c      R8&#x3D;c      077 MOVE          R4      R8              ; R4:lst_ch      lst_ch&#x3D;c      080 ADDI          R3      1               ; R3:i      R3&#x3D;i+1      083 JMP           008            086 STRING        R6      L(0)    ; aaaassssddddffff      ; R6:k      k&#x3D;aaaassssddddffff      089 GETCONST      R8      Crypt      092 GETMCNST      R8      R8::CIPHER      095 MOVE          R9      R1              ; R1:p      R9&#x3D;p      098 MOVE          R10     R6              ; R6:k      R10&#x3D;k      101 SEND          R8      :encrypt        n&#x3D;2 (0x02)      call encrypt(p,k)      105 MOVE          R7      R8              ; R7:cipher_text      108 MOVE          R8      R7              ; R7:cipher_text      111 STRING        R9      L(1)    ; f469358b7f165145116e127ad6105917bce5225d6d62a714c390c5ed93b22d8b6b102a8813488fdb            114 EQ            R8      R9      if !R8&#x3D;&#x3D;R9 jmp 124      116 JMPNOT        R8      124      if       120 LOADT         R8      122 RETURN        R8      return true      124 LOADF         R8      126 RETURN        R8return false<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>每一行的解释都写在了字节码下面，整理一下</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">:</span>      i<span class="token operator">=</span><span class="token number">0</span>      lst_ch<span class="token operator">=</span><span class="token number">0</span>      <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        c<span class="token operator">=</span><span class="token builtin">ord</span><span class="token punctuation">(</span>p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>        p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>c<span class="token operator">^</span>lst_ch<span class="token operator">^</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>  lst_ch<span class="token operator">=</span>c                k<span class="token operator">=</span><span class="token string">"aaaassssddddffff"</span>        m<span class="token operator">=</span>encrypt<span class="token punctuation">(</span>p<span class="token punctuation">,</span>k<span class="token punctuation">)</span>        <span class="token keyword">if</span> m<span class="token operator">!=</span>f469358b7f165145116e127ad6105917bce5225d6d62a714c390c5ed93b22d8b6b102a8813488fdb<span class="token punctuation">:</span>          <span class="token keyword">return</span> false        <span class="token keyword">else</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="函数定义及调用"><a href="#函数定义及调用" class="headerlink" title="函数定义及调用"></a>函数定义及调用</h2><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">irep 0x55d3b2e1e650 nregs&#x3D;3 nlocals&#x3D;1 pools&#x3D;0 syms&#x3D;6 reps&#x3D;4 ilen&#x3D;55      000 LOADI32       R1      305419896      R1&#x3D;305419896      006 SETCONST      XX      R1      XX&#x3D;305419896      009 LOADI         R1      16      R1&#x3D;16      012 SETCONST      YY      R1      YY&#x3D;16      015 LOADSELF      R1      017 SCLASS                R1      019 METHOD        R2      I(0:0x55d3b2e1e790)      022 DEF           R1      :encrypt      encrypt&#x3D;0x55d3b2e1e790      025 TCLASS        R1      027 METHOD        R2      I(1:0x55d3b2e1e830)      030 DEF           R1      :encrypt      encrypt&#x3D;0x55d3b2e1e830      033 SSEND         R1      :private        n&#x3D;0 (0x00)      call    encrypt&#x3D;0x55d3b2e1e830 #八字节循环累加      037 TCLASS        R1      039 METHOD        R2      I(2:0x55d3b2e1eb50)      042 DEF           R1      :to_key      to_key &#x3D;0x55d3b2e1eb50      045 TCLASS        R1      047 METHOD        R2      I(3:0x55d3b2e1ec20)      050 DEF           R1      :#enc_one      enc_one &#x3D;0x55d3b2e1ec20      053 RETURN        R1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这段好像没什么用，只是把函数名和函数地址对应起来,也就是定义函数,我们把函数地址对应的那块字节码先分析一下</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">irep 0x55d3b2e1e790 nregs&#x3D;9 nlocals&#x3D;5 pools&#x3D;0 syms&#x3D;3 reps&#x3D;0 ilen&#x3D;29local variable names:  R1:t  R2:p  R3:&amp;  R4:cip      000 ENTER         2:0:0:0:0:0:0 (0x80000)      004 GETCONST      R5      CIPHER      R5&#x3D;CIPHER      007 SEND          R5      :new    n&#x3D;0 (0x00)      call R5&#x3D;new CIPHER()      011 MOVE          R4      R5              ; R4:cip      cip&#x3D;new CIPHER()      014 MOVE          R5      R4              ; R4:cip      017 MOVE          R6      R1              ; R1:t      020 MOVE          R7      R2              ; R2:p      023 SEND          R5      :encrypt        n&#x3D;2 (0x02)      call encrypt(t,p)      027 RETURN        R5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">转成python<span class="token keyword">def</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token punctuation">:</span>cip<span class="token operator">=</span>CIPHER<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">return</span> _encrypt<span class="token punctuation">(</span>t<span class="token punctuation">,</span>p<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="对结果进行累加"><a href="#对结果进行累加" class="headerlink" title="对结果进行累加"></a>对结果进行累加</h2><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">irep 0x55d3b2e1e830 nregs&#x3D;16 nlocals&#x3D;11 pools&#x3D;1 syms&#x3D;8 reps&#x3D;1 ilen&#x3D;346local variable names:  R1:t  R2:p  R3:&amp;  R4:key  R5:c  R6:n  R7:num1  R8:num2  R9:enum1  R10:enum2      000 ENTER         2:0:0:0:0:0:0 (0x80000)      004 MOVE          R12     R2              ; R2:p      R12&#x3D;p      007 SSEND         R11     :to_key n&#x3D;1 (0x01)      call to_key(p)      011 MOVE          R4      R11             ; R4:key      key&#x3D;to_key(p)      014 ARRAY         R5      R5      0       ; R5:c      R5      017 LOADI_0       R6                      ; R6:n      n&#x3D;0      019 MOVE          R11     R6              ; R6:n      R11&#x3D;n      022 MOVE          R12     R1              ; R1:t      R12&#x3D;t      025 SEND          R12     :length n&#x3D;0 (0x00)      call length(t)      029 LT            R11     R12      n&lt;length(t)      031 JMPNOT        R11     327      035 MOVE          R11     R1              ; R1:t      R11&#x3D;t      038 MOVE          R12     R6              ; R6:n      R12&#x3D;n      041 GETIDX        R11     R12      t[n]      043 SEND          R11     :ord    n&#x3D;0 (0x00)      ord(t[n])      047 SEND          R11     :to_i   n&#x3D;0 (0x00)      call to_i(ord(t[n]))      051 LOADI         R12     24      R12&#x3D;24      054 SEND          R11     :&lt;&lt;     n&#x3D;1 (0x01)      to_i(ord(n[t]))&lt;&lt;24      058 MOVE          R7      R11             ; R7:num1      num1&#x3D;to_i(ord(n[t]))&lt;&lt;24      061 MOVE          R11     R7              ; R7:num1      R11&#x3D;num1      064 MOVE          R12     R1              ; R1:t      R12&#x3D;t      067 MOVE          R13     R6              ; R6:n      R13&#x3D;n      070 ADDI          R13     1      R13&#x3D;n+1      073 GETIDX        R12     R13      t[n+1]      075 SEND          R12     :ord    n&#x3D;0 (0x00)      ord(t[n+1])      079 SEND          R12     :to_i   n&#x3D;0 (0x00)      call to_i(ord(t[n+1]))      083 LOADI         R13     16      R13&#x3D;16      086 SEND          R12     :&lt;&lt;     n&#x3D;1 (0x01)      to_i(ord(t[n+1]))&lt;&lt;16      090 ADD           R11     R12      num1+&#x3D; to_i(ord(t[n+1]))&lt;&lt;16      092 MOVE          R7      R11             ; R7:num1      095 MOVE          R11     R7              ; R7:num1      R11&#x3D;num1      098 MOVE          R12     R1              ; R1:t      R12&#x3D;t      101 MOVE          R13     R6              ; R6:n      R13&#x3D;n      104 ADDI          R13     2      R13&#x3D;n+2      107 GETIDX        R12     R13      t[n+2]      109 SEND          R12     :ord    n&#x3D;0 (0x00)      ord(t[n+2])      113 SEND          R12     :to_i   n&#x3D;0 (0x00)      to_i(ord(t[n+2]))      117 LOADI         R13     8      R13&#x3D;8      120 SEND          R12     :&lt;&lt;     n&#x3D;1 (0x01)      to_i(ord(t[n+2]))&lt;&lt;8      124 ADD           R11     R12      num1+&#x3D;   to_i(ord(t[n+2]))&lt;&lt;8      126 MOVE          R7      R11             ; R7:num1      129 MOVE          R11     R7              ; R7:num1      R11&#x3D;num1      132 MOVE          R12     R1              ; R1:t      R12&#x3D;t      135 MOVE          R13     R6              ; R6:n      R13&#x3D;n      138 ADDI          R13     3      R13&#x3D;n+3      141 GETIDX        R12     R13      t[n+3]      143 SEND          R12     :ord    n&#x3D;0 (0x00)      ord(t[n+3])      147 SEND          R12     :to_i   n&#x3D;0 (0x00)      to_i(t[n+3])      151 ADD           R11     R12      num1+&#x3D; to_i(t[n+3])      153 MOVE          R7      R11             ; R7:num1      156 MOVE          R11     R1              ; R1:t      159 MOVE          R12     R6              ; R6:n      162 ADDI          R12     4      165 GETIDX        R11     R12      167 SEND          R11     :ord    n&#x3D;0 (0x00)      171 SEND          R11     :to_i   n&#x3D;0 (0x00)      175 LOADI         R12     24      178 SEND          R11     :&lt;&lt;     n&#x3D;1 (0x01)      182 MOVE          R8      R11             ; R8:num2      185 MOVE          R11     R8              ; R8:num2      188 MOVE          R12     R1              ; R1:t      191 MOVE          R13     R6              ; R6:n      194 ADDI          R13     5      197 GETIDX        R12     R13      199 SEND          R12     :ord    n&#x3D;0 (0x00)      203 SEND          R12     :to_i   n&#x3D;0 (0x00)      207 LOADI         R13     16      210 SEND          R12     :&lt;&lt;     n&#x3D;1 (0x01)      214 ADD           R11     R12      216 MOVE          R8      R11             ; R8:num2      219 MOVE          R11     R8              ; R8:num2      222 MOVE          R12     R1              ; R1:t      225 MOVE          R13     R6              ; R6:n      228 ADDI          R13     6      231 GETIDX        R12     R13      233 SEND          R12     :ord    n&#x3D;0 (0x00)      237 SEND          R12     :to_i   n&#x3D;0 (0x00)      241 LOADI         R13     8      244 SEND          R12     :&lt;&lt;     n&#x3D;1 (0x01)      248 ADD           R11     R12      250 MOVE          R8      R11             ; R8:num2      253 MOVE          R11     R8              ; R8:num2      256 MOVE          R12     R1              ; R1:t      259 MOVE          R13     R6              ; R6:n      262 ADDI          R13     7      265 GETIDX        R12     R13      267 SEND          R12     :ord    n&#x3D;0 (0x00)      271 SEND          R12     :to_i   n&#x3D;0 (0x00)      275 ADD           R11     R12      277 MOVE          R8      R11             ; R8:num2      280 MOVE          R12     R7              ; R7:num1      283 MOVE          R13     R8              ; R8:num2      286 MOVE          R14     R4              ; R4:key      289 SSEND         R11     :enc_one        n&#x3D;3 (0x03)      call enc_one(num1,num2,key)      293 AREF          R9      R11     0       ; R9:enum1      297 AREF          R10     R11     1       ; R10:enum2      301 MOVE          R11     R5              ; R5:c      304 MOVE          R12     R9              ; R9:enum1      307 SEND          R11     :&lt;&lt;     n&#x3D;1 (0x01)      311 MOVE          R11     R5              ; R5:c      314 MOVE          R12     R10             ; R10:enum2      317 SEND          R11     :&lt;&lt;     n&#x3D;1 (0x01)      321 ADDI          R6      8               ; R6:n      324 JMP           019      327 MOVE          R11     R5              ; R5:c      330 BLOCK         R12     I(0:0x55d3b2e1ea80)#下面解析      333 SENDB         R11     :collect        n&#x3D;0 (0x00)      337 STRING        R12     L(0)    ;       340 SEND          R11     :join   n&#x3D;1 (0x01)      344 RETURN        R11<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">irep 0x55d3b2e1ea80 nregs&#x3D;7 nlocals&#x3D;3 pools&#x3D;1 syms&#x3D;1 reps&#x3D;0 ilen&#x3D;16local variable names:  R1:x  R2:&amp;      000 ENTER         1:0:0:0:0:0:0 (0x40000)      004 STRING        R4      L(0)    ; %.8x      007 MOVE          R5      R1              ; R1:x      010 SSEND         R3      :sprintf        n&#x3D;2 (0x02)      call sprintf（%.8x）      014 RETURN        R3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这段代码比较有规律，分析前面一段就行了，然后我们写python代码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">c<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    num1 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">24</span>        num1 <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span><span class="token number">16</span>        num1 <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>n<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span><span class="token number">8</span>        num1 <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>n<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        num2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>n<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">24</span>        num2 <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>n<span class="token operator">+</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span><span class="token number">16</span>        num2 <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>n<span class="token operator">+</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span><span class="token number">8</span>        num2 <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>n<span class="token operator">+</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                enum1，enum2<span class="token operator">=</span>enc_one<span class="token punctuation">(</span>num1<span class="token punctuation">,</span>num2<span class="token punctuation">,</span>key<span class="token punctuation">)</span>        c<span class="token punctuation">.</span>append<span class="token punctuation">(</span>enum1<span class="token punctuation">)</span>        c<span class="token punctuation">.</span>append<span class="token punctuation">(</span>enum2<span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>          <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">irep x0x55d3b2e1e580 nregs&#x3D;3 nlocals&#x3D;1 pools&#x3D;0 syms&#x3D;1 reps&#x3D;1 ilen&#x3D;12      000 LOADNIL       R1      R1&#x3D;nil      002 LOADNIL       R2      R2&#x3D;nil      004 CLASS         R1      :CIPHER      R1&#x3D;new CIPHER      007 EXEC          R1      I(0:0x55d3b2e1e650)#执行define函数      010 RETURN        R1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">mruby 3.1.0 (2022-05-12)irep 0x55d3b2e1e4d0 nregs&#x3D;5 nlocals&#x3D;2 pools&#x3D;1 syms&#x3D;5 reps&#x3D;2 ilen&#x3D;55local variable names:  R1:p      000 LOADNIL       R2      R2&#x3D;nil      002 LOADNIL       R3      R3&#x3D;nil      004 CLASS         R2      :Crypt      R2&#x3D;new Crypt()      007 EXEC          R2      I(0:0x55d3b2e1e580)#实际执行执行define函数      blockexec(R(a),SEQ)      010 TCLASS        R2      012 METHOD        R3      I(1:0x55d3b2e1ed80)#check      015 DEF           R2      :check      018 SSEND         R2      :gets   n&#x3D;0 (0x00)      022 SEND          R2      :chomp  n&#x3D;0 (0x00)      call check      026 MOVE          R1      R2              ; R1:p      029 MOVE          R3      R1              ; R1:p      032 SSEND         R2      :check  n&#x3D;1 (0x01)      036 JMPNOT        R2      050      040 STRING        R3      L(0)    ; yes      043 SSEND         R2      :puts   n&#x3D;1 (0x01)      047 JMP           052      050 LOADNIL       R2      052 RETURN        R2      054 STOP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里应该是check成功打印yes，还有最后一段就是</p><h2 id="魔改XTEA"><a href="#魔改XTEA" class="headerlink" title="魔改XTEA"></a>魔改XTEA</h2><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">irep 0x55d3b2e1ecf0 nregs&#x3D;10 nlocals&#x3D;3 pools&#x3D;1 syms&#x3D;5 reps&#x3D;0 ilen&#x3D;186local variable names:  R1:i  R2:&amp;      000 ENTER         1:0:0:0:0:0:0 (0x40000)      004 GETUPVAR      R3      5       0      008 GETUPVAR      R4      6       0      012 LOADI_3       R5      014 SEND          R4      :&lt;&lt;     n&#x3D;1 (0x01)      018 GETUPVAR      R5      6       0      022 LOADI_5       R6      024 SEND          R5      :&gt;&gt;     n&#x3D;1 (0x01)      028 SEND          R4      :^      n&#x3D;1 (0x01)      032 GETUPVAR      R5      6       0      036 ADD           R4      R5      038 GETUPVAR      R5      7       0      042 GETUPVAR      R6      3       0      046 GETUPVAR      R7      7       0      050 LOADI         R8      11      053 SEND          R7      :&gt;&gt;     n&#x3D;1 (0x01)      057 ADDI          R7      1      060 LOADI_3       R8      062 SEND          R7      :&amp;      n&#x3D;1 (0x01)      066 GETIDX        R6      R7      068 ADD           R5      R6      070 SEND          R4      :^      n&#x3D;1 (0x01)      074 ADD           R3      R4      076 SETUPVAR      R3      5       0      080 LOADL         R4      L(0)    ; 4294967295      083 SEND          R3      :&amp;      n&#x3D;1 (0x01)      087 SETUPVAR      R3      5       0      091 GETUPVAR      R3      7       0      095 GETCONST      R4      XX      098 ADD           R3      R4      100 SETUPVAR      R3      7       0      104 GETUPVAR      R3      6       0      108 GETUPVAR      R4      5       0      112 LOADI_3       R5      114 SEND          R4      :&lt;&lt;     n&#x3D;1 (0x01)      118 GETUPVAR      R5      5       0      122 LOADI_5       R6      124 SEND          R5      :&gt;&gt;     n&#x3D;1 (0x01)      128 SEND          R4      :^      n&#x3D;1 (0x01)      132 GETUPVAR      R5      5       0      136 ADD           R4      R5      138 GETUPVAR      R5      7       0      142 GETUPVAR      R6      3       0      146 GETUPVAR      R7      7       0      150 ADDI          R7      1      153 LOADI_3       R8      155 SEND          R7      :&amp;      n&#x3D;1 (0x01)      159 GETIDX        R6      R7      161 ADD           R5      R6      163 SEND          R4      :^      n&#x3D;1 (0x01)      167 ADD           R3      R4      169 SETUPVAR      R3      6       0      173 LOADL         R4      L(0)    ; 4294967295      176 SEND          R3      :&amp;      n&#x3D;1 (0x01)      180 SETUPVAR      R3      6       0      184 RETURN        R3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里面有许多指令SETUPVAR、GETUPVAR指令不认识，但是有很明显的XTEA特征，而且魔改了</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">void encipher<span class="token punctuation">(</span>unsigned <span class="token builtin">int</span> num_rounds<span class="token punctuation">,</span> uint32_t v<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> uint32_t const key<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     unsigned <span class="token builtin">int</span> i<span class="token punctuation">;</span>     uint32_t v0<span class="token operator">=</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> v1<span class="token operator">=</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token builtin">sum</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> delta<span class="token operator">=</span><span class="token number">0x12345678</span><span class="token punctuation">;</span>     <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num_rounds<span class="token punctuation">;</span> i<span class="token operator">+</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         v0 <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v1 <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v1 <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> v1<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token builtin">sum</span> <span class="token operator">+</span> key<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token operator">>></span><span class="token number">11</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token builtin">sum</span> <span class="token operator">+=</span> delta<span class="token punctuation">;</span>         v1 <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v0 <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v0 <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> v0<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token builtin">sum</span> <span class="token operator">+</span> key<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>     v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>v0<span class="token punctuation">;</span> v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>v1<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>所以最后总结一下，整个程序的执行流程就是输入值进行c^lst_ch^(i+1)异或操作，每组八字节中每四个字节进行累加,最后进行XTEA加密</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">//XTEA</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdint.h></span> </span><span class="token keyword">void</span> <span class="token function">encipher</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> num_rounds<span class="token punctuation">,</span> <span class="token class-name">uint32_t</span> v<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token class-name">uint32_t</span> <span class="token keyword">const</span> key<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">unsigned</span> <span class="token keyword">int</span> i<span class="token punctuation">;</span>     <span class="token class-name">uint32_t</span> v0<span class="token operator">=</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> v1<span class="token operator">=</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> delta<span class="token operator">=</span><span class="token number">0x12345678</span><span class="token punctuation">,</span> sum<span class="token operator">=</span>delta<span class="token operator">*</span>num_rounds<span class="token punctuation">;</span>     <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num_rounds<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         v1 <span class="token operator">-=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v0 <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v0 <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> v0<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>sum <span class="token operator">+</span> key<span class="token punctuation">[</span><span class="token punctuation">(</span>sum<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         sum <span class="token operator">-=</span> delta<span class="token punctuation">;</span>         v0 <span class="token operator">-=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v1 <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v1 <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> v1<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>sum <span class="token operator">+</span> key<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">(</span>sum<span class="token operator">>></span><span class="token number">11</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>v0<span class="token punctuation">;</span> v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>v1<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token class-name">uint32_t</span> v<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">0xf469358b</span><span class="token punctuation">,</span><span class="token number">0x7f165145</span><span class="token punctuation">,</span><span class="token number">0x116e127a</span><span class="token punctuation">,</span><span class="token number">0xd6105917</span><span class="token punctuation">,</span><span class="token number">0xbce5225d</span><span class="token punctuation">,</span><span class="token number">0x6d62a714</span><span class="token punctuation">,</span><span class="token number">0xc390c5ed</span><span class="token punctuation">,</span><span class="token number">0x93b22d8b</span><span class="token punctuation">,</span><span class="token number">0x6b102a88</span><span class="token punctuation">,</span><span class="token number">0x13488fdb</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token class-name">uint32_t</span> k<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token char">'aaaa'</span><span class="token punctuation">,</span><span class="token char">'ssss'</span><span class="token punctuation">,</span><span class="token char">'dddd'</span><span class="token punctuation">,</span><span class="token char">'ffff'</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> i<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">encipher</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>v<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%08x%08x"</span><span class="token punctuation">,</span>v<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>v<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>#<span class="token number">67080e02194</span>b500d5c585f0b5e40461511470a08154211560d47491e04031d262771217626242765<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后就是对这串16进制数进行xor操作了</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">cipher <span class="token operator">=</span> <span class="token builtin">bytes</span><span class="token punctuation">.</span>fromhex<span class="token punctuation">(</span><span class="token string">'67080e02194b500d5c585f0b5e40461511470a08154211560d47491e04031d262771217626242765'</span><span class="token punctuation">)</span>cipher <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>cipher<span class="token punctuation">)</span>lst_ch<span class="token operator">=</span><span class="token number">0</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>cipher<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    cipher<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span><span class="token operator">=</span>lst_ch <span class="token operator">^</span> <span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>    lst_ch <span class="token operator">=</span> cipher<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bytes</span><span class="token punctuation">(</span>cipher<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#flag&#123;6ad1c70c-daa4-11ec-9d64-0242ac1200&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="secreeeeet"><a href="#secreeeeet" class="headerlink" title="secreeeeet"></a>secreeeeet</h1><p>这题还没有复现出来，等复现完毕再补上…..</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这次国赛虽然题目出得有点恶心，两道阅读题，但是学到了很多，ast和ruby之前很少接触到，这次有了些理解，以后遇到类似的题目就能有点思路。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022DASCTF Apr X FATE 防疫挑战赛</title>
      <link href="//post/2022DASCTF%20Apr%20X%20FATE%20%E9%98%B2%E7%96%AB%E6%8C%91%E6%88%98%E8%B5%9B.html"/>
      <url>//post/2022DASCTF%20Apr%20X%20FATE%20%E9%98%B2%E7%96%AB%E6%8C%91%E6%88%98%E8%B5%9B.html</url>
      
        <content type="html"><![CDATA[<h1 id="2022DASCTF-Apr-X-FATE-防疫挑战赛"><a href="#2022DASCTF-Apr-X-FATE-防疫挑战赛" class="headerlink" title="2022DASCTF Apr X FATE 防疫挑战赛"></a>2022DASCTF Apr X FATE 防疫挑战赛</h1><h2 id="Crackme"><a href="#Crackme" class="headerlink" title="Crackme"></a>Crackme</h2><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/WX20220521-215657@2x.png"></p><p>首先随便输入字符串，看看有什么反应，出现Wrong!!!的MessageBox，可以尝试去IDA搜索字符串，通过交叉引用找到逻辑函数，分析一下。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/WX20220519-101401@2x.png"></p><p>首先是key的长度是8位，flag的长度是32位，然后就是key的前四位进行某种操作sub_403510(后面会分析)，然后同理对key的后四位进行同样的操作，最后是整个key，只不过三次的函数参数都不同，分析一下sub_403510函数</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/WX20220519-100429@2x.png"></p><p>这里用到了windows的密码库，对应的API都可以在msdn上查到，主要注意CryptCreateHash的第二个参数，它决定了使用那种加密方式，<a href="https://docs.microsoft.com/en-us/windows/win32/seccrypto/alg-id">查询网址</a></p><p>因此三次加密分别是md5、sha、md5，这些都是可以经过网站在线解密的，只不过需要动调获取密文。</p><p>继续返回主函数分析，最后有个对flag的加密，然后就是加密后的flag与密文进行对比，我们分析一下sub_4036E0(),参数如下</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/WX20220521-221756@2x.png"></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/WX20220521-222425@2x.png"></p><p>其中CryptDeriveKey第二个参数标识要为其生成密钥的对称加密算法的 <a href="https://docs.microsoft.com/en-us/windows/desktop/SecCrypto/alg-id">ALG_ID</a>结构，也就是对传入的flag进行加密，加密方式查询后为AES</p><p>然后我们就通过动调去拿数据，但是程序带有反调试，需要我们去进行反反调试，没有发现常见的反调试，在字符串中搜索Thread,发现ZwSetInformationThread，交叉引用过去</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/WX20220522-075904@2x.png"></p><p>这里是自己实现的反调试，<a href="https://ctf-wiki.org/reverse/windows/anti-debug/zwsetinformationthread/">相关介绍</a></p><p>注意到该处 ZwSetInformationThread 函数的第 2 个参数为 ThreadHideFromDebugger，其值为 0x11。调试执行到该函数时，若发现第 2 个参数值为 0x11，跳过或者将 0x11 修改为其他值即可</p><p>我这里直接patch成0x9了</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/WX20220522-080156@2x.png"></p><p>然后在第一次memcmp处下断点，获取key前四位md5后的值</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/WX20220522-080456@2x.png"></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/WX20220522-080549@2x.png"></p><p>直接找个网站解一下试试</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/WX20220522-080702@2x.png"></p><p>前四个字符为NocT,同理获取第二次sha加密的密文</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/WX20220522-080802@2x.png"></p><p><a href="https://crackstation.net/">在线解密sha1</a></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/WX20220522-081129@2x.png"></p><p>所以现在的key为NocTuRne,之后就是模拟调用win32 的aes解密api来解密的过程了,先调出密文</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/WX20220522-082059@2x.png"></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">unsigned</span> <span class="token keyword">char</span> ida_chars<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token punctuation">&#123;</span>  <span class="token number">0x5B</span><span class="token punctuation">,</span> <span class="token number">0x9C</span><span class="token punctuation">,</span> <span class="token number">0xEE</span><span class="token punctuation">,</span> <span class="token number">0xB2</span><span class="token punctuation">,</span> <span class="token number">0x3B</span><span class="token punctuation">,</span> <span class="token number">0xB7</span><span class="token punctuation">,</span> <span class="token number">0xD7</span><span class="token punctuation">,</span> <span class="token number">0x34</span><span class="token punctuation">,</span> <span class="token number">0xF3</span><span class="token punctuation">,</span> <span class="token number">0x1B</span><span class="token punctuation">,</span>   <span class="token number">0x75</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span> <span class="token number">0xC6</span><span class="token punctuation">,</span> <span class="token number">0xB2</span><span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token number">0xE8</span><span class="token punctuation">,</span> <span class="token number">0xDE</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0x74</span><span class="token punctuation">,</span>   <span class="token number">0x75</span><span class="token punctuation">,</span> <span class="token number">0x1B</span><span class="token punctuation">,</span> <span class="token number">0x47</span><span class="token punctuation">,</span> <span class="token number">0x6A</span><span class="token punctuation">,</span> <span class="token number">0xD4</span><span class="token punctuation">,</span> <span class="token number">0x37</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0xFC</span><span class="token punctuation">,</span> <span class="token number">0x67</span><span class="token punctuation">,</span>   <span class="token number">0xE6</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0xDA</span><span class="token punctuation">,</span> <span class="token number">0x0D</span><span class="token punctuation">,</span> <span class="token number">0x58</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0xEA</span><span class="token punctuation">,</span>   <span class="token number">0x7B</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x85</span><span class="token punctuation">,</span> <span class="token number">0x6C</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0x65</span><span class="token punctuation">,</span> <span class="token number">0xAF</span><span class="token punctuation">,</span> <span class="token number">0xB4</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>解密脚本</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Windows.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;wincrypt.h></span></span> <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    BYTE pbData<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">0x5c</span><span class="token punctuation">,</span><span class="token number">0x53</span><span class="token punctuation">,</span><span class="token number">0xa4</span><span class="token punctuation">,</span><span class="token number">0xa4</span><span class="token punctuation">,</span><span class="token number">0x1d</span><span class="token punctuation">,</span><span class="token number">0x52</span><span class="token punctuation">,</span><span class="token number">0x43</span><span class="token punctuation">,</span><span class="token number">0x7a</span><span class="token punctuation">,</span><span class="token number">0x9f</span><span class="token punctuation">,</span><span class="token number">0xa1</span><span class="token punctuation">,</span><span class="token number">0xe9</span><span class="token punctuation">,</span><span class="token number">0xc2</span><span class="token punctuation">,</span><span class="token number">0x6c</span><span class="token punctuation">,</span><span class="token number">0xa5</span><span class="token punctuation">,</span><span class="token number">0x90</span><span class="token punctuation">,</span><span class="token number">0x90</span><span class="token punctuation">,</span><span class="token number">0x0</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token comment">//key_buf,key被md5后</span>    BYTE flag_encrypt<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">0x5B</span><span class="token punctuation">,</span> <span class="token number">0x9C</span><span class="token punctuation">,</span> <span class="token number">0xEE</span><span class="token punctuation">,</span> <span class="token number">0xB2</span><span class="token punctuation">,</span> <span class="token number">0x3B</span><span class="token punctuation">,</span> <span class="token number">0xB7</span><span class="token punctuation">,</span> <span class="token number">0xD7</span><span class="token punctuation">,</span> <span class="token number">0x34</span><span class="token punctuation">,</span> <span class="token number">0xF3</span><span class="token punctuation">,</span> <span class="token number">0x1B</span><span class="token punctuation">,</span> <span class="token number">0x75</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span> <span class="token number">0xC6</span><span class="token punctuation">,</span> <span class="token number">0xB2</span><span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token number">0xE8</span><span class="token punctuation">,</span> <span class="token number">0xDE</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0x74</span><span class="token punctuation">,</span> <span class="token number">0x75</span><span class="token punctuation">,</span> <span class="token number">0x1B</span><span class="token punctuation">,</span> <span class="token number">0x47</span><span class="token punctuation">,</span> <span class="token number">0x6A</span><span class="token punctuation">,</span> <span class="token number">0xD4</span><span class="token punctuation">,</span> <span class="token number">0x37</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0xFC</span><span class="token punctuation">,</span> <span class="token number">0x67</span><span class="token punctuation">,</span> <span class="token number">0xE6</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0xDA</span><span class="token punctuation">,</span> <span class="token number">0x0D</span><span class="token punctuation">,</span> <span class="token number">0x58</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0xEA</span><span class="token punctuation">,</span> <span class="token number">0x7B</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x85</span><span class="token punctuation">,</span> <span class="token number">0x6C</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0x65</span><span class="token punctuation">,</span> <span class="token number">0xAF</span><span class="token punctuation">,</span> <span class="token number">0xB4</span><span class="token punctuation">,</span><span class="token number">0x0</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    DWORD dwDataLen <span class="token operator">=</span> <span class="token number">0x10</span><span class="token punctuation">;</span>    DWORD ddwDataLen<span class="token punctuation">;</span>    DWORD<span class="token operator">*</span> pdwDataLen <span class="token operator">=</span> <span class="token operator">&amp;</span>ddwDataLen<span class="token punctuation">;</span>    <span class="token operator">*</span>pdwDataLen <span class="token operator">=</span> <span class="token number">0x20</span><span class="token punctuation">;</span>      BOOL v6<span class="token punctuation">;</span> <span class="token comment">// [esp+4h] [ebp-18h]</span>    HCRYPTKEY phKey<span class="token punctuation">;</span> <span class="token comment">// [esp+Ch] [ebp-10h] BYREF</span>    HCRYPTPROV phProv<span class="token punctuation">;</span> <span class="token comment">// [esp+10h] [ebp-Ch] BYREF</span>    HCRYPTHASH phHash<span class="token punctuation">;</span> <span class="token comment">// [esp+14h] [ebp-8h] BYREF</span>     phProv <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    phHash <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    phKey <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    v6 <span class="token operator">=</span> <span class="token function">CryptAcquireContextA</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>phProv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0x18u</span><span class="token punctuation">,</span> <span class="token number">0xF0000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>v6<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        v6 <span class="token operator">=</span> <span class="token function">CryptCreateHash</span><span class="token punctuation">(</span>phProv<span class="token punctuation">,</span> <span class="token number">0x8003u</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>phHash<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>v6<span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            v6 <span class="token operator">=</span> <span class="token function">CryptHashData</span><span class="token punctuation">(</span>phHash<span class="token punctuation">,</span> pbData<span class="token punctuation">,</span> dwDataLen<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>v6<span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                v6 <span class="token operator">=</span> <span class="token function">CryptDeriveKey</span><span class="token punctuation">(</span>phProv<span class="token punctuation">,</span> <span class="token number">0x660Eu</span><span class="token punctuation">,</span> phHash<span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>phKey<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// key的md5值再生成aes密钥</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>v6<span class="token punctuation">)</span>                    v6 <span class="token operator">=</span> <span class="token function">CryptDecrypt</span><span class="token punctuation">(</span>phKey<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> flag_encrypt<span class="token punctuation">,</span> pdwDataLen<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> flag_encrypt<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>phKey<span class="token punctuation">)</span>        <span class="token function">CryptDestroyKey</span><span class="token punctuation">(</span>phKey<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>phHash<span class="token punctuation">)</span>        <span class="token function">CryptDestroyHash</span><span class="token punctuation">(</span>phHash<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>phProv<span class="token punctuation">)</span>        <span class="token function">CryptReleaseContext</span><span class="token punctuation">(</span>phProv<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> v6<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/WX20220522-082402@2x.png"></p><h2 id="奇怪的交易"><a href="#奇怪的交易" class="headerlink" title="奇怪的交易"></a>奇怪的交易</h2><p>首先先查看文件信息，发现有upx壳，直接在kali用upx -d脱了</p><p>打开文件，发现一堆py开头的函数，推测是py打包的elf文件</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ20220531-191955@2x.png"></p><p>利用python pyinstxtractor.py 文件名 指令获取解包后的文件，此时的pyc文件并不能直接被网站或者脚本反编译，需要修复头部的若干内容,这16个字节从struct.pyc中获得，然后进行反编译</p><h6 id=""><a href="#" class="headerlink" title=""></a><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ20220531-192523@2x.png"></h6><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python</span><span class="token comment"># visit https://tool.lu/pyc/ for more information</span><span class="token comment"># Version: Python 3.10</span><span class="token keyword">from</span> cup <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    flag <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'\xe8\xaf\xb7\xe8\xbe\x93\xe5\x85\xa5flag'</span><span class="token punctuation">)</span>    pub_key <span class="token operator">=</span> <span class="token punctuation">[</span>        0x649EE967E7916A825CC9FD3320BEABF263BEAC68C080F52824A0F521EDB6B78577EC52BF1C9E78F4BB71192F9A23F1A17AA76E5979E4D953329D3CA65FB4A71DA57412B59DFD6AEDF0191C5555D3E5F582B81B5E6B23163E9889204A81AFFDF119FE25C92F4ED59BD3285BCD7AAE14824240D2E33C5A97848F4EB7AAC203DE6330D2B4D8FF61691544FBECD120F99A157B3D2F58FA51B2887A9D06CA383C44D071314A12B17928B96F03A06E959A5AFEFA0183664F52CD32B9FC72A04B45913FCB2D5D2D3A415A14F611CF1EAC2D6C785142A8E9CC41B67A6CD85001B06EDB8CA767D367E56E0AE651491BF8A8C17A38A1835DB9E4A9292B1D86D5776C98CC25L<span class="token punctuation">,</span>        0x647327833ACFEF1F9C83E74E171FC300FA347D4A6769476C33DA82C95120ACB38B62B33D429206FE6E9BB0BB7AB748A1036971BEA36EC47130B749C1C9FF6FE03D0F7D9FC5346EB0E575BDFA6C530AA57CD676894FC080D2DD049AB59625F4B9C78BCFD95CDCD2793E440E26E189D251121CB6EB177FEDB596409034E8B0C5BBD9BD9342235DBB226C9170EFE347FF0FD2CFF9A1F7B647CC83E4D8F005FD7125A89251C768AFE70BDD54B88116814D5030F499BCAC4673CCCC342FB4B6AC58EA5A64546DC25912B6C430529F6A7F449FD96536DE269D1A1B015A4AC6B6E46EE19DCE8143726A6503E290E4BAE6BD78319B5878981F6CFFDB3B818209341FD68BL<span class="token punctuation">]</span>    m <span class="token operator">=</span> libnum<span class="token punctuation">.</span>s2n<span class="token punctuation">(</span>flag<span class="token punctuation">)</span>    c <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> pub_key<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pub_key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    ᘡ <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    ᘙ <span class="token operator">=</span> <span class="token punctuation">[</span>        0xD28ED952L<span class="token punctuation">,</span>        <span class="token number">1472742623</span><span class="token punctuation">,</span>        0xD91BA938L<span class="token punctuation">,</span>        0xF9F3BD2DL<span class="token punctuation">,</span>        0x8EF8E43DL<span class="token punctuation">,</span>        <span class="token number">617653972</span><span class="token punctuation">,</span>        <span class="token number">1474514999</span><span class="token punctuation">,</span>        <span class="token number">1471783658</span><span class="token punctuation">,</span>        <span class="token number">1012864704</span><span class="token punctuation">,</span>        0xD7821910L<span class="token punctuation">,</span>        <span class="token number">993855884</span><span class="token punctuation">,</span>        <span class="token number">438456717</span><span class="token punctuation">,</span>        0xC83555B7L<span class="token punctuation">,</span>        0xE8DFF468L<span class="token punctuation">,</span>        <span class="token number">198959101</span><span class="token punctuation">,</span>        0xC5B84FEBL<span class="token punctuation">,</span>        0xD9F837C6L<span class="token punctuation">,</span>        <span class="token number">613157871</span><span class="token punctuation">,</span>        0x8EFA4EDDL<span class="token punctuation">,</span>        <span class="token number">97286225</span><span class="token punctuation">,</span>        0x8B4B608CL<span class="token punctuation">,</span>        <span class="token number">1471645170</span><span class="token punctuation">,</span>        0xC0B62792L<span class="token punctuation">,</span>        <span class="token number">583597118</span><span class="token punctuation">,</span>        0xAAB1C22DL<span class="token punctuation">,</span>        0xBDB9C266L<span class="token punctuation">,</span>        <span class="token number">1384330715</span><span class="token punctuation">,</span>        0xAE9F9816L<span class="token punctuation">,</span>        0xD1F40B3CL<span class="token punctuation">,</span>        0x8206DDC3L<span class="token punctuation">,</span>        0xC4E0BADCL<span class="token punctuation">,</span>        0xE407BD26L<span class="token punctuation">,</span>        <span class="token number">145643141</span><span class="token punctuation">,</span>        0x8016C6A5L<span class="token punctuation">,</span>        0xAF4AB9D3L<span class="token punctuation">,</span>        <span class="token number">506798154</span><span class="token punctuation">,</span>        <span class="token number">994590281</span><span class="token punctuation">,</span>        0x85082A0BL<span class="token punctuation">,</span>        0xCA0BC95AL<span class="token punctuation">,</span>        0xA7BE567CL<span class="token punctuation">,</span>        <span class="token number">1105937096</span><span class="token punctuation">,</span>        <span class="token number">1789727804</span><span class="token punctuation">,</span>        0xDFEFB591L<span class="token punctuation">,</span>        0x93346B38L<span class="token punctuation">,</span>        <span class="token number">1162286478</span><span class="token punctuation">,</span>        <span class="token number">680814033</span><span class="token punctuation">,</span>        0xAEE1A7A2L<span class="token punctuation">,</span>        0x80E574AEL<span class="token punctuation">,</span>        0xF154F55FL<span class="token punctuation">,</span>        <span class="token number">2121620700</span><span class="token punctuation">,</span>        0xFCBDA653L<span class="token punctuation">,</span>        0x8E902444L<span class="token punctuation">,</span>        0xCA742E12L<span class="token punctuation">,</span>        0xB8424071L<span class="token punctuation">,</span>        0xB4B15EC2L<span class="token punctuation">,</span>        0x943BFA09L<span class="token punctuation">,</span>        0xBC97CD93L<span class="token punctuation">,</span>        <span class="token number">1285603712</span><span class="token punctuation">,</span>        <span class="token number">798920280</span><span class="token punctuation">,</span>        0x8B58328FL<span class="token punctuation">,</span>        0xF9822360L<span class="token punctuation">,</span>        0xD1FD15EEL<span class="token punctuation">,</span>        <span class="token number">1077514121</span><span class="token punctuation">,</span>        <span class="token number">1436444106</span><span class="token punctuation">,</span>        0xA2D6C17EL<span class="token punctuation">,</span>        <span class="token number">1507202797</span><span class="token punctuation">,</span>        <span class="token number">500756149</span><span class="token punctuation">,</span>        <span class="token number">198754565</span><span class="token punctuation">,</span>        0x8E014807L<span class="token punctuation">,</span>        <span class="token number">880454148</span><span class="token punctuation">,</span>        <span class="token number">1970517398</span><span class="token punctuation">,</span>        0xBFC6EE25L<span class="token punctuation">,</span>        <span class="token number">1161840191</span><span class="token punctuation">,</span>        <span class="token number">560498076</span><span class="token punctuation">,</span>        <span class="token number">1782600856</span><span class="token punctuation">,</span>        0x9D93FEBEL<span class="token punctuation">,</span>        <span class="token number">1285196205</span><span class="token punctuation">,</span>        <span class="token number">788797746</span><span class="token punctuation">,</span>        <span class="token number">1195724574</span><span class="token punctuation">,</span>        0xF2174A07L<span class="token punctuation">,</span>        <span class="token number">103427523</span><span class="token punctuation">,</span>        0x952BFE83L<span class="token punctuation">,</span>        0xF730AC4CL<span class="token punctuation">,</span>        <span class="token number">617564657</span><span class="token punctuation">,</span>        <span class="token number">978211984</span><span class="token punctuation">,</span>        <span class="token number">1781482121</span><span class="token punctuation">,</span>        0x8379D23AL<span class="token punctuation">,</span>        0xEAD737EEL<span class="token punctuation">,</span>        0xE41555FBL<span class="token punctuation">,</span>        <span class="token number">659557668</span><span class="token punctuation">,</span>        0x99F3B244L<span class="token punctuation">,</span>        <span class="token number">1561884856</span><span class="token punctuation">,</span>        0x842C31A4L<span class="token punctuation">,</span>        <span class="token number">1189296962</span><span class="token punctuation">,</span>        <span class="token number">169145316</span><span class="token punctuation">,</span>        0xA5CE044CL<span class="token punctuation">,</span>        <span class="token number">1323893433</span><span class="token punctuation">,</span>        <span class="token number">824667876</span><span class="token punctuation">,</span>        <span class="token number">408202876</span><span class="token punctuation">,</span>        0xE0178482L<span class="token punctuation">,</span>        0xF412BBBCL<span class="token punctuation">,</span>        <span class="token number">1508996065</span><span class="token punctuation">,</span>        <span class="token number">162419237</span><span class="token punctuation">,</span>        0xDE740B00L<span class="token punctuation">,</span>        0xB7CB64FDL<span class="token punctuation">,</span>        0xEBCADB1FL<span class="token punctuation">,</span>        0x8EAE2326L<span class="token punctuation">,</span>        0x933C216CL<span class="token punctuation">,</span>        0xD7D1F649L<span class="token punctuation">,</span>        <span class="token number">481927014</span><span class="token punctuation">,</span>        0xA448AC16L<span class="token punctuation">,</span>        0xBC082807L<span class="token punctuation">,</span>        <span class="token number">1261069441</span><span class="token punctuation">,</span>        <span class="token number">2063238535</span><span class="token punctuation">,</span>        0x8474A61DL<span class="token punctuation">,</span>        <span class="token number">101459755</span><span class="token punctuation">,</span>        0xBC5654D1L<span class="token punctuation">,</span>        <span class="token number">1721190841</span><span class="token punctuation">,</span>        <span class="token number">1078395785</span><span class="token punctuation">,</span>        <span class="token number">176506553</span><span class="token punctuation">,</span>        0xD3C5280FL<span class="token punctuation">,</span>        <span class="token number">1566142515</span><span class="token punctuation">,</span>        <span class="token number">1938949000</span><span class="token punctuation">,</span>        <span class="token number">1499289517</span><span class="token punctuation">,</span>        0xC59872F8L<span class="token punctuation">,</span>        <span class="token number">829714860</span><span class="token punctuation">,</span>        0xE51502A2L<span class="token punctuation">,</span>        <span class="token number">952932374</span><span class="token punctuation">,</span>        <span class="token number">1283577465</span><span class="token punctuation">,</span>        <span class="token number">2045007203</span><span class="token punctuation">,</span>        0xEBE6A798L<span class="token punctuation">,</span>        0xE09575CDL<span class="token punctuation">,</span>        0xADDF4157L<span class="token punctuation">,</span>        0xC4770191L<span class="token punctuation">,</span>        <span class="token number">482297421</span><span class="token punctuation">,</span>        <span class="token number">1734231412</span><span class="token punctuation">,</span>        0xDAC71054L<span class="token punctuation">,</span>        0x99807E43L<span class="token punctuation">,</span>        0xA88D74B1L<span class="token punctuation">,</span>        0xCB77E028L<span class="token punctuation">,</span>        <span class="token number">1533519803</span><span class="token punctuation">,</span>        0xEEEBC3B6L<span class="token punctuation">,</span>        0xE7E680E5L<span class="token punctuation">,</span>        <span class="token number">272960248</span><span class="token punctuation">,</span>        <span class="token number">317508587</span><span class="token punctuation">,</span>        0xC4B10CDCL<span class="token punctuation">,</span>        0x91776399L<span class="token punctuation">,</span>        <span class="token number">27470488</span><span class="token punctuation">,</span>        <span class="token number">1666674386</span><span class="token punctuation">,</span>        <span class="token number">1737927609</span><span class="token punctuation">,</span>        <span class="token number">750987808</span><span class="token punctuation">,</span>        0x8E364D8FL<span class="token punctuation">,</span>        0xA0985A77L<span class="token punctuation">,</span>        <span class="token number">562925334</span><span class="token punctuation">,</span>        0x837D6DC3L<span class="token punctuation">]</span>    i <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">if</span> i <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">:</span>        ᘞ <span class="token operator">=</span> <span class="token number">0</span>        ᘡ<span class="token punctuation">.</span>append<span class="token punctuation">(</span>ᘞ<span class="token punctuation">)</span>        i <span class="token operator">+=</span> <span class="token number">4</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> i <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">:</span>            ᘝ <span class="token operator">=</span> <span class="token punctuation">[</span>                <span class="token number">54</span><span class="token punctuation">,</span>                <span class="token number">54</span><span class="token punctuation">,</span>                <span class="token number">54</span><span class="token punctuation">,</span>                <span class="token number">54</span><span class="token punctuation">]</span>            ᘠ <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>ᘡ<span class="token punctuation">)</span>            res <span class="token operator">=</span> encrypt<span class="token punctuation">(</span>ᘠ<span class="token punctuation">,</span> ᘡ<span class="token punctuation">,</span> ᘝ<span class="token punctuation">)</span>            <span class="token keyword">if</span> ᘡ <span class="token operator">==</span> ᘙ<span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'You are right!'</span><span class="token punctuation">)</span>                <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>                quit<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Why not drink a cup of tea and have a rest?'</span><span class="token punctuation">)</span>    <span class="token keyword">continue</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>逻辑存在问题，需要我们通过pycdump获取python的字节码，手撸字节码，补充逻辑</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> dis<span class="token punctuation">,</span>marshal<span class="token operator">>></span><span class="token operator">></span> f<span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'a.pyc'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> co<span class="token operator">=</span>marshal<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>f<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> dis<span class="token punctuation">.</span>dis<span class="token punctuation">(</span>co<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>可以读取字节码</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ20220531-202608@2x.png"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python</span><span class="token comment"># visit https://tool.lu/pyc/ for more information</span><span class="token comment"># Version: Python 3.10</span><span class="token keyword">from</span> cup <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    flag <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入flag'</span><span class="token punctuation">)</span>    pub_key <span class="token operator">=</span> <span class="token punctuation">[</span>        0x649EE967E7916A825CC9FD3320BEABF263BEAC68C080F52824A0F521EDB6B78577EC52BF1C9E78F4BB71192F9A23F1A17AA76E5979E4D953329D3CA65FB4A71DA57412B59DFD6AEDF0191C5555D3E5F582B81B5E6B23163E9889204A81AFFDF119FE25C92F4ED59BD3285BCD7AAE14824240D2E33C5A97848F4EB7AAC203DE6330D2B4D8FF61691544FBECD120F99A157B3D2F58FA51B2887A9D06CA383C44D071314A12B17928B96F03A06E959A5AFEFA0183664F52CD32B9FC72A04B45913FCB2D5D2D3A415A14F611CF1EAC2D6C785142A8E9CC41B67A6CD85001B06EDB8CA767D367E56E0AE651491BF8A8C17A38A1835DB9E4A9292B1D86D5776C98CC25L<span class="token punctuation">,</span>        0x647327833ACFEF1F9C83E74E171FC300FA347D4A6769476C33DA82C95120ACB38B62B33D429206FE6E9BB0BB7AB748A1036971BEA36EC47130B749C1C9FF6FE03D0F7D9FC5346EB0E575BDFA6C530AA57CD676894FC080D2DD049AB59625F4B9C78BCFD95CDCD2793E440E26E189D251121CB6EB177FEDB596409034E8B0C5BBD9BD9342235DBB226C9170EFE347FF0FD2CFF9A1F7B647CC83E4D8F005FD7125A89251C768AFE70BDD54B88116814D5030F499BCAC4673CCCC342FB4B6AC58EA5A64546DC25912B6C430529F6A7F449FD96536DE269D1A1B015A4AC6B6E46EE19DCE8143726A6503E290E4BAE6BD78319B5878981F6CFFDB3B818209341FD68BL<span class="token punctuation">]</span>    m <span class="token operator">=</span> libnum<span class="token punctuation">.</span>s2n<span class="token punctuation">(</span>flag<span class="token punctuation">)</span>    c <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> pub_key<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pub_key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    flag1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    encodeflag <span class="token operator">=</span> <span class="token punctuation">[</span>        0xD28ED952L<span class="token punctuation">,</span>        <span class="token number">1472742623</span><span class="token punctuation">,</span>        0xD91BA938L<span class="token punctuation">,</span>        0xF9F3BD2DL<span class="token punctuation">,</span>        0x8EF8E43DL<span class="token punctuation">,</span>        <span class="token number">617653972</span><span class="token punctuation">,</span>        <span class="token number">1474514999</span><span class="token punctuation">,</span>        <span class="token number">1471783658</span><span class="token punctuation">,</span>        <span class="token number">1012864704</span><span class="token punctuation">,</span>        0xD7821910L<span class="token punctuation">,</span>        <span class="token number">993855884</span><span class="token punctuation">,</span>        <span class="token number">438456717</span><span class="token punctuation">,</span>        0xC83555B7L<span class="token punctuation">,</span>        0xE8DFF468L<span class="token punctuation">,</span>        <span class="token number">198959101</span><span class="token punctuation">,</span>        0xC5B84FEBL<span class="token punctuation">,</span>        0xD9F837C6L<span class="token punctuation">,</span>        <span class="token number">613157871</span><span class="token punctuation">,</span>        0x8EFA4EDDL<span class="token punctuation">,</span>        <span class="token number">97286225</span><span class="token punctuation">,</span>        0x8B4B608CL<span class="token punctuation">,</span>        <span class="token number">1471645170</span><span class="token punctuation">,</span>        0xC0B62792L<span class="token punctuation">,</span>        <span class="token number">583597118</span><span class="token punctuation">,</span>        0xAAB1C22DL<span class="token punctuation">,</span>        0xBDB9C266L<span class="token punctuation">,</span>        <span class="token number">1384330715</span><span class="token punctuation">,</span>        0xAE9F9816L<span class="token punctuation">,</span>        0xD1F40B3CL<span class="token punctuation">,</span>        0x8206DDC3L<span class="token punctuation">,</span>        0xC4E0BADCL<span class="token punctuation">,</span>        0xE407BD26L<span class="token punctuation">,</span>        <span class="token number">145643141</span><span class="token punctuation">,</span>        0x8016C6A5L<span class="token punctuation">,</span>        0xAF4AB9D3L<span class="token punctuation">,</span>        <span class="token number">506798154</span><span class="token punctuation">,</span>        <span class="token number">994590281</span><span class="token punctuation">,</span>        0x85082A0BL<span class="token punctuation">,</span>        0xCA0BC95AL<span class="token punctuation">,</span>        0xA7BE567CL<span class="token punctuation">,</span>        <span class="token number">1105937096</span><span class="token punctuation">,</span>        <span class="token number">1789727804</span><span class="token punctuation">,</span>        0xDFEFB591L<span class="token punctuation">,</span>        0x93346B38L<span class="token punctuation">,</span>        <span class="token number">1162286478</span><span class="token punctuation">,</span>        <span class="token number">680814033</span><span class="token punctuation">,</span>        0xAEE1A7A2L<span class="token punctuation">,</span>        0x80E574AEL<span class="token punctuation">,</span>        0xF154F55FL<span class="token punctuation">,</span>        <span class="token number">2121620700</span><span class="token punctuation">,</span>        0xFCBDA653L<span class="token punctuation">,</span>        0x8E902444L<span class="token punctuation">,</span>        0xCA742E12L<span class="token punctuation">,</span>        0xB8424071L<span class="token punctuation">,</span>        0xB4B15EC2L<span class="token punctuation">,</span>        0x943BFA09L<span class="token punctuation">,</span>        0xBC97CD93L<span class="token punctuation">,</span>        <span class="token number">1285603712</span><span class="token punctuation">,</span>        <span class="token number">798920280</span><span class="token punctuation">,</span>        0x8B58328FL<span class="token punctuation">,</span>        0xF9822360L<span class="token punctuation">,</span>        0xD1FD15EEL<span class="token punctuation">,</span>        <span class="token number">1077514121</span><span class="token punctuation">,</span>        <span class="token number">1436444106</span><span class="token punctuation">,</span>        0xA2D6C17EL<span class="token punctuation">,</span>        <span class="token number">1507202797</span><span class="token punctuation">,</span>        <span class="token number">500756149</span><span class="token punctuation">,</span>        <span class="token number">198754565</span><span class="token punctuation">,</span>        0x8E014807L<span class="token punctuation">,</span>        <span class="token number">880454148</span><span class="token punctuation">,</span>        <span class="token number">1970517398</span><span class="token punctuation">,</span>        0xBFC6EE25L<span class="token punctuation">,</span>        <span class="token number">1161840191</span><span class="token punctuation">,</span>        <span class="token number">560498076</span><span class="token punctuation">,</span>        <span class="token number">1782600856</span><span class="token punctuation">,</span>        0x9D93FEBEL<span class="token punctuation">,</span>        <span class="token number">1285196205</span><span class="token punctuation">,</span>        <span class="token number">788797746</span><span class="token punctuation">,</span>        <span class="token number">1195724574</span><span class="token punctuation">,</span>        0xF2174A07L<span class="token punctuation">,</span>        <span class="token number">103427523</span><span class="token punctuation">,</span>        0x952BFE83L<span class="token punctuation">,</span>        0xF730AC4CL<span class="token punctuation">,</span>        <span class="token number">617564657</span><span class="token punctuation">,</span>        <span class="token number">978211984</span><span class="token punctuation">,</span>        <span class="token number">1781482121</span><span class="token punctuation">,</span>        0x8379D23AL<span class="token punctuation">,</span>        0xEAD737EEL<span class="token punctuation">,</span>        0xE41555FBL<span class="token punctuation">,</span>        <span class="token number">659557668</span><span class="token punctuation">,</span>        0x99F3B244L<span class="token punctuation">,</span>        <span class="token number">1561884856</span><span class="token punctuation">,</span>        0x842C31A4L<span class="token punctuation">,</span>        <span class="token number">1189296962</span><span class="token punctuation">,</span>        <span class="token number">169145316</span><span class="token punctuation">,</span>        0xA5CE044CL<span class="token punctuation">,</span>        <span class="token number">1323893433</span><span class="token punctuation">,</span>        <span class="token number">824667876</span><span class="token punctuation">,</span>        <span class="token number">408202876</span><span class="token punctuation">,</span>        0xE0178482L<span class="token punctuation">,</span>        0xF412BBBCL<span class="token punctuation">,</span>        <span class="token number">1508996065</span><span class="token punctuation">,</span>        <span class="token number">162419237</span><span class="token punctuation">,</span>        0xDE740B00L<span class="token punctuation">,</span>        0xB7CB64FDL<span class="token punctuation">,</span>        0xEBCADB1FL<span class="token punctuation">,</span>        0x8EAE2326L<span class="token punctuation">,</span>        0x933C216CL<span class="token punctuation">,</span>        0xD7D1F649L<span class="token punctuation">,</span>        <span class="token number">481927014</span><span class="token punctuation">,</span>        0xA448AC16L<span class="token punctuation">,</span>        0xBC082807L<span class="token punctuation">,</span>        <span class="token number">1261069441</span><span class="token punctuation">,</span>        <span class="token number">2063238535</span><span class="token punctuation">,</span>        0x8474A61DL<span class="token punctuation">,</span>        <span class="token number">101459755</span><span class="token punctuation">,</span>        0xBC5654D1L<span class="token punctuation">,</span>        <span class="token number">1721190841</span><span class="token punctuation">,</span>        <span class="token number">1078395785</span><span class="token punctuation">,</span>        <span class="token number">176506553</span><span class="token punctuation">,</span>        0xD3C5280FL<span class="token punctuation">,</span>        <span class="token number">1566142515</span><span class="token punctuation">,</span>        <span class="token number">1938949000</span><span class="token punctuation">,</span>        <span class="token number">1499289517</span><span class="token punctuation">,</span>        0xC59872F8L<span class="token punctuation">,</span>        <span class="token number">829714860</span><span class="token punctuation">,</span>        0xE51502A2L<span class="token punctuation">,</span>        <span class="token number">952932374</span><span class="token punctuation">,</span>        <span class="token number">1283577465</span><span class="token punctuation">,</span>        <span class="token number">2045007203</span><span class="token punctuation">,</span>        0xEBE6A798L<span class="token punctuation">,</span>        0xE09575CDL<span class="token punctuation">,</span>        0xADDF4157L<span class="token punctuation">,</span>        0xC4770191L<span class="token punctuation">,</span>        <span class="token number">482297421</span><span class="token punctuation">,</span>        <span class="token number">1734231412</span><span class="token punctuation">,</span>        0xDAC71054L<span class="token punctuation">,</span>        0x99807E43L<span class="token punctuation">,</span>        0xA88D74B1L<span class="token punctuation">,</span>        0xCB77E028L<span class="token punctuation">,</span>        <span class="token number">1533519803</span><span class="token punctuation">,</span>        0xEEEBC3B6L<span class="token punctuation">,</span>        0xE7E680E5L<span class="token punctuation">,</span>        <span class="token number">272960248</span><span class="token punctuation">,</span>        <span class="token number">317508587</span><span class="token punctuation">,</span>        0xC4B10CDCL<span class="token punctuation">,</span>        0x91776399L<span class="token punctuation">,</span>        <span class="token number">27470488</span><span class="token punctuation">,</span>        <span class="token number">1666674386</span><span class="token punctuation">,</span>        <span class="token number">1737927609</span><span class="token punctuation">,</span>        <span class="token number">750987808</span><span class="token punctuation">,</span>        0x8E364D8FL<span class="token punctuation">,</span>        0xA0985A77L<span class="token punctuation">,</span>        <span class="token number">562925334</span><span class="token punctuation">,</span>        0x837D6DC3L<span class="token punctuation">]</span>    i <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">if</span> i <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">:</span>        x <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> ii <span class="token keyword">in</span> c<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            x <span class="token operator">=</span> x<span class="token operator">&lt;&lt;</span><span class="token number">8</span><span class="token operator">+</span><span class="token builtin">ord</span><span class="token punctuation">(</span>ii<span class="token punctuation">)</span>        flag1<span class="token punctuation">.</span>append<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        i<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">4</span>                <span class="token keyword">if</span> <span class="token keyword">not</span> i <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">:</span>            key <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">]</span>            <span class="token builtin">len</span> <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>flag1<span class="token punctuation">)</span>            res <span class="token operator">=</span> encrypt<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">,</span> flag1<span class="token punctuation">,</span> key<span class="token punctuation">)</span>            <span class="token keyword">if</span> flag1 <span class="token operator">==</span> encodeflag<span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'You are right!'</span><span class="token punctuation">)</span>                <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>                quit<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Why not drink a cup of tea and have a rest?'</span><span class="token punctuation">)</span>    <span class="token keyword">continue</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>已经修复完了，但是我们不知道encrypt的加密方式，因为这个是来自cup这个包，这个包是作者自己导入的</p><p>关于pyinstaller<a href="https://bbs.pediy.com/thread-271253.htm">打包这篇博客写的很详细</a></p><p>有-key参数的逆向，将py编译成pyc，然后部分压缩成pyz，程序再通过对pyc和pyz的调用，那么问题来了，cup这个包在pyz文件夹中，但是我们pyinstxtractor后，文件是空的，因为我们需要有相同的python环境，本程序的python环境是3.10</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ20220531-210207@2x.png"></p><p>我又下了个python3.10</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ20220531-213218@2x.png"></p><p>我们反编译archive.pyc可以看出pyinstxtractor使用tinyAes加密我们的cup包，有现成的解密脚本可以套</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> tinyaes<span class="token keyword">import</span> zlib CRYPT_BLOCK_SIZE <span class="token operator">=</span> <span class="token number">16</span> <span class="token comment"># 从crypt_key.pyc获取key，也可自行反编译获取</span>key <span class="token operator">=</span> <span class="token builtin">bytes</span><span class="token punctuation">(</span><span class="token string">'0000000000000tea'</span><span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span> inf <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'cup.pyc.encrypted'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token comment"># 打开加密文件</span>outf <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'output.pyc'</span><span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token comment"># 输出文件</span> <span class="token comment"># 按加密块大小进行读取</span>iv <span class="token operator">=</span> inf<span class="token punctuation">.</span>read<span class="token punctuation">(</span>CRYPT_BLOCK_SIZE<span class="token punctuation">)</span> cipher <span class="token operator">=</span> tinyaes<span class="token punctuation">.</span>AES<span class="token punctuation">(</span>key<span class="token punctuation">,</span> iv<span class="token punctuation">)</span> <span class="token comment"># 解密</span>plaintext <span class="token operator">=</span> zlib<span class="token punctuation">.</span>decompress<span class="token punctuation">(</span>cipher<span class="token punctuation">.</span>CTR_xcrypt_buffer<span class="token punctuation">(</span>inf<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 补pyc头(最后自己补也行)</span>outf<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">b'\x6f\x0d\x0d\x0a\0\0\0\0\0\0\0\0\0\0\0\0'</span><span class="token punctuation">)</span> <span class="token comment"># 写入解密数据</span>outf<span class="token punctuation">.</span>write<span class="token punctuation">(</span>plaintext<span class="token punctuation">)</span> inf<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>outf<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>密钥需要我们反汇编crypto_key.pyc文件</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ20220531-213859@2x.png"></p><p>现在就需要解包</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ20220531-213953@2x.png"></p><p>反编译后是一个没有任何修改的xxtea</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ20220531-220500@2x.png"></p><p>所以我们先解xxtea，得到rsa加密的密文，再解rsa</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">DELTA</span> <span class="token expression"><span class="token number">0x9e3779b9</span></span><span class="token comment">//0x61C88647</span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">3532577106</span><span class="token punctuation">,</span> <span class="token number">1472742623</span><span class="token punctuation">,</span> <span class="token number">3642468664</span><span class="token punctuation">,</span> <span class="token number">4193500461</span><span class="token punctuation">,</span> <span class="token number">2398676029</span><span class="token punctuation">,</span> <span class="token number">617653972</span><span class="token punctuation">,</span> <span class="token number">1474514999</span><span class="token punctuation">,</span> <span class="token number">1471783658</span><span class="token punctuation">,</span> <span class="token number">1012864704</span><span class="token punctuation">,</span> <span class="token number">3615627536</span><span class="token punctuation">,</span> <span class="token number">993855884</span><span class="token punctuation">,</span> <span class="token number">438456717</span><span class="token punctuation">,</span> <span class="token number">3358938551</span><span class="token punctuation">,</span> <span class="token number">3906991208</span><span class="token punctuation">,</span> <span class="token number">198959101</span><span class="token punctuation">,</span> <span class="token number">3317190635</span><span class="token punctuation">,</span> <span class="token number">3656923078</span><span class="token punctuation">,</span> <span class="token number">613157871</span><span class="token punctuation">,</span> <span class="token number">2398768861</span><span class="token punctuation">,</span> <span class="token number">97286225</span><span class="token punctuation">,</span> <span class="token number">2336972940</span><span class="token punctuation">,</span> <span class="token number">1471645170</span><span class="token punctuation">,</span> <span class="token number">3233163154</span><span class="token punctuation">,</span> <span class="token number">583597118</span><span class="token punctuation">,</span> <span class="token number">2863776301</span><span class="token punctuation">,</span> <span class="token number">3183067750</span><span class="token punctuation">,</span> <span class="token number">1384330715</span><span class="token punctuation">,</span> <span class="token number">2929694742</span><span class="token punctuation">,</span> <span class="token number">3522431804</span><span class="token punctuation">,</span> <span class="token number">2181488067</span><span class="token punctuation">,</span> <span class="token number">3303062236</span><span class="token punctuation">,</span> <span class="token number">3825712422</span><span class="token punctuation">,</span> <span class="token number">145643141</span><span class="token punctuation">,</span> <span class="token number">2148976293</span><span class="token punctuation">,</span> <span class="token number">2940910035</span><span class="token punctuation">,</span> <span class="token number">506798154</span><span class="token punctuation">,</span> <span class="token number">994590281</span><span class="token punctuation">,</span> <span class="token number">2231904779</span><span class="token punctuation">,</span> <span class="token number">3389770074</span><span class="token punctuation">,</span> <span class="token number">2814269052</span><span class="token punctuation">,</span> <span class="token number">1105937096</span><span class="token punctuation">,</span> <span class="token number">1789727804</span><span class="token punctuation">,</span> <span class="token number">3757028753</span><span class="token punctuation">,</span> <span class="token number">2469686072</span><span class="token punctuation">,</span> <span class="token number">1162286478</span><span class="token punctuation">,</span> <span class="token number">680814033</span><span class="token punctuation">,</span> <span class="token number">2934024098</span><span class="token punctuation">,</span> <span class="token number">2162521262</span><span class="token punctuation">,</span> <span class="token number">4048876895</span><span class="token punctuation">,</span> <span class="token number">2121620700</span><span class="token punctuation">,</span> <span class="token number">4240287315</span><span class="token punctuation">,</span> <span class="token number">2391811140</span><span class="token punctuation">,</span> <span class="token number">3396611602</span><span class="token punctuation">,</span> <span class="token number">3091349617</span><span class="token punctuation">,</span> <span class="token number">3031523010</span><span class="token punctuation">,</span> <span class="token number">2486958601</span><span class="token punctuation">,</span> <span class="token number">3164065171</span><span class="token punctuation">,</span> <span class="token number">1285603712</span><span class="token punctuation">,</span> <span class="token number">798920280</span><span class="token punctuation">,</span> <span class="token number">2337813135</span><span class="token punctuation">,</span> <span class="token number">4186055520</span><span class="token punctuation">,</span> <span class="token number">3523024366</span><span class="token punctuation">,</span> <span class="token number">1077514121</span><span class="token punctuation">,</span> <span class="token number">1436444106</span><span class="token punctuation">,</span>  <span class="token number">2731983230</span><span class="token punctuation">,</span> <span class="token number">1507202797</span><span class="token punctuation">,</span> <span class="token number">500756149</span><span class="token punctuation">,</span> <span class="token number">198754565</span><span class="token punctuation">,</span> <span class="token number">2382448647</span><span class="token punctuation">,</span> <span class="token number">880454148</span><span class="token punctuation">,</span> <span class="token number">1970517398</span><span class="token punctuation">,</span> <span class="token number">3217485349</span><span class="token punctuation">,</span> <span class="token number">1161840191</span><span class="token punctuation">,</span> <span class="token number">560498076</span><span class="token punctuation">,</span> <span class="token number">1782600856</span><span class="token punctuation">,</span> <span class="token number">2643721918</span><span class="token punctuation">,</span> <span class="token number">1285196205</span><span class="token punctuation">,</span>   <span class="token number">788797746</span><span class="token punctuation">,</span> <span class="token number">1195724574</span><span class="token punctuation">,</span> <span class="token number">4061612551</span><span class="token punctuation">,</span> <span class="token number">103427523</span><span class="token punctuation">,</span> <span class="token number">2502688387</span><span class="token punctuation">,</span> <span class="token number">4147162188</span><span class="token punctuation">,</span> <span class="token number">617564657</span><span class="token punctuation">,</span> <span class="token number">978211984</span><span class="token punctuation">,</span> <span class="token number">1781482121</span><span class="token punctuation">,</span> <span class="token number">2205798970</span><span class="token punctuation">,</span> <span class="token number">3939973102</span><span class="token punctuation">,</span> <span class="token number">3826603515</span><span class="token punctuation">,</span> <span class="token number">659557668</span><span class="token punctuation">,</span>   <span class="token number">2582884932</span><span class="token punctuation">,</span> <span class="token number">1561884856</span><span class="token punctuation">,</span> <span class="token number">2217488804</span><span class="token punctuation">,</span> <span class="token number">1189296962</span><span class="token punctuation">,</span> <span class="token number">169145316</span><span class="token punctuation">,</span> <span class="token number">2781742156</span><span class="token punctuation">,</span> <span class="token number">1323893433</span><span class="token punctuation">,</span> <span class="token number">824667876</span><span class="token punctuation">,</span> <span class="token number">408202876</span><span class="token punctuation">,</span> <span class="token number">3759637634</span><span class="token punctuation">,</span> <span class="token number">4094868412</span><span class="token punctuation">,</span> <span class="token number">1508996065</span><span class="token punctuation">,</span> <span class="token number">162419237</span><span class="token punctuation">,</span>   <span class="token number">3732146944</span><span class="token punctuation">,</span> <span class="token number">3083560189</span><span class="token punctuation">,</span> <span class="token number">3955940127</span><span class="token punctuation">,</span> <span class="token number">2393776934</span><span class="token punctuation">,</span> <span class="token number">2470191468</span><span class="token punctuation">,</span> <span class="token number">3620861513</span><span class="token punctuation">,</span> <span class="token number">481927014</span><span class="token punctuation">,</span> <span class="token number">2756226070</span><span class="token punctuation">,</span> <span class="token number">3154651143</span><span class="token punctuation">,</span> <span class="token number">1261069441</span><span class="token punctuation">,</span> <span class="token number">2063238535</span><span class="token punctuation">,</span> <span class="token number">2222237213</span><span class="token punctuation">,</span> <span class="token number">101459755</span><span class="token punctuation">,</span>    <span class="token number">3159774417</span><span class="token punctuation">,</span> <span class="token number">1721190841</span><span class="token punctuation">,</span> <span class="token number">1078395785</span><span class="token punctuation">,</span> <span class="token number">176506553</span><span class="token punctuation">,</span> <span class="token number">3552913423</span><span class="token punctuation">,</span> <span class="token number">1566142515</span><span class="token punctuation">,</span> <span class="token number">1938949000</span><span class="token punctuation">,</span> <span class="token number">1499289517</span><span class="token punctuation">,</span> <span class="token number">3315102456</span><span class="token punctuation">,</span> <span class="token number">829714860</span><span class="token punctuation">,</span> <span class="token number">3843359394</span><span class="token punctuation">,</span> <span class="token number">952932374</span><span class="token punctuation">,</span> <span class="token number">1283577465</span><span class="token punctuation">,</span> <span class="token number">2045007203</span><span class="token punctuation">,</span> <span class="token number">3957761944</span><span class="token punctuation">,</span> <span class="token number">3767891405</span><span class="token punctuation">,</span> <span class="token number">2917089623</span><span class="token punctuation">,</span> <span class="token number">3296133521</span><span class="token punctuation">,</span> <span class="token number">482297421</span><span class="token punctuation">,</span> <span class="token number">1734231412</span><span class="token punctuation">,</span> <span class="token number">3670478932</span><span class="token punctuation">,</span> <span class="token number">2575334979</span><span class="token punctuation">,</span> <span class="token number">2827842737</span><span class="token punctuation">,</span> <span class="token number">3413631016</span><span class="token punctuation">,</span> <span class="token number">1533519803</span><span class="token punctuation">,</span> <span class="token number">4008428470</span><span class="token punctuation">,</span> <span class="token number">3890643173</span><span class="token punctuation">,</span> <span class="token number">272960248</span><span class="token punctuation">,</span> <span class="token number">317508587</span><span class="token punctuation">,</span> <span class="token number">3299937500</span><span class="token punctuation">,</span> <span class="token number">2440520601</span><span class="token punctuation">,</span> <span class="token number">27470488</span><span class="token punctuation">,</span> <span class="token number">1666674386</span><span class="token punctuation">,</span> <span class="token number">1737927609</span><span class="token punctuation">,</span> <span class="token number">750987808</span><span class="token punctuation">,</span> <span class="token number">2385923471</span><span class="token punctuation">,</span> <span class="token number">2694339191</span><span class="token punctuation">,</span> <span class="token number">562925334</span><span class="token punctuation">,</span> <span class="token number">2206035395</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> key<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>p<span class="token punctuation">,</span>rounds<span class="token punctuation">,</span>e<span class="token punctuation">;</span>    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">155</span><span class="token punctuation">;</span>  <span class="token comment">//</span>    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    rounds <span class="token operator">=</span> <span class="token number">6</span> <span class="token operator">+</span> <span class="token number">52</span><span class="token operator">/</span>n<span class="token punctuation">;</span>    y <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    sum <span class="token operator">=</span> <span class="token punctuation">(</span>rounds<span class="token operator">*</span>DELTA<span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0xffffffff</span><span class="token punctuation">;</span>     <span class="token keyword">do</span>                     <span class="token punctuation">&#123;</span>        e <span class="token operator">=</span> sum <span class="token operator">>></span> <span class="token number">2</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>p<span class="token operator">=</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>p<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">;</span>p<span class="token operator">--</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>            z <span class="token operator">=</span> v<span class="token punctuation">[</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            v<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>v<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>z<span class="token operator">>></span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>y<span class="token operator">&lt;&lt;</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">(</span>y<span class="token operator">>></span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>z<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token punctuation">(</span>p<span class="token operator">^</span>e<span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">^</span>z<span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>y <span class="token operator">^</span> sum<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xffffffff</span><span class="token punctuation">;</span>            y <span class="token operator">=</span> v<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        z <span class="token operator">=</span> v<span class="token punctuation">[</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token punctuation">(</span>p<span class="token operator">^</span>e<span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">^</span>z<span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>y <span class="token operator">^</span> sum<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>y<span class="token operator">&lt;&lt;</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>z<span class="token operator">>></span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">(</span>z<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>y<span class="token operator">>></span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xffffffff</span><span class="token punctuation">;</span>        y <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        sum <span class="token operator">=</span> <span class="token punctuation">(</span>sum<span class="token operator">-</span>DELTA<span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0xffffffff</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">--</span>rounds<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>       <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%u"</span><span class="token punctuation">,</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>#<span class="token number">825243185</span> <span class="token number">808661814</span> <span class="token number">892548151</span> <span class="token number">892941616</span> <span class="token number">892876857</span> <span class="token number">909129523</span> <span class="token number">960049970</span> <span class="token number">842217527</span> <span class="token number">825702707</span> <span class="token number">825636663</span> <span class="token number">825505848</span> <span class="token number">876163635</span> <span class="token number">876032567</span> <span class="token number">876033073</span> <span class="token number">959526968</span> <span class="token number">909260343</span> <span class="token number">943077682</span> <span class="token number">892352569</span> <span class="token number">892547384</span> <span class="token number">892876598</span> <span class="token number">892809273</span> <span class="token number">942748210</span> <span class="token number">926234676</span> <span class="token number">808465462</span> <span class="token number">926299448</span> <span class="token number">808858163</span> <span class="token number">892678966</span> <span class="token number">909391921</span> <span class="token number">943207731</span> <span class="token number">909653561</span> <span class="token number">858992688</span> <span class="token number">875706672</span> <span class="token number">808925233</span> <span class="token number">892548658</span> <span class="token number">808531512</span> <span class="token number">808793142</span> <span class="token number">909455416</span> <span class="token number">909391416</span> <span class="token number">875640629</span> <span class="token number">875639608</span> <span class="token number">842543668</span> <span class="token number">925906993</span> <span class="token number">808727608</span> <span class="token number">808990770</span> <span class="token number">892811058</span> <span class="token number">808465714</span> <span class="token number">959984178</span> <span class="token number">959854645</span> <span class="token number">858863412</span> <span class="token number">858796082</span> <span class="token number">858796345</span> <span class="token number">859058993</span> <span class="token number">808662073</span> <span class="token number">808465715</span> <span class="token number">875639088</span> <span class="token number">875968822</span> <span class="token number">943208249</span> <span class="token number">875770168</span> <span class="token number">842020660</span> <span class="token number">876032818</span> <span class="token number">959985205</span> <span class="token number">809054259</span> <span class="token number">892612916</span> <span class="token number">959723825</span> <span class="token number">942814774</span> <span class="token number">942814000</span> <span class="token number">859257144</span> <span class="token number">875574580</span> <span class="token number">926365753</span> <span class="token number">808662582</span> <span class="token number">909389878</span> <span class="token number">892613945</span> <span class="token number">942683445</span> <span class="token number">925906740</span> <span class="token number">842086705</span> <span class="token number">909260083</span> <span class="token number">909129015</span> <span class="token number">825505328</span> <span class="token number">959461173</span> <span class="token number">942748984</span> <span class="token number">825374769</span> <span class="token number">943273008</span> <span class="token number">909129523</span> <span class="token number">942684466</span> <span class="token number">842412854</span> <span class="token number">825504821</span> <span class="token number">808728114</span> <span class="token number">842347826</span> <span class="token number">876163383</span> <span class="token number">808991028</span> <span class="token number">859060281</span> <span class="token number">926496055</span> <span class="token number">858796339</span> <span class="token number">959853875</span> <span class="token number">875901237</span> <span class="token number">959853621</span> <span class="token number">876033078</span> <span class="token number">842281525</span> <span class="token number">925972786</span> <span class="token number">808794161</span> <span class="token number">959657010</span> <span class="token number">825700918</span> <span class="token number">909719609</span> <span class="token number">959788086</span> <span class="token number">959853874</span> <span class="token number">842084408</span> <span class="token number">875575608</span> <span class="token number">909717560</span> <span class="token number">959657527</span> <span class="token number">842348853</span> <span class="token number">959853105</span> <span class="token number">842610743</span> <span class="token number">959460401</span> <span class="token number">892352313</span> <span class="token number">808661553</span> <span class="token number">808990001</span> <span class="token number">925906487</span> <span class="token number">959657784</span> <span class="token number">942879025</span> <span class="token number">875901497</span> <span class="token number">926103350</span> <span class="token number">959657272</span> <span class="token number">875902263</span> <span class="token number">909195568</span> <span class="token number">926101555</span> <span class="token number">909325113</span> <span class="token number">892744498</span> <span class="token number">842610482</span> <span class="token number">892416053</span> <span class="token number">808464949</span> <span class="token number">858796089</span> <span class="token number">808989497</span> <span class="token number">842151736</span> <span class="token number">825832244</span> <span class="token number">875574839</span> <span class="token number">858863155</span> <span class="token number">859256117</span> <span class="token number">875640887</span> <span class="token number">892549173</span> <span class="token number">943272752</span> <span class="token number">876033589</span> <span class="token number">926299954</span> <span class="token number">808990516</span> <span class="token number">842086707</span> <span class="token number">892941366</span> <span class="token number">909455411</span> <span class="token number">892549177</span> <span class="token number">858862391</span> <span class="token number">825504820</span> <span class="token number">876032051</span> <span class="token number">808661305</span> <span class="token number">859123763</span> <span class="token number">926102329</span> <span class="token number">842018867</span> <span class="token number">57</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>中间还有一层是左移的操作，没想到怎么逆写算法，直接爆破吧</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">825243185</span><span class="token punctuation">,</span><span class="token number">808661814</span><span class="token punctuation">,</span><span class="token number">892548151</span><span class="token punctuation">,</span><span class="token number">892941616</span><span class="token punctuation">,</span><span class="token number">892876857</span><span class="token punctuation">,</span><span class="token number">909129523</span><span class="token punctuation">,</span><span class="token number">960049970</span><span class="token punctuation">,</span><span class="token number">842217527</span><span class="token punctuation">,</span><span class="token number">825702707</span><span class="token punctuation">,</span><span class="token number">825636663</span><span class="token punctuation">,</span><span class="token number">825505848</span><span class="token punctuation">,</span><span class="token number">876163635</span><span class="token punctuation">,</span><span class="token number">876032567</span><span class="token punctuation">,</span><span class="token number">876033073</span><span class="token punctuation">,</span><span class="token number">959526968</span><span class="token punctuation">,</span><span class="token number">909260343</span><span class="token punctuation">,</span><span class="token number">943077682</span><span class="token punctuation">,</span><span class="token number">892352569</span><span class="token punctuation">,</span><span class="token number">892547384</span><span class="token punctuation">,</span><span class="token number">892876598</span><span class="token punctuation">,</span><span class="token number">892809273</span><span class="token punctuation">,</span><span class="token number">942748210</span><span class="token punctuation">,</span><span class="token number">926234676</span><span class="token punctuation">,</span><span class="token number">808465462</span><span class="token punctuation">,</span><span class="token number">926299448</span><span class="token punctuation">,</span><span class="token number">808858163</span><span class="token punctuation">,</span><span class="token number">892678966</span><span class="token punctuation">,</span><span class="token number">909391921</span><span class="token punctuation">,</span><span class="token number">943207731</span><span class="token punctuation">,</span><span class="token number">909653561</span><span class="token punctuation">,</span><span class="token number">858992688</span><span class="token punctuation">,</span><span class="token number">875706672</span><span class="token punctuation">,</span><span class="token number">808925233</span><span class="token punctuation">,</span><span class="token number">892548658</span><span class="token punctuation">,</span><span class="token number">808531512</span><span class="token punctuation">,</span><span class="token number">808793142</span><span class="token punctuation">,</span><span class="token number">909455416</span><span class="token punctuation">,</span><span class="token number">909391416</span><span class="token punctuation">,</span><span class="token number">875640629</span><span class="token punctuation">,</span><span class="token number">875639608</span><span class="token punctuation">,</span><span class="token number">842543668</span><span class="token punctuation">,</span><span class="token number">925906993</span><span class="token punctuation">,</span><span class="token number">808727608</span><span class="token punctuation">,</span><span class="token number">808990770</span><span class="token punctuation">,</span><span class="token number">892811058</span><span class="token punctuation">,</span><span class="token number">808465714</span><span class="token punctuation">,</span><span class="token number">959984178</span><span class="token punctuation">,</span><span class="token number">959854645</span><span class="token punctuation">,</span><span class="token number">858863412</span><span class="token punctuation">,</span><span class="token number">858796082</span><span class="token punctuation">,</span><span class="token number">858796345</span><span class="token punctuation">,</span><span class="token number">859058993</span><span class="token punctuation">,</span><span class="token number">808662073</span><span class="token punctuation">,</span><span class="token number">808465715</span><span class="token punctuation">,</span><span class="token number">875639088</span><span class="token punctuation">,</span><span class="token number">875968822</span><span class="token punctuation">,</span><span class="token number">943208249</span><span class="token punctuation">,</span><span class="token number">875770168</span><span class="token punctuation">,</span><span class="token number">842020660</span><span class="token punctuation">,</span><span class="token number">876032818</span><span class="token punctuation">,</span><span class="token number">959985205</span><span class="token punctuation">,</span><span class="token number">809054259</span><span class="token punctuation">,</span><span class="token number">892612916</span><span class="token punctuation">,</span><span class="token number">959723825</span><span class="token punctuation">,</span><span class="token number">942814774</span><span class="token punctuation">,</span><span class="token number">942814000</span><span class="token punctuation">,</span><span class="token number">859257144</span><span class="token punctuation">,</span><span class="token number">875574580</span><span class="token punctuation">,</span><span class="token number">926365753</span><span class="token punctuation">,</span><span class="token number">808662582</span><span class="token punctuation">,</span><span class="token number">909389878</span><span class="token punctuation">,</span><span class="token number">892613945</span><span class="token punctuation">,</span><span class="token number">942683445</span><span class="token punctuation">,</span><span class="token number">925906740</span><span class="token punctuation">,</span><span class="token number">842086705</span><span class="token punctuation">,</span><span class="token number">909260083</span><span class="token punctuation">,</span><span class="token number">909129015</span><span class="token punctuation">,</span><span class="token number">825505328</span><span class="token punctuation">,</span><span class="token number">959461173</span><span class="token punctuation">,</span><span class="token number">942748984</span><span class="token punctuation">,</span><span class="token number">825374769</span><span class="token punctuation">,</span><span class="token number">943273008</span><span class="token punctuation">,</span><span class="token number">909129523</span><span class="token punctuation">,</span><span class="token number">942684466</span><span class="token punctuation">,</span><span class="token number">842412854</span><span class="token punctuation">,</span><span class="token number">825504821</span><span class="token punctuation">,</span><span class="token number">808728114</span><span class="token punctuation">,</span><span class="token number">842347826</span><span class="token punctuation">,</span><span class="token number">876163383</span><span class="token punctuation">,</span><span class="token number">808991028</span><span class="token punctuation">,</span><span class="token number">859060281</span><span class="token punctuation">,</span><span class="token number">926496055</span><span class="token punctuation">,</span><span class="token number">858796339</span><span class="token punctuation">,</span><span class="token number">959853875</span><span class="token punctuation">,</span><span class="token number">875901237</span><span class="token punctuation">,</span><span class="token number">959853621</span><span class="token punctuation">,</span><span class="token number">876033078</span><span class="token punctuation">,</span><span class="token number">842281525</span><span class="token punctuation">,</span><span class="token number">925972786</span><span class="token punctuation">,</span><span class="token number">808794161</span><span class="token punctuation">,</span><span class="token number">959657010</span><span class="token punctuation">,</span><span class="token number">825700918</span><span class="token punctuation">,</span><span class="token number">909719609</span><span class="token punctuation">,</span><span class="token number">959788086</span><span class="token punctuation">,</span><span class="token number">959853874</span><span class="token punctuation">,</span><span class="token number">842084408</span><span class="token punctuation">,</span><span class="token number">875575608</span><span class="token punctuation">,</span><span class="token number">909717560</span><span class="token punctuation">,</span><span class="token number">959657527</span><span class="token punctuation">,</span><span class="token number">842348853</span><span class="token punctuation">,</span><span class="token number">959853105</span><span class="token punctuation">,</span><span class="token number">842610743</span><span class="token punctuation">,</span><span class="token number">959460401</span><span class="token punctuation">,</span><span class="token number">892352313</span><span class="token punctuation">,</span><span class="token number">808661553</span><span class="token punctuation">,</span><span class="token number">808990001</span><span class="token punctuation">,</span><span class="token number">925906487</span><span class="token punctuation">,</span><span class="token number">959657784</span><span class="token punctuation">,</span><span class="token number">942879025</span><span class="token punctuation">,</span><span class="token number">875901497</span><span class="token punctuation">,</span><span class="token number">926103350</span><span class="token punctuation">,</span><span class="token number">959657272</span><span class="token punctuation">,</span><span class="token number">875902263</span><span class="token punctuation">,</span><span class="token number">909195568</span><span class="token punctuation">,</span><span class="token number">926101555</span><span class="token punctuation">,</span><span class="token number">909325113</span><span class="token punctuation">,</span><span class="token number">892744498</span><span class="token punctuation">,</span><span class="token number">842610482</span><span class="token punctuation">,</span><span class="token number">892416053</span><span class="token punctuation">,</span><span class="token number">808464949</span><span class="token punctuation">,</span><span class="token number">858796089</span><span class="token punctuation">,</span><span class="token number">808989497</span><span class="token punctuation">,</span><span class="token number">842151736</span><span class="token punctuation">,</span><span class="token number">825832244</span><span class="token punctuation">,</span><span class="token number">875574839</span><span class="token punctuation">,</span><span class="token number">858863155</span><span class="token punctuation">,</span><span class="token number">859256117</span><span class="token punctuation">,</span><span class="token number">875640887</span><span class="token punctuation">,</span><span class="token number">892549173</span><span class="token punctuation">,</span><span class="token number">943272752</span><span class="token punctuation">,</span><span class="token number">876033589</span><span class="token punctuation">,</span><span class="token number">926299954</span><span class="token punctuation">,</span><span class="token number">808990516</span><span class="token punctuation">,</span><span class="token number">842086707</span><span class="token punctuation">,</span><span class="token number">892941366</span><span class="token punctuation">,</span><span class="token number">909455411</span><span class="token punctuation">,</span><span class="token number">892549177</span><span class="token punctuation">,</span><span class="token number">858862391</span><span class="token punctuation">,</span><span class="token number">825504820</span><span class="token punctuation">,</span><span class="token number">876032051</span><span class="token punctuation">,</span><span class="token number">808661305</span><span class="token punctuation">,</span><span class="token number">859123763</span><span class="token punctuation">,</span>   <span class="token number">926102329</span><span class="token punctuation">,</span><span class="token number">842018867</span><span class="token punctuation">]</span>cc<span class="token operator">=</span><span class="token string">""</span>x<span class="token operator">=</span><span class="token number">0</span>arr <span class="token operator">=</span> <span class="token string">"0123456789"</span><span class="token keyword">def</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> cc    <span class="token keyword">global</span> x    <span class="token keyword">if</span> x<span class="token operator">==</span><span class="token number">154</span><span class="token punctuation">:</span><span class="token comment">#最后一位特殊考虑</span>        <span class="token keyword">for</span> q <span class="token keyword">in</span> arr<span class="token punctuation">:</span>            guess <span class="token operator">=</span> q            s <span class="token operator">=</span> <span class="token number">0</span>            <span class="token keyword">for</span> ii <span class="token keyword">in</span> guess<span class="token punctuation">:</span>                s <span class="token operator">=</span> <span class="token punctuation">(</span>s <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>ii<span class="token punctuation">)</span>            <span class="token keyword">if</span> s <span class="token operator">==</span> <span class="token number">57</span><span class="token punctuation">:</span>                cc <span class="token operator">+=</span> guess                <span class="token keyword">return</span>    <span class="token keyword">for</span> q <span class="token keyword">in</span> arr<span class="token punctuation">:</span>        <span class="token keyword">for</span> b <span class="token keyword">in</span> arr<span class="token punctuation">:</span>            <span class="token keyword">for</span> c <span class="token keyword">in</span> arr<span class="token punctuation">:</span>                <span class="token keyword">for</span> d <span class="token keyword">in</span> arr<span class="token punctuation">:</span>                    guess<span class="token operator">=</span>q<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token operator">+</span>d                    s<span class="token operator">=</span><span class="token number">0</span>                    <span class="token keyword">for</span> ii <span class="token keyword">in</span> guess<span class="token punctuation">:</span>                        s<span class="token operator">=</span><span class="token punctuation">(</span>s<span class="token operator">&lt;&lt;</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token builtin">ord</span><span class="token punctuation">(</span>ii<span class="token punctuation">)</span>                    <span class="token keyword">if</span> s<span class="token operator">==</span>a<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">:</span>                        cc<span class="token operator">+=</span>guess                        x<span class="token operator">+=</span><span class="token number">1</span>                        <span class="token keyword">return</span><span class="token keyword">while</span> x<span class="token operator">&lt;</span><span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">:</span>    test<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>cc<span class="token punctuation">)</span><span class="token comment">#10610336534759505889607399322387179316771488492347274741918862678692508953185876570981227584004676580623553664818853686933004290078153620168054665086468417541382824708104480882577200529822968531743002301934310349005341104696887943182074473298650903541494918266823037984054778903666406545980557074219162536057146090758158128189406073809226361445046225524917089434897957301396534515964547462425719205819342172669899546965221084098690893672595962129879041507903210851706793788311452973769358455761907303633956322972510500253009083922781934406731633755418753858930476576720874219359466503538931371444470303193503733920039</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在只剩最后一步解RSA！但是我不会，贴个t0hka1师傅的脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>PublicKey <span class="token keyword">import</span> RSA<span class="token keyword">import</span> ContinuedFractions<span class="token punctuation">,</span> Arithmetic<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> long_to_bytes  <span class="token keyword">def</span> <span class="token function">wiener_hack</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># firstly git clone https://github.com/pablocelayes/rsa-wiener-attack.git !</span>    frac <span class="token operator">=</span> ContinuedFractions<span class="token punctuation">.</span>rational_to_contfrac<span class="token punctuation">(</span>e<span class="token punctuation">,</span> n<span class="token punctuation">)</span>    convergents <span class="token operator">=</span> ContinuedFractions<span class="token punctuation">.</span>convergents_from_contfrac<span class="token punctuation">(</span>frac<span class="token punctuation">)</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> d<span class="token punctuation">)</span> <span class="token keyword">in</span> convergents<span class="token punctuation">:</span>        <span class="token keyword">if</span> k <span class="token operator">!=</span> <span class="token number">0</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>e <span class="token operator">*</span> d <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> k <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            phi <span class="token operator">=</span> <span class="token punctuation">(</span>e <span class="token operator">*</span> d <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">//</span> k            s <span class="token operator">=</span> n <span class="token operator">-</span> phi <span class="token operator">+</span> <span class="token number">1</span>            discr <span class="token operator">=</span> s <span class="token operator">*</span> s <span class="token operator">-</span> <span class="token number">4</span> <span class="token operator">*</span> n            <span class="token keyword">if</span> <span class="token punctuation">(</span>discr <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                t <span class="token operator">=</span> Arithmetic<span class="token punctuation">.</span>is_perfect_square<span class="token punctuation">(</span>discr<span class="token punctuation">)</span>                <span class="token keyword">if</span> t <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>s <span class="token operator">+</span> t<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                    <span class="token keyword">return</span> d    <span class="token keyword">return</span> <span class="token boolean">False</span>  <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    pub_key <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token number">0x649EE967E7916A825CC9FD3320BEABF263BEAC68C080F52824A0F521EDB6B78577EC52BF1C9E78F4BB71192F9A23F1A17AA76E5979E4D953329D3CA65FB4A71DA57412B59DFD6AEDF0191C5555D3E5F582B81B5E6B23163E9889204A81AFFDF119FE25C92F4ED59BD3285BCD7AAE14824240D2E33C5A97848F4EB7AAC203DE6330D2B4D8FF61691544FBECD120F99A157B3D2F58FA51B2887A9D06CA383C44D071314A12B17928B96F03A06E959A5AFEFA0183664F52CD32B9FC72A04B45913FCB2D5D2D3A415A14F611CF1EAC2D6C785142A8E9CC41B67A6CD85001B06EDB8CA767D367E56E0AE651491BF8A8C17A38A1835DB9E4A9292B1D86D5776C98CC25</span><span class="token punctuation">,</span>    <span class="token number">0x647327833ACFEF1F9C83E74E171FC300FA347D4A6769476C33DA82C95120ACB38B62B33D429206FE6E9BB0BB7AB748A1036971BEA36EC47130B749C1C9FF6FE03D0F7D9FC5346EB0E575BDFA6C530AA57CD676894FC080D2DD049AB59625F4B9C78BCFD95CDCD2793E440E26E189D251121CB6EB177FEDB596409034E8B0C5BBD9BD9342235DBB226C9170EFE347FF0FD2CFF9A1F7B647CC83E4D8F005FD7125A89251C768AFE70BDD54B88116814D5030F499BCAC4673CCCC342FB4B6AC58EA5A64546DC25912B6C430529F6A7F449FD96536DE269D1A1B015A4AC6B6E46EE19DCE8143726A6503E290E4BAE6BD78319B5878981F6CFFDB3B818209341FD68B</span><span class="token punctuation">]</span>    <span class="token comment"># 0->n,1->e</span>     n <span class="token operator">=</span> pub_key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    e <span class="token operator">=</span> pub_key<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    c <span class="token operator">=</span> <span class="token number">10610336534759505889607399322387179316771488492347274741918862678692508953185876570981227584004676580623553664818853686933004290078153620168054665086468417541382824708104480882577200529822968531743002301934310349005341104696887943182074473298650903541494918266823037984054778903666406545980557074219162536057146090758158128189406073809226361445046225524917089434897957301396534515964547462425719205819342172669899546965221084098690893672595962129879041507903210851706793788311452973769358455761907303633956322972510500253009083922781934406731633755418753858930476576720874219359466503538931371444470303193503733920039</span>    d <span class="token operator">=</span> wiener_hack<span class="token punctuation">(</span>e<span class="token punctuation">,</span> n<span class="token punctuation">)</span>    m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#  flag&#123;You_Need_Some_Tea&#125;</span>  <span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆向工程核心原理——PE映像切换</title>
      <link href="//post/PE%E6%98%A0%E5%83%8F%E5%88%87%E6%8D%A2.html"/>
      <url>//post/PE%E6%98%A0%E5%83%8F%E5%88%87%E6%8D%A2.html</url>
      
        <content type="html"><![CDATA[<h1 id="PE映像"><a href="#PE映像" class="headerlink" title="PE映像"></a>PE映像</h1><p>PE映像就是PE文件在内存中的映射形态，这在之前PE文件学习中也讲过，32位下OS为进程开辟4GB虚拟空间，低2G为用户空间，高2G是内核空间。</p><p>PE文件映射到内存空间中是一个拉伸的过程</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/image-7.png"></p><h1 id="PE映像切换"><a href="#PE映像切换" class="headerlink" title="PE映像切换"></a>PE映像切换</h1><p>PE映像切换就是先以挂起的方式运行某个进程(A.exe),然后将完全不同的一个PE文件(B.exe)的PE映像映射到A.exe的进程内存空间中，并在A.exe的内存空间中运行。</p><p>此时虽然运行的进程名称是A.exe,但实际映射在内存中的PE映射却是B.exe,所以最终的行为动作与A.exe原来的行为动作完全不同。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/image-8.png"></p><h1 id="示例程序：Fake-exe、Real-exe、DebugMe3-exe"><a href="#示例程序：Fake-exe、Real-exe、DebugMe3-exe" class="headerlink" title="示例程序：Fake.exe、Real.exe、DebugMe3.exe"></a>示例程序：Fake.exe、Real.exe、DebugMe3.exe</h1><h2 id="Fake-exe"><a href="#Fake-exe" class="headerlink" title="Fake.exe"></a>Fake.exe</h2><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_15-30-47.png"></p><h2 id="Real-exe"><a href="#Real-exe" class="headerlink" title="Real.exe"></a>Real.exe</h2><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_15-30-56.png"></p><h2 id="DebugMe3-exe"><a href="#DebugMe3-exe" class="headerlink" title="DebugMe3.exe"></a>DebugMe3.exe</h2><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_15-31-24.png"></p><p>DebugMe3.exe是以fake.exe为外壳，real.exe为内核程序</p><p>要注意在控制台窗口输入运行命令时，命令的第一个参数为充当外壳进程的可执行文件路径，第二个参数为充当内核进程的可执行文件路径</p><h1 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h1><h2 id="Open-输入运行参数"><a href="#Open-输入运行参数" class="headerlink" title="Open-输入运行参数"></a>Open-输入运行参数</h2><p>以参数的方式打开DebugMe3.exe</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_15-52-17.png"></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_15-53-50.png"></p><p>这里就是EP代码</p><h2 id="main-函数分析"><a href="#main-函数分析" class="headerlink" title="main()函数分析"></a>main()函数分析</h2><p>代码流程图</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_16-40-50.png"></p><p>CreateProcess()和ResumeThread()的行为动作明确，所以我们主要分析main调用的三个子函数</p><h3 id="FUNC-1-401150"><a href="#FUNC-1-401150" class="headerlink" title="FUNC_1_401150"></a>FUNC_1_401150</h3><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_16-43-30.png"></p><p>该函数是将real.exe文件读取到内存，将内存地址记为MEM_FILE_REAL_EXE</p><h3 id="CreateProcess-“fake-exe”-CREATE-SUSPENDED"><a href="#CreateProcess-“fake-exe”-CREATE-SUSPENDED" class="headerlink" title="CreateProcess(“fake.exe”,CREATE_SUSPENDED)"></a>CreateProcess(“fake.exe”,CREATE_SUSPENDED)</h3><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_17-08-26.png"></p><p>调用CreateProcess创建fake.exe进程，此时的进程处于挂起状态，同时也是暂停状态，此时可以自由操作其对应的内存。</p><h3 id="FUNC-2-4011D0"><a href="#FUNC-2-4011D0" class="headerlink" title="FUNC_2_4011D0"></a>FUNC_2_4011D0</h3><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_17-21-37.png"></p><p>这个函数里面实现了PE映像切换技术，我们逐步分析</p><h4 id="获取fake-exe进程的实际映射地址"><a href="#获取fake-exe进程的实际映射地址" class="headerlink" title="获取fake.exe进程的实际映射地址"></a>获取fake.exe进程的实际映射地址</h4><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_17-26-48.png"></p><p>这是获取fake.exe的主线程上下文，然后我们可以通过它来获取进程的PEB,由PEB.ImageBase得到进程的实际映射地址</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_17-37-29.png"></p><p>[EBP-2D0]是ConText结构体，[EBP-22C]是ConText偏移A4的成员，也就是Ebx</p><p>因为当前的fake.exe是以挂起模式创建的，处于暂停状态，进程被创建出来时，PE装载器就会把PEB结构体的地址设置给Ebx寄存器，所以当我们获取到Ebx寄存器的值就必须先获取进程主线程的上下文</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_17-43-02.png"></p><p>此时的ECX就是PEB首地址，偏移为8的地方就是ImageBase，所以先执行add ecx+8</p><ul><li>PS：对于Win XP的EXE文件来说，PE文件头中的ImageBase就是进程的实际映射地址</li><li>PS：Win Vista（内核6以后），引入了ASLR技术，ImageBase与实际映射地址不在相同</li></ul><h4 id="获取real-exe文件的ImageBase"><a href="#获取real-exe文件的ImageBase" class="headerlink" title="获取real.exe文件的ImageBase"></a>获取real.exe文件的ImageBase</h4><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_17-47-47.png"></p><p>EDI寄存器的值为MEM_FILE_REAL_EXE地址，该地址是在FUNC1中分配得到的内存起始地址，而real.exe被原封不动的保存在其中。也就是说EDI指向real.exe文件的PE头，所以EDI+3C就是IMAGE_DOS_HEADER结构体中的e_lfanew</p><p>[EDI+EAX]&#x3D;IMAGE_NT_HEADER的起始地址</p><p>[EDI+EAX+34]指向IMAGE_OPTION_HEADER的ImageBase成员</p><p>执行上面指令后，real.exe的ImageBase就被存入了ECX寄存器中</p><h4 id="比较ImageBase-of-fake-exe和ImageBase-of-real-exe"><a href="#比较ImageBase-of-fake-exe和ImageBase-of-real-exe" class="headerlink" title="比较ImageBase of fake.exe和ImageBase of real.exe"></a>比较ImageBase of fake.exe和ImageBase of real.exe</h4><h5 id="两值相同时"><a href="#两值相同时" class="headerlink" title="两值相同时"></a>两值相同时</h5><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_18-12-35.png"></p><p>如果相同就继续往下执行，如果不相同就跳到004012EA</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/image-25.png"></p><p>当fake.exe的PE镜像已经映射到400000地址处，地址400000也是real.exe的PE映像要映射的地方，若强行映射到该地址处，就会发生冲突，必须先卸载(Unmapping)fake.exe的PE映像的映射。由于fake.exe进程处于挂起状态，所以卸载PE映像时进程中也不会发生错误。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_19-43-42.png"></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">NTSYSAPI NTSTATUS ZwUnmapViewOfSection(  [in]           HANDLE ProcessHandle,  [in, optional] PVOID  BaseAddress);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="两值不同时"><a href="#两值不同时" class="headerlink" title="两值不同时"></a>两值不同时</h5><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/image-26.png"></p><p>这时候不一定要卸载fake.exe的PE映像，可以先在fake.exe进程的虚拟内存空间中为real.exe的PE映像分配所需要的空间，然后将real.exe映射进去就行了。接下来还得告诉PE装载器，fake.exe进程的PE映像是400000地址处的real.exe，而不是 1000000地址处的fake.exe,简单修改PEB的ImageBase成员就行了</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_19-54-21.png"></p><p>通过调用WriteProcessMemory()API成功将fake.exe进程的PEB.ImageBase改为real.exe文件的ImageBase值，此时fake.exe进程的PE映就被卸载了。</p><h3 id="FUNC-3-401320"><a href="#FUNC-3-401320" class="headerlink" title="FUNC_3_401320"></a>FUNC_3_401320</h3><p>现在需要把real.exe的文件映射到fake.exe进程中，main函数的4010D1地址调用了FUNC_3_401320，进入FUNC3分析</p><h4 id="为real-exe的PE映像分配内存"><a href="#为real-exe的PE映像分配内存" class="headerlink" title="为real.exe的PE映像分配内存"></a>为real.exe的PE映像分配内存</h4><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_20-03-52.png"></p><p>这个就是为real.exe的PE映像分配内存</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_20-05-21.png"></p><p>第二个参数是想要分配的内存起始地址，其值为real.exe的ImageBase(0x4000000)；函数的第三个参数是要分配内存大小，其值为real.exe的SizeofImage(0xA000)；</p><h4 id="映射PE文件头"><a href="#映射PE文件头" class="headerlink" title="映射PE文件头"></a>映射PE文件头</h4><p>为real.exe的PE映像分配好内存空间后，接下来就是要将real.exe映射到fake.exe进程中。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_20-27-40.png"></p><p>调用WriteProcessMemory()API将real.exePE文件头写入到刚刚分配的内存区域，0x262CF8是由FUNC1函数读入到debug3.exe内存中的</p><p>BytesToWrite参数为real.exe的sizeofHeader(0x4000)</p><h4 id="映射节区"><a href="#映射节区" class="headerlink" title="映射节区"></a>映射节区</h4><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_20-28-42.png"></p><p>启动循环，根据节区的数量反复调用WriteProcessMemory，映射PE节区。该过程需要读取的信息是读取PE文件头的IMAGE_SECTION_HEADER。循环结束后，real.exe文件被完全映射到fake.exe进程的40000地址处，但是此时real.exe代码还无法正常运行，需要修改进程的EP.</p><h4 id="修改EP"><a href="#修改EP" class="headerlink" title="修改EP"></a>修改EP</h4><p>现在fake.exe处于挂起状态，将其恢复运行后，进程的主线程会运行何处的代码呢？这时候我们需要查看主线程CONTEXT结构体中的Eip成员</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_20-34-15.png"></p><p>CONTEXT中有两个成员需要注意，一个就是EAX与EIP，分别位于结构体偏移B0和B8处，EAX&#x3D;0x00401041，这个值很可能位于fake.exe进程中，我们用PE工具查看一下</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_20-36-18.png"></p><p>如图所示，EAX值是fake.exe进程的EP地址，接下来看CONTEXT.EIP，其值为0x77C67098,在调试器中查看一下该地址</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_20-39-34.png"></p><p>可以发现这个地址是ntdll.RtlUserThreadStart()API开始的地址，我们已知EIP寄存器存储的是要执行的指令代码的地址，而EAX存放返回地址，查看CONTEXT的EAX和EIP后，我们可以整理一下上面的代码执行过程：处于挂起状态的fake.exe进程恢复运行，首先会调用ntdll.RtlUserThreadStart()，跳转到EP地址。前面已经将fake.exe的进程PE映像替换为了real.exe的PE映像，所以我们只需要将CONTEXT.EAX修改为real.exe的EP地址(0x401060)</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_20-43-59.png"></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_20-45-52.png"></p><p>0x4014A2-0x4014B3就是将real.exe的EP地址设置到CONTEXT.EAX中</p><h3 id="ResumeThread"><a href="#ResumeThread" class="headerlink" title="ResumeThread()"></a>ResumeThread()</h3><p>最后调用ResumeThread()，恢复运行fake.exe进程。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/2022-04-02_20-47-55.png"></p><p>通过上面的调试练习，我们学会了PE映像切换技术的工作原理。</p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆向工程核心原理——反调试技术</title>
      <link href="//post/%E5%8F%8D%E8%B0%83%E8%AF%95%E6%8A%80%E6%9C%AF.html"/>
      <url>//post/%E5%8F%8D%E8%B0%83%E8%AF%95%E6%8A%80%E6%9C%AF.html</url>
      
        <content type="html"><![CDATA[<h1 id="反调试技术的分类"><a href="#反调试技术的分类" class="headerlink" title="反调试技术的分类"></a>反调试技术的分类</h1><p>反调试技术多种多样，大体上可以分成静态与动态两组反调试。调试运用了静态技术的程序文件时只要在开始破解一次就可以解除全部反调试限制，但运用了动态技术的程序则需要一边调试一边破解。</p><h2 id="静态反调试技术"><a href="#静态反调试技术" class="headerlink" title="静态反调试技术"></a>静态反调试技术</h2><p>主要用来探测调试器，如果探测到，则使程序无法正常运行。所以一般在调试器中打开应用了静态反调试技术的文件时，文件将无法正常运行。</p><h3 id="PEB"><a href="#PEB" class="headerlink" title="PEB"></a>PEB</h3><p>利用PEB结构体信息可以判断当前进程是否处于被调试状态。这些信息值得信赖、使用方便，所以被广泛应用于反调试技术，</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token operator">+</span><span class="token number">0x000</span> InheritedAddressSpace <span class="token operator">:</span> UChar <span class="token operator">+</span><span class="token number">0x001</span> ReadImageFileExecOptions <span class="token operator">:</span> UChar <span class="token operator">+</span><span class="token number">0x002</span> BeingDebugged    <span class="token operator">:</span> UChar <span class="token operator">+</span><span class="token number">0x003</span> SpareBool        <span class="token operator">:</span> UChar <span class="token operator">+</span><span class="token number">0x004</span> Mutant           <span class="token operator">:</span> Ptr32 Void <span class="token operator">+</span><span class="token number">0x008</span> ImageBaseAddress <span class="token operator">:</span> Ptr32 Void <span class="token operator">+</span><span class="token number">0x00c</span> Ldr              <span class="token operator">:</span> Ptr32 _PEB_LDR_DATA <span class="token operator">+</span><span class="token number">0x010</span> ProcessParameters <span class="token operator">:</span> Ptr32 _RTL_USER_PROCESS_PARAMETERS <span class="token operator">+</span><span class="token number">0x014</span> SubSystemData    <span class="token operator">:</span> Ptr32 Void <span class="token operator">+</span><span class="token number">0x018</span> ProcessHeap      <span class="token operator">:</span> Ptr32 Void <span class="token operator">+</span><span class="token number">0x01c</span> FastPebLock      <span class="token operator">:</span> Ptr32 _RTL_CRITICAL_SECTION <span class="token operator">+</span><span class="token number">0x020</span> FastPebLockRoutine <span class="token operator">:</span> Ptr32 Void <span class="token operator">+</span><span class="token number">0x024</span> FastPebUnlockRoutine <span class="token operator">:</span> Ptr32 Void <span class="token operator">+</span><span class="token number">0x028</span> EnvironmentUpdateCount <span class="token operator">:</span> Uint4B <span class="token operator">+</span><span class="token number">0x02c</span> KernelCallbackTable <span class="token operator">:</span> Ptr32 Void <span class="token operator">+</span><span class="token number">0x030</span> SystemReserved   <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> Uint4B <span class="token operator">+</span><span class="token number">0x034</span> AtlThunkSListPtr32 <span class="token operator">:</span> Uint4B <span class="token operator">+</span><span class="token number">0x038</span> FreeList         <span class="token operator">:</span> Ptr32 _PEB_FREE_BLOCK <span class="token operator">+</span><span class="token number">0x03c</span> TlsExpansionCounter <span class="token operator">:</span> Uint4B <span class="token operator">+</span><span class="token number">0x040</span> TlsBitmap        <span class="token operator">:</span> Ptr32 Void <span class="token operator">+</span><span class="token number">0x044</span> TlsBitmapBits    <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> Uint4B <span class="token operator">+</span><span class="token number">0x04c</span> ReadOnlySharedMemoryBase <span class="token operator">:</span> Ptr32 Void <span class="token operator">+</span><span class="token number">0x050</span> ReadOnlySharedMemoryHeap <span class="token operator">:</span> Ptr32 Void <span class="token operator">+</span><span class="token number">0x054</span> ReadOnlyStaticServerData <span class="token operator">:</span> Ptr32 Ptr32 Void <span class="token operator">+</span><span class="token number">0x058</span> AnsiCodePageData <span class="token operator">:</span> Ptr32 Void <span class="token operator">+</span><span class="token number">0x05c</span> OemCodePageData  <span class="token operator">:</span> Ptr32 Void <span class="token operator">+</span><span class="token number">0x060</span> UnicodeCaseTableData <span class="token operator">:</span> Ptr32 Void <span class="token operator">+</span><span class="token number">0x064</span> NumberOfProcessors <span class="token operator">:</span> Uint4B <span class="token operator">+</span><span class="token number">0x068</span> NtGlobalFlag     <span class="token operator">:</span> Uint4B <span class="token operator">+</span><span class="token number">0x070</span> CriticalSectionTimeout <span class="token operator">:</span> _LARGE_INTEGER <span class="token operator">+</span><span class="token number">0x078</span> HeapSegmentReserve <span class="token operator">:</span> Uint4B <span class="token operator">+</span><span class="token number">0x07c</span> HeapSegmentCommit <span class="token operator">:</span> Uint4B <span class="token operator">+</span><span class="token number">0x080</span> HeapDeCommitTotalFreeThreshold <span class="token operator">:</span> Uint4B <span class="token operator">+</span><span class="token number">0x084</span> HeapDeCommitFreeBlockThreshold <span class="token operator">:</span> Uint4B <span class="token operator">+</span><span class="token number">0x088</span> NumberOfHeaps    <span class="token operator">:</span> Uint4B <span class="token operator">+</span><span class="token number">0x08c</span> MaximumNumberOfHeaps <span class="token operator">:</span> Uint4B <span class="token operator">+</span><span class="token number">0x090</span> ProcessHeaps     <span class="token operator">:</span> Ptr32 Ptr32 Void <span class="token operator">+</span><span class="token number">0x094</span> GdiSharedHandleTable <span class="token operator">:</span> Ptr32 Void <span class="token operator">+</span><span class="token number">0x098</span> ProcessStarterHelper <span class="token operator">:</span> Ptr32 Void <span class="token operator">+</span><span class="token number">0x09c</span> GdiDCAttributeList <span class="token operator">:</span> Uint4B <span class="token operator">+</span><span class="token number">0x0a0</span> LoaderLock       <span class="token operator">:</span> Ptr32 Void <span class="token operator">+</span><span class="token number">0x0a4</span> OSMajorVersion   <span class="token operator">:</span> Uint4B <span class="token operator">+</span><span class="token number">0x0a8</span> OSMinorVersion   <span class="token operator">:</span> Uint4B <span class="token operator">+</span><span class="token number">0x0ac</span> OSBuildNumber    <span class="token operator">:</span> Uint2B <span class="token operator">+</span><span class="token number">0x0ae</span> OSCSDVersion     <span class="token operator">:</span> Uint2B <span class="token operator">+</span><span class="token number">0x0b0</span> OSPlatformId     <span class="token operator">:</span> Uint4B <span class="token operator">+</span><span class="token number">0x0b4</span> ImageSubsystem   <span class="token operator">:</span> Uint4B <span class="token operator">+</span><span class="token number">0x0b8</span> ImageSubsystemMajorVersion <span class="token operator">:</span> Uint4B <span class="token operator">+</span><span class="token number">0x0bc</span> ImageSubsystemMinorVersion <span class="token operator">:</span> Uint4B <span class="token operator">+</span><span class="token number">0x0c0</span> ImageProcessAffinityMask <span class="token operator">:</span> Uint4B <span class="token operator">+</span><span class="token number">0x0c4</span> GdiHandleBuffer  <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span> Uint4B <span class="token operator">+</span><span class="token number">0x14c</span> PostProcessInitRoutine <span class="token operator">:</span> Ptr32     <span class="token keyword">void</span>  <span class="token operator">+</span><span class="token number">0x150</span> TlsExpansionBitmap <span class="token operator">:</span> Ptr32 Void <span class="token operator">+</span><span class="token number">0x154</span> TlsExpansionBitmapBits <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span> Uint4B <span class="token operator">+</span><span class="token number">0x1d4</span> SessionId        <span class="token operator">:</span> Uint4B <span class="token operator">+</span><span class="token number">0x1d8</span> AppCompatFlags   <span class="token operator">:</span> _ULARGE_INTEGER <span class="token operator">+</span><span class="token number">0x1e0</span> AppCompatFlagsUser <span class="token operator">:</span> _ULARGE_INTEGER <span class="token operator">+</span><span class="token number">0x1e8</span> pShimData        <span class="token operator">:</span> Ptr32 Void <span class="token operator">+</span><span class="token number">0x1ec</span> AppCompatInfo    <span class="token operator">:</span> Ptr32 Void <span class="token operator">+</span><span class="token number">0x1f0</span> CSDVersion       <span class="token operator">:</span> _UNICODE_STRING <span class="token operator">+</span><span class="token number">0x1f8</span> ActivationContextData <span class="token operator">:</span> Ptr32 Void <span class="token operator">+</span><span class="token number">0x1fc</span> ProcessAssemblyStorageMap <span class="token operator">:</span> Ptr32 Void <span class="token operator">+</span><span class="token number">0x200</span> SystemDefaultActivationContextData <span class="token operator">:</span> Ptr32 Void <span class="token operator">+</span><span class="token number">0x204</span> SystemAssemblyStorageMap <span class="token operator">:</span> Ptr32 Void <span class="token operator">+</span><span class="token number">0x208</span> MinimumStackCommit <span class="token operator">:</span> Uint4B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个是Windows XP SP3中的PEB结构体成员，与反调试技术密切相关的成员有以下几个:</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token operator">+</span><span class="token number">0x002</span>  BeingDebugged    <span class="token operator">:</span> UChar<span class="token operator">+</span><span class="token number">0x00c</span>  Ldr              <span class="token operator">:</span> Ptr32 _PEB_LDR_DATA<span class="token operator">+</span><span class="token number">0x018</span>ProcessHeap      <span class="token operator">:</span> Ptr32 Void<span class="token operator">+</span><span class="token number">0x068</span> NtGlobalFlag     <span class="token operator">:</span> Uint4B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>BeingDebugged成员是一个标志，用来表示进程是否处于被调试状态。</p><p>Ldr、ProcessHeap、NtGlobalFlag成员与被调试进程的堆内存特性相关。接下来分别讲解以上4个PEB成员</p><h4 id="BeingDebugged-0x2"><a href="#BeingDebugged-0x2" class="headerlink" title="BeingDebugged(+0x2)"></a>BeingDebugged(+0x2)</h4><p>当进程处于调试状态时，PEB.BeingDebugged成员(+0x2)的值会被设置为1，进程在非调试状态下运行时，其值被设置为0</p><h5 id="IsDebuggerPresent"><a href="#IsDebuggerPresent" class="headerlink" title="IsDebuggerPresent()"></a>IsDebuggerPresent()</h5><p>IsDebuggerPresent()API获取PEB.BeingDebugged的值来判断进程是否处于被调试状态。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220321163655.png"></p><p>IsDebuggerPresentd的代码非常简单，先找到PEB结构，然后访问PEB.BeingDebugged成员(+0x2)。</p><h5 id="破解之法"><a href="#破解之法" class="headerlink" title="破解之法"></a>破解之法</h5><p>在调试的时候，借助OD调试器的编辑功能，将PEB.BeingDebugged的值修改成0即可</p><h4 id="Ldr-0xC"><a href="#Ldr-0xC" class="headerlink" title="Ldr(+0xC)"></a>Ldr(+0xC)</h4><p>在调试进程中，其堆内存中就会出现一些特殊标识，表示它正处于被调试状态，其中最醒目的就是，未使用的堆内存区域全部填充着0xEEFEEEFE,这证明正在调试进程。利用这一特征可以判断进程是否处于调试状态。</p><p>PEB.Ldr成员是一个指向_PEB_LDR_DATA结构体的指针，而 _PEB_LDR_DATA结构体刚好是在堆内存区域中创建的，所以扫描该区域就可以轻松查找到是否存在0xEEFEEEFE区域，如果存在就是调试，不存在就不在调试状态。</p><h5 id="破解之法-1"><a href="#破解之法-1" class="headerlink" title="破解之法"></a>破解之法</h5><p>只要将填充0xEEFEEEFE值的区域全部覆盖成NULL就行了</p><h5 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h5><p>这个方法仅适用于WindowsXP系统，而在Windows Vista以后的系统中就无法使用了。另外，利用附加功能将运行中的进程附加到调试器上，堆内存不会出现上述情况。</p><h4 id="ProcessHeap-0x18"><a href="#ProcessHeap-0x18" class="headerlink" title="ProcessHeap(+0x18)"></a>ProcessHeap(+0x18)</h4><p>在PEB的偏移0x18是指向HEAP结构体的指针</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token operator">+</span><span class="token number">0x000</span> Entry <span class="token operator">+</span><span class="token number">0x008</span> Signature<span class="token operator">+</span><span class="token number">0x00c</span> Flags<span class="token operator">+</span><span class="token number">0x010</span> ForceFlags<span class="token operator">+</span><span class="token number">0x014</span> VirtualMemoryThreshold<span class="token operator">+</span><span class="token number">0x018</span> SegmentReserve<span class="token operator">+</span><span class="token number">0x01c</span> SegmentCommit<span class="token operator">+</span><span class="token number">0x020</span> DeCommitFreeBlockThreshold<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这是HEAP结构体的部分成员，进程处于被调试状态时，Flags与ForceFlags会被设置为特定值</p><p>PEB.ProcessHeap()可以从PEB结构体中直接获取HEAP结构体(偏移0x18)，也可以通过GetProcessHeap()API获取。</p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220325170054.png" style="zoom:200%;" /><p>进程HEAP结构体的地址为PEB.ProcessHeap&#x3D;190000</p><h5 id="Flags-0xC-Force-Flags-0x10"><a href="#Flags-0xC-Force-Flags-0x10" class="headerlink" title="Flags(+0xC)&amp;Force Flags(+0x10)"></a>Flags(+0xC)&amp;Force Flags(+0x10)</h5><p>进程正常运行时，Flags为0x2，而ForceFlags值为0x0，但是进程处于被调试状态时，这些值就会发生改变</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220325171341.png"></p><p>所以，比较这些值就可以判断进程是否处于被调试状态</p><h5 id="破解之法-2"><a href="#破解之法-2" class="headerlink" title="破解之法"></a>破解之法</h5><p>只要将Flags的值重新设置为0x2，ForceFlags的值重新设置成0x0就行了。</p><h5 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h5><p>这个方法只能在Windows XP系统下有效，Windows7系统会保留Flags和ForceFlags属性。此外，如果运行中的进程附加到调试器中，也不会出现上述特征。</p><h4 id="NtGlobalFlag-0x68"><a href="#NtGlobalFlag-0x68" class="headerlink" title="NtGlobalFlag(+0x68)"></a>NtGlobalFlag(+0x68)</h4><p>调试进程时，PEB.NtGlobalFlag成员(+0x68)的值会被设置成0x70，所以，检测该成员的值就可以判断进程是否处于被调试状态</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220325173410.png"></p><p>NtGlobalFlag的0x70是下列Flags值进行bit OR(位或)运算的结果</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token function">FLG_HEAP_ENABLE_TAIL_CHECK</span> <span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">)</span><span class="token function">FLG_HEAP_ENABLE_FREE_CHECK</span> <span class="token punctuation">(</span><span class="token number">0x20</span><span class="token punctuation">)</span><span class="token function">FLG_HEAP_VALIDATE_PARAMETERS</span><span class="token punctuation">(</span><span class="token number">0x40</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h5 id="破解之法-3"><a href="#破解之法-3" class="headerlink" title="破解之法"></a>破解之法</h5><p>将PEB.NtGlobalFlag值改为0即可</p><h3 id="NtQueryInformationProcess"><a href="#NtQueryInformationProcess" class="headerlink" title="NtQueryInformationProcess()"></a>NtQueryInformationProcess()</h3><p>利用这个API可以探测调试器，获取各种与进程调试相关的信息。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">__kernel_entry NTSTATUS <span class="token function">NtQueryInformationProcess</span><span class="token punctuation">(</span>  <span class="token punctuation">[</span>in<span class="token punctuation">]</span>            HANDLE           ProcessHandle<span class="token punctuation">,</span>  <span class="token punctuation">[</span>in<span class="token punctuation">]</span>            PROCESSINFOCLASS ProcessInformationClass<span class="token punctuation">,</span>  <span class="token punctuation">[</span>out<span class="token punctuation">]</span>           PVOID            ProcessInformation<span class="token punctuation">,</span>  <span class="token punctuation">[</span>in<span class="token punctuation">]</span>            ULONG            ProcessInformationLength<span class="token punctuation">,</span>  <span class="token punctuation">[</span>out<span class="token punctuation">,</span> optional<span class="token punctuation">]</span> PULONG           ReturnLength<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们给NtQueryInformationProcess的第二个二参数ProcessInformationClass ProcessInformationClass指定特定值并调用该函数，相关的信息就会被设置到第三个参数ProcessInformation中</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">ProcessBasicInformation             <span class="token operator">=</span> <span class="token number">0x00</span><span class="token punctuation">,</span>   ProcessQuotaLimits              <span class="token operator">=</span> <span class="token number">0x01</span><span class="token punctuation">,</span>   ProcessIoCounters               <span class="token operator">=</span> <span class="token number">0x02</span><span class="token punctuation">,</span>   ProcessVmCounters               <span class="token operator">=</span> <span class="token number">0x03</span><span class="token punctuation">,</span>   ProcessTimes                <span class="token operator">=</span> <span class="token number">0x04</span><span class="token punctuation">,</span>   ProcessBasePriority             <span class="token operator">=</span> <span class="token number">0x05</span><span class="token punctuation">,</span>   ProcessRaisePriority            <span class="token operator">=</span> <span class="token number">0x06</span><span class="token punctuation">,</span>   ProcessDebugPort                <span class="token operator">=</span> <span class="token number">0x07</span><span class="token punctuation">,</span>   ProcessExceptionPort            <span class="token operator">=</span> <span class="token number">0x08</span><span class="token punctuation">,</span>   ProcessAccessToken              <span class="token operator">=</span> <span class="token number">0x09</span><span class="token punctuation">,</span>   ProcessLdtInformation               <span class="token operator">=</span> <span class="token number">0x0A</span><span class="token punctuation">,</span>   ProcessLdtSize                  <span class="token operator">=</span> <span class="token number">0x0B</span><span class="token punctuation">,</span>   ProcessDefaultHardErrorMode         <span class="token operator">=</span> <span class="token number">0x0C</span><span class="token punctuation">,</span>   ProcessIoPortHandlers               <span class="token operator">=</span> <span class="token number">0x0D</span><span class="token punctuation">,</span>   ProcessPooledUsageAndLimits         <span class="token operator">=</span> <span class="token number">0x0E</span><span class="token punctuation">,</span>   ProcessWorkingSetWatch              <span class="token operator">=</span> <span class="token number">0x0F</span><span class="token punctuation">,</span>   ProcessUserModeIOPL             <span class="token operator">=</span> <span class="token number">0x10</span><span class="token punctuation">,</span>   ProcessEnableAlignmentFaultFixup        <span class="token operator">=</span> <span class="token number">0x11</span><span class="token punctuation">,</span>   ProcessPriorityClass            <span class="token operator">=</span> <span class="token number">0x12</span><span class="token punctuation">,</span>   ProcessWx86Information              <span class="token operator">=</span> <span class="token number">0x13</span><span class="token punctuation">,</span>   ProcessHandleCount              <span class="token operator">=</span> <span class="token number">0x14</span><span class="token punctuation">,</span>   ProcessAffinityMask             <span class="token operator">=</span> <span class="token number">0x15</span><span class="token punctuation">,</span>   ProcessPriorityBoost            <span class="token operator">=</span> <span class="token number">0x16</span><span class="token punctuation">,</span>   ProcessDeviceMap                <span class="token operator">=</span> <span class="token number">0x17</span><span class="token punctuation">,</span>   ProcessSessionInformation           <span class="token operator">=</span> <span class="token number">0x18</span><span class="token punctuation">,</span>   ProcessForegroundInformation        <span class="token operator">=</span> <span class="token number">0x19</span><span class="token punctuation">,</span>   ProcessWow64Information             <span class="token operator">=</span> <span class="token number">0x1A</span><span class="token punctuation">,</span>   ProcessImageFileName            <span class="token operator">=</span> <span class="token number">0x1B</span><span class="token punctuation">,</span>   ProcessLUIDDeviceMapsEnabled        <span class="token operator">=</span> <span class="token number">0x1C</span><span class="token punctuation">,</span>   ProcessBreakOnTermination           <span class="token operator">=</span> <span class="token number">0x1D</span><span class="token punctuation">,</span>   ProcessDebugObjectHandle            <span class="token operator">=</span> <span class="token number">0x1E</span><span class="token punctuation">,</span>   ProcessDebugFlags               <span class="token operator">=</span> <span class="token number">0x1F</span><span class="token punctuation">,</span>   ProcessHandleTracing            <span class="token operator">=</span> <span class="token number">0x20</span><span class="token punctuation">,</span>   ProcessIoPriority               <span class="token operator">=</span> <span class="token number">0x21</span><span class="token punctuation">,</span>   ProcessExecuteFlags             <span class="token operator">=</span> <span class="token number">0x22</span><span class="token punctuation">,</span>   ProcessResourceManagement           <span class="token operator">=</span> <span class="token number">0x23</span><span class="token punctuation">,</span>   ProcessCookie                   <span class="token operator">=</span> <span class="token number">0x24</span><span class="token punctuation">,</span>   ProcessImageInformation             <span class="token operator">=</span> <span class="token number">0x25</span><span class="token punctuation">,</span>   ProcessCycleTime                <span class="token operator">=</span> <span class="token number">0x26</span><span class="token punctuation">,</span>   ProcessPagePriority             <span class="token operator">=</span> <span class="token number">0x27</span><span class="token punctuation">,</span>   ProcessInstrumentationCallback          <span class="token operator">=</span> <span class="token number">0x28</span><span class="token punctuation">,</span>   ProcessThreadStackAllocation        <span class="token operator">=</span> <span class="token number">0x29</span><span class="token punctuation">,</span>   ProcessWorkingSetWatchEx            <span class="token operator">=</span> <span class="token number">0x2A</span><span class="token punctuation">,</span>   ProcessImageFileNameWin32           <span class="token operator">=</span> <span class="token number">0x2B</span><span class="token punctuation">,</span>   ProcessImageFileMapping             <span class="token operator">=</span> <span class="token number">0x2C</span><span class="token punctuation">,</span>   ProcessAffinityUpdateMode           <span class="token operator">=</span> <span class="token number">0x2D</span><span class="token punctuation">,</span>   ProcessMemoryAllocationMode         <span class="token operator">=</span> <span class="token number">0x2E</span><span class="token punctuation">,</span>   ProcessGroupInformation             <span class="token operator">=</span> <span class="token number">0x2F</span><span class="token punctuation">,</span>   ProcessTokenVirtualizationEnabled       <span class="token operator">=</span> <span class="token number">0x30</span><span class="token punctuation">,</span>   ProcessConsoleHostProcess           <span class="token operator">=</span> <span class="token number">0x31</span><span class="token punctuation">,</span>   ProcessWindowInformation            <span class="token operator">=</span> <span class="token number">0x32</span><span class="token punctuation">,</span>   ProcessHandleInformation            <span class="token operator">=</span> <span class="token number">0x33</span><span class="token punctuation">,</span>   ProcessMitigationPolicy             <span class="token operator">=</span> <span class="token number">0x34</span><span class="token punctuation">,</span>   ProcessDynamicFunctionTableInformation      <span class="token operator">=</span> <span class="token number">0x35</span><span class="token punctuation">,</span>   ProcessHandleCheckingMode           <span class="token operator">=</span> <span class="token number">0x36</span><span class="token punctuation">,</span>   ProcessKeepAliveCount               <span class="token operator">=</span> <span class="token number">0x37</span><span class="token punctuation">,</span>   ProcessRevokeFileHandles            <span class="token operator">=</span> <span class="token number">0x38</span><span class="token punctuation">,</span>   ProcessWorkingSetControl            <span class="token operator">=</span> <span class="token number">0x39</span><span class="token punctuation">,</span>   ProcessHandleTable              <span class="token operator">=</span> <span class="token number">0x3A</span><span class="token punctuation">,</span>   ProcessCheckStackExtentsMode        <span class="token operator">=</span> <span class="token number">0x3B</span><span class="token punctuation">,</span>   ProcessCommandLineInformation           <span class="token operator">=</span> <span class="token number">0x3C</span><span class="token punctuation">,</span>   ProcessProtectionInformation        <span class="token operator">=</span> <span class="token number">0x3D</span><span class="token punctuation">,</span>   ProcessMemoryExhaustion             <span class="token operator">=</span> <span class="token number">0x3E</span><span class="token punctuation">,</span>   ProcessFaultInformation             <span class="token operator">=</span> <span class="token number">0x3F</span><span class="token punctuation">,</span>   ProcessTelemetryIdInformation           <span class="token operator">=</span> <span class="token number">0x40</span><span class="token punctuation">,</span>   ProcessCommitReleaseInformation         <span class="token operator">=</span> <span class="token number">0x41</span><span class="token punctuation">,</span>   ProcessDefaultCpuSetsInformation        <span class="token operator">=</span> <span class="token number">0x42</span><span class="token punctuation">,</span>   ProcessAllowedCpuSetsInformation        <span class="token operator">=</span> <span class="token number">0x43</span><span class="token punctuation">,</span>   ProcessSubsystemProcess             <span class="token operator">=</span> <span class="token number">0x44</span><span class="token punctuation">,</span>   ProcessJobMemoryInformation         <span class="token operator">=</span> <span class="token number">0x45</span><span class="token punctuation">,</span>   ProcessInPrivate                <span class="token operator">=</span> <span class="token number">0x46</span><span class="token punctuation">,</span>   ProcessRaiseUMExceptionOnInvalidHandleClose <span class="token operator">=</span> <span class="token number">0x47</span><span class="token punctuation">,</span>   ProcessIumChallengeResponse         <span class="token operator">=</span> <span class="token number">0x48</span><span class="token punctuation">,</span>   ProcessChildProcessInformation          <span class="token operator">=</span> <span class="token number">0x49</span><span class="token punctuation">,</span>   ProcessHighGraphicsPriorityInformation      <span class="token operator">=</span> <span class="token number">0x4A</span><span class="token punctuation">,</span>   ProcessSubsystemInformation         <span class="token operator">=</span> <span class="token number">0x4B</span><span class="token punctuation">,</span>   ProcessEnergyValues             <span class="token operator">=</span> <span class="token number">0x4C</span><span class="token punctuation">,</span>   ProcessActivityThrottleState        <span class="token operator">=</span> <span class="token number">0x4D</span><span class="token punctuation">,</span>   ProcessActivityThrottlePolicy           <span class="token operator">=</span> <span class="token number">0x4E</span><span class="token punctuation">,</span>   ProcessWin32kSyscallFilterInformation       <span class="token operator">=</span> <span class="token number">0x4F</span><span class="token punctuation">,</span>   ProcessDisableSystemAllowedCpuSets      <span class="token operator">=</span> <span class="token number">0x50</span><span class="token punctuation">,</span>   ProcessWakeInformation              <span class="token operator">=</span> <span class="token number">0x51</span><span class="token punctuation">,</span>   ProcessEnergyTrackingState          <span class="token operator">=</span> <span class="token number">0x52</span><span class="token punctuation">,</span>   ProcessManageWritesToExecutableMemory       <span class="token operator">=</span> <span class="token number">0x53</span><span class="token punctuation">,</span>   ProcessCaptureTrustletLiveDump          <span class="token operator">=</span> <span class="token number">0x54</span><span class="token punctuation">,</span>   ProcessTelemetryCoverage            <span class="token operator">=</span> <span class="token number">0x55</span><span class="token punctuation">,</span>   ProcessEnclaveInformation           <span class="token operator">=</span> <span class="token number">0x56</span><span class="token punctuation">,</span>   ProcessEnableReadWriteVmLogging         <span class="token operator">=</span> <span class="token number">0x57</span><span class="token punctuation">,</span>   ProcessUptimeInformation            <span class="token operator">=</span> <span class="token number">0x58</span><span class="token punctuation">,</span>   ProcessImageSection             <span class="token operator">=</span> <span class="token number">0x59</span><span class="token punctuation">,</span>   ProcessDebugAuthInformation         <span class="token operator">=</span> <span class="token number">0x5A</span><span class="token punctuation">,</span>   ProcessSystemResourceManagement         <span class="token operator">=</span> <span class="token number">0x5B</span><span class="token punctuation">,</span>   ProcessSequenceNumber               <span class="token operator">=</span> <span class="token number">0x5C</span><span class="token punctuation">,</span>   ProcessLoaderDetour             <span class="token operator">=</span> <span class="token number">0x5D</span><span class="token punctuation">,</span>   ProcessSecurityDomainInformation        <span class="token operator">=</span> <span class="token number">0x5E</span><span class="token punctuation">,</span>   ProcessCombineSecurityDomainsInformation    <span class="token operator">=</span> <span class="token number">0x5F</span><span class="token punctuation">,</span>   ProcessEnableLogging            <span class="token operator">=</span> <span class="token number">0x60</span><span class="token punctuation">,</span>   ProcessLeapSecondInformation        <span class="token operator">=</span> <span class="token number">0x61</span><span class="token punctuation">,</span>   ProcessFiberShadowStackAllocation       <span class="token operator">=</span> <span class="token number">0x62</span><span class="token punctuation">,</span>   ProcessFreeFiberShadowStackAllocation       <span class="token operator">=</span> <span class="token number">0x63</span><span class="token punctuation">,</span>   MaxProcessInfoClass             <span class="token operator">=</span> <span class="token number">0x64</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上与调试器探测有关的成员是ProcessDebugPort(0x7),ProcessDebugObjectHandle(0x1E),ProcessDebugFlags(0x1F)。</p><h4 id="ProcessDebugPort（0x7）"><a href="#ProcessDebugPort（0x7）" class="headerlink" title="ProcessDebugPort（0x7）"></a>ProcessDebugPort（0x7）</h4><p>进程处于调试状态时，系统会为它分配一个调试端口。ProcessInformation的参数值设置为ProcessDebugPort，调用NtQueryInformationProcess函数就能获取调试端口。如果进程处于非调试状态，则变量dwDebugPort的值设置成0，如果进程处于调试状态，则变量dwDebugPort的值设置成0xFFFFFFFF</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">DWORD dwDebugPort<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token function">pNtQueryInformationProcess</span><span class="token punctuation">(</span><span class="token function">GetCurrentProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ProcessDebugPort<span class="token punctuation">,</span><span class="token operator">&amp;</span>dwDebugPort<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>dwDebugPort<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"NtQueryInformationProcess(ProcessDebugPort)=0x%X\n"</span><span class="token punctuation">,</span>dwDebugPort<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>dwDebugPort<span class="token operator">!=</span><span class="token number">0x0</span><span class="token punctuation">)</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"==>Debugging!!\n\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"==>Not Debugging\n\n"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="ProcessDebugObjectHandle-0x1E"><a href="#ProcessDebugObjectHandle-0x1E" class="headerlink" title="ProcessDebugObjectHandle(0x1E)"></a>ProcessDebugObjectHandle(0x1E)</h4><p>调试进程时会生成调试对象(Debug Object)。函数的第二个参数值为ProcessDebugObjectHandle时，调用函数后通过第三个参数就能获取调试对象句柄。进程处于调试状态时，调试对象句柄的值就存在；若进程处于非调试状态，则调试对象句柄值为NULL。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">HANDLE hDebugObject<span class="token operator">=</span><span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token function">pNtQueryInformationProcess</span><span class="token punctuation">(</span><span class="token function">GetCurrentProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ProcessDebugObjectHandle<span class="token punctuation">,</span><span class="token operator">&amp;</span>hDebugObject<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>hDebugObject<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"NtQueryInformationProcess(ProcessDebugObjectHandle)=0x%X\n"</span><span class="token punctuation">,</span>hDebugObject<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>hDebugObject<span class="token operator">!=</span><span class="token number">0x0</span><span class="token punctuation">)</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"==>Debugging!!\n\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"==>Not Debugging\n\n"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="ProcessDebugFlags-0x1F"><a href="#ProcessDebugFlags-0x1F" class="headerlink" title="ProcessDebugFlags(0x1F)"></a>ProcessDebugFlags(0x1F)</h4><p>检测DebugFlags的值也可以判断进程是否处于被调试状态。函数的第二个参数设置为ProcessDebugFlags，调用函数后通过第三个参数即可获取调试标志的值，如果为0，则进程处于被调试状态；若为1，则进程处于非调试状态。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">BOOL bDebugFlags<span class="token operator">=</span>TRUE<span class="token punctuation">;</span><span class="token function">pNtQueryInformationProcess</span><span class="token punctuation">(</span><span class="token function">GetCurrentProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ProcessDebugFlags<span class="token punctuation">,</span><span class="token operator">&amp;</span>bDebugFlags<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>bDebugFlags<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"NtQueryInformationProcess(ProcessDebugFlags)=0x%X\n"</span><span class="token punctuation">,</span>bDebugFlags<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>bDebugFlags<span class="token operator">==</span><span class="token number">0x0</span><span class="token punctuation">)</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"==>Debugging!!\n\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"==>Not Debugging\n\n"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="NtQuerySystemInformation"><a href="#NtQuerySystemInformation" class="headerlink" title="NtQuerySystemInformation()"></a>NtQuerySystemInformation()</h3><p>介绍一种基于调试环境检测的反调试技术，运用这种反调试技术可以检测当前OS是否在调试模式下运行。</p><p>NtQuerySystemInformation是一个系统函数，可以用来获取当前运行的多种OS信息。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">__kernel_entry NTSTATUS <span class="token function">NtQuerySystemInformation</span><span class="token punctuation">(</span>  <span class="token punctuation">[</span>in<span class="token punctuation">]</span>            SYSTEM_INFORMATION_CLASS SystemInformationClass<span class="token punctuation">,</span>  <span class="token punctuation">[</span>in<span class="token punctuation">,</span> out<span class="token punctuation">]</span>       PVOID                    SystemInformation<span class="token punctuation">,</span>  <span class="token punctuation">[</span>in<span class="token punctuation">]</span>            ULONG                    SystemInformationLength<span class="token punctuation">,</span>  <span class="token punctuation">[</span>out<span class="token punctuation">,</span> optional<span class="token punctuation">]</span> PULONG                   ReturnLength<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>SYSTEM_INFORMATION_CLASS SystemInformationClass是一个枚举类型，传入需要的系统信息类型，将某结构体的地址传给SystemInformation，API被调用后，该结构体中就会填充相关的信息</p><p>SYSTEM_INFORMATION_CLASS的枚举类型</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token keyword">enum</span> <span class="token class-name">_SYSTEM_INFORMATION_CALSS</span><span class="token punctuation">&#123;</span>SystemBasicInformation<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>SystemPerformanceInformation<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>SystemProcessInformation<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>SystemProcessorPerformanceInformation<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span>SystemInterruptInformation<span class="token operator">=</span><span class="token number">23</span><span class="token punctuation">,</span>SystemExceptionInformation<span class="token operator">=</span><span class="token number">33</span><span class="token punctuation">,</span>SystemKernelDebuggerInformation<span class="token operator">=</span><span class="token number">35</span><span class="token punctuation">,</span>SystemRegistryQuotaInformation<span class="token operator">=</span><span class="token number">37</span><span class="token punctuation">,</span>SystemLookasideInformation<span class="token operator">=</span><span class="token number">45</span><span class="token punctuation">&#125;</span>SYSTEM_INFORMATION_CALSS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="SystemKernelDebuggerInformation-0x23"><a href="#SystemKernelDebuggerInformation-0x23" class="headerlink" title="SystemKernelDebuggerInformation(0x23)"></a><strong>SystemKernelDebuggerInformation</strong>(0x23)</h4><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">MyNtQuerySystemInformation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">typedef</span> <span class="token function">NTSTATUS</span> <span class="token punctuation">(</span>WINAPI <span class="token operator">*</span>NTQUERYSYSTEMINFORMATION<span class="token punctuation">)</span><span class="token punctuation">(</span>        ULONG SystemInformationClass<span class="token punctuation">,</span>        PVOID SystemInformation<span class="token punctuation">,</span>        ULONG SystemInformationLength<span class="token punctuation">,</span>        PULONG ReturnLength    <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//函数没有导出，需要我们自己导出</span>    <span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_SYSTEM_KERNEL_DEBUGGER_INFORMATION</span>     <span class="token punctuation">&#123;</span>        BOOLEAN DebuggerEnabled<span class="token punctuation">;</span>        BOOLEAN DebuggerNotPresent<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> SYSTEM_KERNEL_DEBUGGER_INFORMATION<span class="token punctuation">,</span> <span class="token operator">*</span>PSYSTEM_KERNEL_DEBUGGER_INFORMATION<span class="token punctuation">;</span><span class="token comment">//第二个参数结构体</span>    NTQUERYSYSTEMINFORMATION NtQuerySystemInformation<span class="token punctuation">;</span><span class="token comment">//函数指针</span>      NtQuerySystemInformation <span class="token operator">=</span> <span class="token punctuation">(</span>NTQUERYSYSTEMINFORMATION<span class="token punctuation">)</span>                                  <span class="token function">GetProcAddress</span><span class="token punctuation">(</span><span class="token function">GetModuleHandle</span><span class="token punctuation">(</span>L<span class="token string">"ntdll"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                                <span class="token string">"NtQuerySystemInformation"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取NtQuerySystemInformation的地址</span>    ULONG SystemKernelDebuggerInformation <span class="token operator">=</span> <span class="token number">0x23</span><span class="token punctuation">;</span>    ULONG ulReturnedLength <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    SYSTEM_KERNEL_DEBUGGER_INFORMATION DebuggerInfo <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">NtQuerySystemInformation</span><span class="token punctuation">(</span>SystemKernelDebuggerInformation<span class="token punctuation">,</span> <span class="token comment">//调用NtQuerySystemInformation，参数是SystemKernelDebuggerInformation</span>                             <span class="token punctuation">(</span>PVOID<span class="token punctuation">)</span> <span class="token operator">&amp;</span>DebuggerInfo<span class="token punctuation">,</span>   <span class="token comment">//和DebuggerInfo</span>                             <span class="token keyword">sizeof</span><span class="token punctuation">(</span>DebuggerInfo<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment">// 2 bytes</span>                             <span class="token operator">&amp;</span>ulReturnedLength<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"NtQuerySystemInformation(SystemKernelDebuggerInformation) = 0x%X 0x%X\n"</span><span class="token punctuation">,</span>            DebuggerInfo<span class="token punctuation">.</span>DebuggerEnabled<span class="token punctuation">,</span> DebuggerInfo<span class="token punctuation">.</span>DebuggerNotPresent<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span> DebuggerInfo<span class="token punctuation">.</span>DebuggerEnabled <span class="token punctuation">)</span>  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"  => Debugging!!!\n\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//根据DebuggerEnabled判断是否存在调试</span>    <span class="token keyword">else</span>                                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"  => Not debugging...\n\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在调用NtQuerySystemInformation时，第一个参数是SystemKernelDebuggerInformation，第二个参数是和DebuggerInfo，当函数调用结束后，如果系统处于调试模式下，则DebuggerInfo中的成员DebuggerEnabled将会被设置成为1(DebuggerNotPresent恒为1)。</p><h3 id="NtQueryObject"><a href="#NtQueryObject" class="headerlink" title="NtQueryObject()"></a>NtQueryObject()</h3><p>系统中的某个调试器调试进程时，会创建一个调试对象类型的内核对象，检测该对象是否存在就可以判断是否有进程正在被调试。</p><p>NtQueryObject是用来获取系统各种内核对象的信息</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">__kernel_entry NTSYSCALLAPI NTSTATUS <span class="token function">NtQueryObject</span><span class="token punctuation">(</span>  <span class="token punctuation">[</span>in<span class="token punctuation">,</span> optional<span class="token punctuation">]</span>  HANDLE                   Handle<span class="token punctuation">,</span>  <span class="token punctuation">[</span>in<span class="token punctuation">]</span>            OBJECT_INFORMATION_CLASS ObjectInformationClass<span class="token punctuation">,</span>  <span class="token punctuation">[</span>out<span class="token punctuation">,</span> optional<span class="token punctuation">]</span> PVOID                    ObjectInformation<span class="token punctuation">,</span>  <span class="token punctuation">[</span>in<span class="token punctuation">]</span>            ULONG                    ObjectInformationLength<span class="token punctuation">,</span>  <span class="token punctuation">[</span>out<span class="token punctuation">,</span> optional<span class="token punctuation">]</span> PULONG                   ReturnLength<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>调用NtQueryObject先向OBJECT_INFORMATION_CLASS ObjectInformationClass赋值，然后调用后查询到的内核对象信息就会保存在ObjectInformation中</p><p>OBJECT_INFORMATION_CLASS 和之前一样是一个枚举类型</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token keyword">enum</span> <span class="token class-name">_OBJECT_INFORMATION_CLASS</span><span class="token punctuation">&#123;</span>ObjectBasicInformation<span class="token punctuation">,</span>ObjectNameInformation<span class="token punctuation">,</span>ObjectTypeInformation<span class="token punctuation">,</span>ObjectAllTypesInformation<span class="token punctuation">,</span>ObjectHandleInformation<span class="token punctuation">&#125;</span>OBJECT_INFORMATION_CLASS<span class="token punctuation">,</span><span class="token operator">*</span>POBJECT_INFORMATION_CLASS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>首先使用ObjectAllTypesInformation值获取系统所有对象信息，然后从中检测是否存在调试对象。</p><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><h5 id="1、获取内核对象信息链表大小"><a href="#1、获取内核对象信息链表大小" class="headerlink" title="1、获取内核对象信息链表大小"></a>1、获取内核对象信息链表大小</h5><pre class="line-numbers language-c" data-language="c"><code class="language-c">ULONG lsize<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token function">pNtQueryObject</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span>ObjectAllTypesInformation<span class="token punctuation">,</span><span class="token operator">&amp;</span>lsize<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>ObjectAllTypesInformation<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>lsize<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="2、分配内存"><a href="#2、分配内存" class="headerlink" title="2、分配内存"></a>2、分配内存</h5><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">void</span> <span class="token operator">*</span>pBufpBuf<span class="token operator">=</span><span class="token function">VirtualAlloc</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span>lsize<span class="token punctuation">,</span>MEM_RESERVE<span class="token operator">|</span>MEM_COMMIT<span class="token punctuation">,</span>PAGE_READWRITE<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="获取内核对象信息链表"><a href="#获取内核对象信息链表" class="headerlink" title="获取内核对象信息链表"></a>获取内核对象信息链表</h5><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_OBJECT_TYPE_INFORMATION</span> <span class="token punctuation">&#123;</span>     UNICODE_STRING TypeName<span class="token punctuation">;</span>  <span class="token comment">//内核对象类型的名称，比如互斥体，事件等等                     </span>    ULONG TotalNumberOfObjects<span class="token punctuation">;</span><span class="token comment">//对象的数量</span>    ULONG TotalNumberOfHandles<span class="token punctuation">;</span>    ULONG TotalPagedPoolUsage<span class="token punctuation">;</span>    ULONG TotalNonPagedPoolUsage<span class="token punctuation">;</span>    ULONG TotalNamePoolUsage<span class="token punctuation">;</span>    ULONG TotalHandleTableUsage<span class="token punctuation">;</span>    ULONG HighWaterNumberOfObjects<span class="token punctuation">;</span>    ULONG HighWaterNumberOfHandles<span class="token punctuation">;</span>    ULONG HighWaterPagedPoolUsage<span class="token punctuation">;</span>    ULONG HighWaterNonPagedPoolUsage<span class="token punctuation">;</span>    ULONG HighWaterNamePoolUsage<span class="token punctuation">;</span>    ULONG HighWaterHandleTableUsage<span class="token punctuation">;</span>    ULONG InvalidAttributes<span class="token punctuation">;</span>    GENERIC_MAPPING GenericMapping<span class="token punctuation">;</span>    ULONG ValidAccessMask<span class="token punctuation">;</span>    BOOLEAN SecurityRequired<span class="token punctuation">;</span>    BOOLEAN MaintainHandleCount<span class="token punctuation">;</span>    ULONG PoolType<span class="token punctuation">;</span>    ULONG DefaultPagedPoolCharge<span class="token punctuation">;</span>    ULONG DefaultNonPagedPoolCharge<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>OBJECT_TYPE_INFORMATION<span class="token punctuation">,</span> <span class="token operator">*</span>POBJECT_TYPE_INFORMATION<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_OBJECT_ALL_INFORMATION</span> <span class="token punctuation">&#123;</span>ULONG                   NumberOfObjectsTypes<span class="token punctuation">;</span>OBJECT_TYPE_INFORMATION ObjectTypeInformation<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> OBJECT_ALL_INFORMATION<span class="token punctuation">,</span> <span class="token operator">*</span>POBJECT_ALL_INFORMATION<span class="token punctuation">;</span><span class="token function">pNtQueryObject</span><span class="token punctuation">(</span><span class="token punctuation">(</span>HANDLE<span class="token punctuation">)</span><span class="token number">0xFFFFFFFF</span><span class="token punctuation">,</span>ObjectAllTypesInformation，pBuf<span class="token punctuation">,</span>lsize<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>POBJECT_ALL_INFORMATION pObjectAllInfo<span class="token operator">=</span><span class="token punctuation">(</span>POBJECT_ALL_INFORMATION<span class="token punctuation">)</span>pBuf<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>调用NtQueryObject后，系统中所有的对象的信息代码以OBJECT_ALL_INFORMATION结构的形式存入了pBuf中，然后将pBuf强转成POBJECT_ALL_INFORMATION，OBJECT_ALL_INFORMATION是由OBJECT_TYPE_INFORMATION结构体数组构成，实际的内核对象类型信息就被存入了OBJECT_TYPE_INFORMATION结构体数组中，通过循环遍历就可以查找是否存在调试对象。</p><h4 id="破解之法-4"><a href="#破解之法-4" class="headerlink" title="破解之法"></a>破解之法</h4><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220325214132.png"></p><p>我们在调用call esi也就是call ZwQueryObject之前观察堆栈，发现第二个参数是ObjectAllTypesInformation(3)，我们将这个值修改成0在执行，这样子就无法读取内核对象了，当然我们也可以直接钩取ZwQueryObject()API。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220325214358.png"></p><h3 id="ZwSetInformationThread"><a href="#ZwSetInformationThread" class="headerlink" title="ZwSetInformationThread()"></a>ZwSetInformationThread()</h3><p>利用ZwSetInformationThread()API，被调试者可以将自身从调试器中分离出来。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">NTSYSAPI NTSTATUS <span class="token function">ZwSetInformationThread</span><span class="token punctuation">(</span>  <span class="token punctuation">[</span>in<span class="token punctuation">]</span> HANDLE          ThreadHandle<span class="token punctuation">,</span>  <span class="token punctuation">[</span>in<span class="token punctuation">]</span> THREADINFOCLASS ThreadInformationClass<span class="token punctuation">,</span>  <span class="token punctuation">[</span>in<span class="token punctuation">]</span> PVOID           ThreadInformation<span class="token punctuation">,</span>  <span class="token punctuation">[</span>in<span class="token punctuation">]</span> ULONG           ThreadInformationLength<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ZwSetInformationThread是来为线程设置信息的。该函数拥有两个参数，第一个ThreadHandle用来接收当前线程的句柄，第二个参数ThreadInformationClass表示线程信息类型，若其值设置为ThreadHideFromDebugger(0x11)，则调用该函数后，调试进程就会被分离出来。ZwSetInformationThread不会对正常运行的程序产生任何影响，但是运行的是调试器程序，调用该API就会使调试器终止运行，同时终止自身进程。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220327174901.png"></p><p>当我们继续执行并调用ZwSetInformationThread时候，就会分离出被调试进程并终止运行</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220327175342.png"></p><h4 id="破解之法-5"><a href="#破解之法-5" class="headerlink" title="破解之法"></a>破解之法</h4><p>简单的破解思路就是在调用4001027地址的ZwSetInformationThread前，查找存储在栈中的第二个参数，如果它的值为ThreadHideFromDebugger(0x11)，就修改成0继续运行。</p><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>ZwSetInformationThread是将线程隐藏起来，调试器就接受不到信息，从而无法调试。另外，Windows XP以后新增了DebugActiveProcessStop()API也可以用来分离调试器与被调试进程，从而停止调试。</p><h3 id="TLS回调函数"><a href="#TLS回调函数" class="headerlink" title="TLS回调函数"></a>TLS回调函数</h3><p>TLS回调函数是反调试技术中最常用的函数，但我们并不能将TLS回调本身看作一种反调试技术，其回调函数的执行会先于EP代码，所以我们可以在回调函数中加一些骚操作。TLS在前面已经讲过了，这里就不再多描述。</p><h3 id="ETC"><a href="#ETC" class="headerlink" title="ETC"></a>ETC</h3><p>首先，我们必须明白应用反调试技术的目的在于防止程序遭受逆向分析。不必非得为此费力判断自身进程是否处于调试状态。还有一种比较简单的方法就是判断当前的系统是否为逆向分析专用系统，如果是则停止程序。这样又出现了各种各样的反调试技术，这些技术都能从系统中轻松获取各种信息(进程、文件、窗口、注册表、主机名、计算机名、用户名、环境变量等)</p><h4 id="常用的几种反调试技术"><a href="#常用的几种反调试技术" class="headerlink" title="常用的几种反调试技术"></a>常用的几种反调试技术</h4><p>这些技术都是借助Win32API获取系统信息来具体实现</p><p>1、检测OllyDbg窗口(FindWindow)</p><p>2、检测OllyDbg进程(CreateToolhelp32Snapshot)</p><p>3、检测计算机名称是否为“TEST”、”ANALYSIS”等(GetComputerName)</p><p>4、检测程序运行路径中是否存在“TEST”、”SAMPLE”等(GetCommandLine)</p><p>5、检测虚拟机是否处于运行状态</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220327181044.png"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>除了这些静态反调试方法，还有很多方法，而且调试过程中还会遇到更多，这是积累经验、不断进步的必经之路。</p><h2 id="动态反调试技术"><a href="#动态反调试技术" class="headerlink" title="动态反调试技术"></a>动态反调试技术</h2><p>如果在程序文件中应用了动态反调试技术，则很难再使用调试器中的跟踪技术，动态反调试技术会扰乱调试器的跟踪功能。</p><h3 id="动态反调试技术的目的"><a href="#动态反调试技术的目的" class="headerlink" title="动态反调试技术的目的"></a>动态反调试技术的目的</h3><p>隐藏和保护程序代码与数据，使之无法进行逆向分析。PE保护器中一般会使用大量的动态反调试技术，以保护源程序的核心算法。在调试这些程序时，动态反调试技术就会干扰调试器，使之无法正常跟踪查找源程序的核心代码(OEP)。</p><h3 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h3><p>异常常用于反调试技术中，正常运行的程序发生异常时，在SEH机制的作用下,OS就会接收异常，然后调用进程中注册的SEH处理，但是，如果被调试的进程在调试状态下发生异常，调试器就会接收处理。利用这个特征就可以判断进程是正常运行还是调试运行。</p><h4 id="SEH"><a href="#SEH" class="headerlink" title="SEH"></a>SEH</h4><pre class="line-numbers language-none"><code class="language-none">EXCEPTION_ACCESS_VIOLATION        0xC0000005     程序企图读写一个不可访问的地址时引发的异常。例如企图读取0地址处的内存。EXCEPTION_ARRAY_BOUNDS_EXCEEDED     0xC000008C     数组访问越界时引发的异常。EXCEPTION_BREAKPOINT                0x80000003     触发断点时引发的异常。EXCEPTION_DATATYPE_MISALIGNMENT     0x80000002     程序读取一个未经对齐的数据时引发的异常。EXCEPTION_FLT_DENORMAL_OPERAND      0xC000008D     如果浮点数的操作数是非正常的，则引发该异常。所谓非正常即它的值太小以至于不能用标准格式表示出来。EXCEPTION_FLT_DIVIDE_BY_ZERO        0xC000008E     浮点数除法的除数是0时引发该异常。EXCEPTION_FLT_INEXACT_RESULT        0xC000008F     浮点数操作的结果不能精确表示成小数时引发该异常。EXCEPTION_FLT_INVALID_OPERATION     0xC0000090     该异常表示不包括在这个表内的其它浮点数异常。EXCEPTION_FLT_OVERFLOW              0xC0000091     浮点数的指数超过所能表示的最大值时引发该异常。EXCEPTION_FLT_STACK_CHECK           0xC0000092     进行浮点数运算时栈发生溢出或下溢时引发该异常。EXCEPTION_FLT_UNDERFLOW             0xC0000093     浮点数的指数小于所能表示的最小值时引发该异常。EXCEPTION_ILLEGAL_INSTRUCTION       0xC000001D     程序企图执行一个无效的指令时引发该异常。EXCEPTION_IN_PAGE_ERROR             0xC0000006     程序要访问的内存页不在物理内存中时引发的异常。EXCEPTION_INT_DIVIDE_BY_ZERO        0xC0000094     整数除法的除数是0时引发该异常。EXCEPTION_INT_OVERFLOW              0xC0000095     整数操作的结果溢出时引发该异常。EXCEPTION_INVALID_DISPOSITION       0xC0000026     异常处理器返回一个无效的处理的时引发该异常。EXCEPTION_NONCONTINUABLE_EXCEPTION  0xC0000025     发生一个不可继续执行的异常时，如果程序继续执行，则会引发该异常。EXCEPTION_PRIV_INSTRUCTION          0xC0000096     程序企图执行一条当前CPU模式不允许的指令时引发该异常。EXCEPTION_SINGLE_STEP               0x80000004     标志寄存器的TF位为1时，每执行一条指令就会引发该异常。主要用于单步调试。EXCEPTION_STACK_OVERFLOW            0xC00000FD     栈溢出时引发该异常<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> Windows操作系统中最具代表性的异常时断点异常。BreakPoint指令触发异常时，若程序处于正常运行状态，则自动调用已经注册过的SEH；如果程序处于调试运行状态，则系统会立刻停止运行程序，将控制权转给调试器。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220327184136.png"></p><p>这是基于int 3 异常的反调试代码</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220327184611.png"></p><p>程序的执行流程</p><h5 id="1、安装SEH"><a href="#1、安装SEH" class="headerlink" title="1、安装SEH"></a>1、安装SEH</h5><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token number">00401011</span> PUSH <span class="token number">40102</span>C<span class="token number">00401016</span> PUSH DWORD PTR FS<span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token number">0040101</span>D MOV DWORD PTR FS<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ESP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220327184931.png"></p><h5 id="2、触发INT-3-异常"><a href="#2、触发INT-3-异常" class="headerlink" title="2、触发INT 3 异常"></a>2、触发INT 3 异常</h5><pre class="line-numbers language-c" data-language="c"><code class="language-c">INT <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="3-1、调试运行—终止进程"><a href="#3-1、调试运行—终止进程" class="headerlink" title="3-1、调试运行—终止进程"></a>3-1、调试运行—终止进程</h5><p>如果进程处于调试运行状态，则由调试器处理异常。INT3指令是CPU中断指令，在用户模式的调试器中什么也不做，继续往下执行</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token number">00401025</span> MOV EAX<span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token number">0040102</span>A JMP EAX<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>跳转到FFFFFFFF，是一个非法地址，无法继续调试</p><h5 id="3-2、正常运行—运行SEH"><a href="#3-2、正常运行—运行SEH" class="headerlink" title="3-2、正常运行—运行SEH"></a>3-2、正常运行—运行SEH</h5><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">0040102C MOV EAX,DWORD PTR SS:[ESP+C]00401031 MOV EBX,40104000401036 MOV DWORD PTR DS:[EAX+B8],EBX0040103D XOR EAX,EAX0040103F RETN<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>SS:[ESP+C]是SEH的第三个参数，是CONTEXT *pContext结构体指针，它是一个发生异常的线程CONTEXT结构体。DS:[EAX+B8]就是pContext-&gt;EIP，所以401036地址的MOV DWORD PTR DS:[EAX+B8],EBX是将该结构体的EIP修改为401040，然后异常处理器返回0。接下来发生异常的线程再次从修改后的EIP开始运行</p><h5 id="删除SEH"><a href="#删除SEH" class="headerlink" title="删除SEH"></a>删除SEH</h5><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">00401040 POP DWORD PTR FS:[0]00401047 ADD ESP,4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="破解之法-6"><a href="#破解之法-6" class="headerlink" title="破解之法"></a>破解之法</h5><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220327190854.png"></p><p>此时调试器就会忽略被调试进程中发生的INT3异常，而由自身的SEH处理</p><h4 id="SetUnhandledExceptionFilter"><a href="#SetUnhandledExceptionFilter" class="headerlink" title="SetUnhandledExceptionFilter()"></a>SetUnhandledExceptionFilter()</h4><p>进程发异常时，如果SEH未处理或者注册的SEH根本不存在，会发生什么呢？这个时候就会调用执行系统的</p><p>kernel32!SetUnhandledExceptionFilter()API,这个函数内部会运行系统的最后一个异常处理器，最后的异常处理器通常会弹出错误消息框，然后终止程序运行。</p><p>kernel32!SetUnhandledExceptionFilter()内部调用了ntdll!NtQueryInformationProcess()API,以判断是否正在调试进程，如果进程正常执行，则运行系统最后的异常处理器；如果进程处于调试中，则将异常派送给调试器。我们可以通过kernel32!SetUnhandledExceptionFilter()修改系统最后的异常处理器</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">LPTOP_LEVEL_EXCEPTION_FILTER <span class="token function">SetUnhandledExceptionFilter</span><span class="token punctuation">(</span>  <span class="token punctuation">[</span>in<span class="token punctuation">]</span> LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>调用该函数修改系统的最后异常处理器时，只要将新的Top Level Exception Filter函数地址传递给函数的lpTopLevelExceptionFilter参数就行了。</p><h5 id="破解之法-7"><a href="#破解之法-7" class="headerlink" title="破解之法"></a>破解之法</h5><p>利用SetUnhandledExceptionFilter()API反调试的技术综合运用了静态和动态技术。。因此，破解时要先使SetUnhandledExceptionFilter()内部调用的ntdll!NtQueryInformationProcess()API失效，然后调用SetUnhandledExceptionFilter跟踪注册的Exception Filter，在正常运行时确定要跳到哪个位置即可</p><h3 id="Timing-Check"><a href="#Timing-Check" class="headerlink" title="Timing Check"></a>Timing Check</h3><p>在调试器中逐行跟踪程序代码比程序正常运行耗费的时间多得多，Timing Check技术通过计算运行时间的差异来判断进程是否处于被调试状态。</p><p>直接对时间信息进行操作或者对比较时间的语句进行修改就行了，但是在实际操作中，该反调试技术通常与其他反调试技术并用，导致破解过程变得非常困难。</p><p>有时候Timing Check也会用在反模拟技术上，程序在模拟器中运行的速度要比正常运行慢很多。</p><h4 id="时间间隔测量法"><a href="#时间间隔测量法" class="headerlink" title="时间间隔测量法"></a>时间间隔测量法</h4><pre class="line-numbers language-none"><code class="language-none">1.Counter based methodRDTSC(Read Time Stamp Counter 读取时间戳计数器)kernel32！QueryPerformanceCounter()&#x2F;NtQueryPermanceCounter()kernel32!GetTickCount()2.Time based methodtimeGetTime()_ftime()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测量时间间隔的方法大致分为两类，一类是利用CPU的计数器，另一类是利用系统的实际时间(TIME).</p><p>提示：</p><p>计数器的准确程度由高到低排列如下：</p><pre class="line-numbers language-none"><code class="language-none">RDSTC&gt;NtQueryPerformanceCounter()&gt;GetTickCount()<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>NtQueryPerformanceCounter和GetTickCount虽然使用相同硬件，但是二者的准确程度不同，而RDTSC是CPU内部计数器，其准确程度最高</p><h4 id="RDTSC"><a href="#RDTSC" class="headerlink" title="RDTSC"></a>RDTSC</h4><p>x86CPU中存在一个名为TSC（Time Stamp Counter，时间戳计数器）的64位寄存器。CPU对每个Clock Cycle（时钟周期）计数，然后保存到TSC。</p><p>RDTSC是一条汇编指令，用来将TSC值读入到EDX:EAX寄存器（TSC大小为64位，其高32位保存到EDX寄存器，低32位保存至EAX寄存器）</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220328161342.png"></p><p>两次RDTSC指令存在一定的时间间隔，通过计算时间差(Delta)来判断进程是否处于调试状态。Delta不是固定值，一般在0xFFF-0XFFFFFFFF之间取</p><p>在0x0040101C-0x0040102A之间的代码区域，只要执行一次F7或者F8，Count的值就会大于0xFFFFFFFF</p><h5 id="破解之法-8"><a href="#破解之法-8" class="headerlink" title="破解之法"></a>破解之法</h5><p>1、不适用跟踪命令，直接在0x0040102C下断点，然后F9运行，虽然速度略慢于正常运行速度，但是比代码跟踪要快很多。</p><p>2、操作第二个RDTSC，使之与第一个结果相同，这样就能顺利通过CMP语句</p><p>3、操纵条件分支语句(CMP,JCC)</p><p>在调试器中强制修改Flags的值，阻止执行跳转至0x40103E地址处。大部分的Jcc指令会受CF或ZF的影响，只要修改这些标志即可控制Jcc指令。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220328162610.png"></p><p>4、利用内核模式驱动程序使RDTSC指令失效</p><p>利用内核模式驱动程序可以从根本使基于RDTSC的动态反调试技术失效（其实，<code>Olly Advanced PlugIn</code>就采用了该方法）</p><h3 id="陷阱标志"><a href="#陷阱标志" class="headerlink" title="陷阱标志"></a>陷阱标志</h3><h5 id="单步执行"><a href="#单步执行" class="headerlink" title="单步执行"></a>单步执行</h5><p>陷阱标志指<code>EFLAGS</code>寄存器的第九个（index 8）比特位<img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220328163355.png"></p><p>TF设置成1时，CPU进入单步执行模式。单步执行模式中，CPU执行1条指令后就会触发1个EXCEPTION_SINGLE_STEP异常，然后陷阱标志位就会清零，这个异常可以与SEH相结合，在反调试技术中用于探测调试器。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220328164229.png"></p><p>如果程序正常运行，则运行注册的SEH，如果时调试运行，就继续执行下面的NOP MOV EAX,-1 JMP EAX</p><p>JMP EAX&#x3D;JMP 0xFFFFFFFF肯定会报错，导致程序崩溃</p><p>由于EFLAGS不能直接修改，所以我们通过PUSHFD&#x2F;POPFD与OR运输修改TF位的值</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220328164759.png"></p><p>此时EFLAGS也被恢复成202了</p><h6 id="破解之法-9"><a href="#破解之法-9" class="headerlink" title="破解之法"></a>破解之法</h6><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220328164951.png"></p><p>让被调试者直接处理EXCEPTION_SINGLE_STEP异常</p><h5 id="INT-2D"><a href="#INT-2D" class="headerlink" title="INT 2D"></a>INT 2D</h5><p>INT 2D 原为内核模式中用来触发断点异常的指令，也可以在用户模式下触发异常。但程序调试运行时不会触发异常，只是忽略。</p><p>1、忽略下条指令的第一个字节</p><p>在调试模式中执行完 INT 2D指令后，下条指令的第一个字节将被忽略，后一个字节会被识别为新的指令继续执行</p><p>2、一直运行到断点处</p><p>INT 2D 指令的另一特征，使用StepInto（F7）或StepOver（F8）命令跟踪INT 2D指令时，程序不会停在其下条指令的地方，而是一直运行，直到遇到断点，就像使用RUN(F9)命令运行程序一样。</p><h6 id="破解之法-10"><a href="#破解之法-10" class="headerlink" title="破解之法"></a>破解之法</h6><p>有时候我们会跟踪SEH逐行调试代码，这时候我们需要一种方法可以使程序执行到SEH</p><p>首先。使OD中忽视EXCEPTION_SINGLE_STEP异常，然后运行40101E地址处，并且在SEH处下一个断点，否则这里面直接秒执行完</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220328171724.png"></p><p>现在我们修改TF位或者修改EFLAGS(+0x100)</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220328171820.png"></p><p>此时按照之前的实验，我们只要执行一步，就会触发异常，进入SEH，但是我们F8之后并没有进行跳转,TF也没有清零</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220328171933.png"></p><p>这是因为INT 2D是内核指令，在用户模式调试器中不会被识别为正常指令。因此我们再执行一次NOP，跳转到SEH</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220328172110.png"></p><p>可能有人会好奇为什么INT 2D后面的第一个字节NOP没有被忽略，这是因为被忽略的情况只发生在TF为0的情况下，当TF为1时，其后面的第一个字节不会被忽略。</p><h3 id="0xCC-探测"><a href="#0xCC-探测" class="headerlink" title="0xCC 探测"></a>0xCC 探测</h3><p>程序调试过程中，我们一般 会设置许多软件断点，断点对应的x86指令为0xCC，如果能检测到该指令，即可以判断程序是否处于调试状态。但是0xCC可以用作操作码、移位码、立即数、数据、地址等，所以仅仅扫描内存中的代码区域并不可靠。</p><h4 id="API断点"><a href="#API断点" class="headerlink" title="API断点"></a>API断点</h4><p>若只调试程序中的某个局部功能，一个比较快的方法是先在程序要调试的API处设置断点，再运行程序。运行暂停在相应断点后，再查看存储在栈中的返回地址。</p><p>“跟踪返回地址调试相应部分”的方式能够大幅缩小代码调试范围。反调试技术中，探测这些位置在API上的断点就能准确判断当前进程是否处于调试状态。一般而言，断点都是设置在API代码的开始部分，所以，只需要检测API代码的第一个字节是否是0xCC即可判断出当前进程是否处于调试之中</p><h5 id="代码逆向人员常用API列表："><a href="#代码逆向人员常用API列表：" class="headerlink" title="代码逆向人员常用API列表："></a>代码逆向人员常用API列表：</h5><pre class="line-numbers language-none"><code class="language-none">进程CreatProcessCreateProcessAsUser     CreateRemoteThreadCreatThreadGetThreadContextSetThreadContextEnumProcessesEnumProcessModulesOpenProcessCreateToolhelp32SnapshotProcess32FirstProcess32NextShellExecuteAWinExecTerminateProcess<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">内存ReadProcessMemoryWriteProcessMemoryVirtualAllocVirtualAllocExVirtualProtectVirtualProtectExVirtualQueryVirtualQueryEx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">文件CreateFileReadFileWriteFileCopyFileCreateDirectoryDeleteFileMoveFileMoveFileExFindFirstFileFindNextFileGetFileSizeGetWindowsDirectoryGetSystemDirectoryGetFileAttributesSetFileAttributesSetFilePointerCreateFileMappingMapViewOfFileMapViewOfFileExUnmapViewOfFile_open_write_read_lseek_tell<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">寄存器RegCreateKeyExRegDeleteKeyRegDeleteValueRegEnumKeyExRegQueryValueExRegSetValueRegSetValueEx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">网络WSAStartupsocketinet_addrclosesocketgetservbynamegethostbybnamehtonsconnectinet_htoarecvsendHttpOpenRequestHttpSendRequestHttpQueryInfoInternetCloseHandleInternetConnectInternetGetConnectedStateInternetOpenInternetOpenUrlInternetReadFileURLDownloadToFile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">其他OpenProcessTokenLookupPrivilegeVauleAdjustTokenPrivilegesOpenSCManagerCreateServiceOpenServiceControlServiceDeleteServiceRegisterServiceCtrlHandlerSetServiceStatusQueryServiceStatusExCreateMutexOpenMutexFindWindowLoadLibraryGetProAddressGetModuleFileNameAGetCommandLineOutputDebugString………………………………………………<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="破解之法-11"><a href="#破解之法-11" class="headerlink" title="破解之法"></a>破解之法</h5><p>向系统API设置断点时尽量避开第一个字节，将之设置在代码的中间部分。此外，设置硬件断点也能避开上述所说的反调试技术。</p><h4 id="比较校验和"><a href="#比较校验和" class="headerlink" title="比较校验和"></a>比较校验和</h4><p>检测代码中设置的软件断点的另一个方法是，比较特定代码区域的校验和值。比如，假定程序中0x401000~0x401070地址区域的校验和值为0x12345678，在代码调试时，必然会设置一些断点（0xCC），这样一来，新的校验和值就与原值不一样了。像这样的话，比较校验和即可判断是否处于调试状态</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220328174850.png"></p><p>未设置任何断点时，计算出来的校验值保存在内存单元0x40BDC0中，在程序运行利用循环重新计算一遍校验值，然后再和原来对比。这里计算完后，直接修改je跳转即可跳转</p><h5 id="破解之法-12"><a href="#破解之法-12" class="headerlink" title="破解之法"></a>破解之法</h5><p>从理论上讲，只要不在计算CRC的代码区域中设置断点或修改其中代码，基于校验和的反调试技术就会失效。但是最好的破解办法是直接修改CRC比较语句</p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022DASCTF X SU Re WriteUp</title>
      <link href="//post/2022-3-26-2022DASCTF-X-SU-Re-WriteUp.html"/>
      <url>//post/2022-3-26-2022DASCTF-X-SU-Re-WriteUp.html</url>
      
        <content type="html"><![CDATA[<h1 id="easyre"><a href="#easyre" class="headerlink" title="easyre"></a>easyre</h1><p>一道签到题,老样子先查壳</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/WX20220331-225037@2x.png"></p><p>asp壳比较容易脱，可以百度了解一下，我直接通过ESP定律脱的,然后把内存dump下来用IDA分析</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/WX20220331-230011@2x.png"></p><p>通过字符串定位来到加密函数，下面的v2数组是密文，str数组是我们输入的flag，分析了一下sub_401500、sub_40152B、sub_401593，是一个变种的RC4.</p><p>如果是正常RC4，我们可以用脚本或者网站解，变种虽然也可以硬逆，但是比较麻烦。我这里是直接动调出密钥流，RC4虽然内部有改变，但是每次XOR的密钥流是一样的.</p><p>我们用OD进行动态调试，记住要先脱壳。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/WX20220331-230839@2x.png"></p><p>这一块就是对应我们IDA分析的代码区域，上面的循环是xor，下面是密文</p><p>在加密的地方下个断点，然后开始调试，前提得先知道flag的格式</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/WX20220331-231229@2x.png"></p><p>格式为:DASCTF{1111111122222222333333334444444455}</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/WX20220331-231753@2x.png"></p><p>找到密钥流，现在拿密文XOR密钥流就是flag，贴一下脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">xor<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x38</span><span class="token punctuation">,</span><span class="token number">0x78</span><span class="token punctuation">,</span><span class="token number">0xDD</span><span class="token punctuation">,</span><span class="token number">0xE8</span><span class="token punctuation">,</span><span class="token number">0X00</span><span class="token punctuation">,</span><span class="token number">0XAF</span><span class="token punctuation">,</span><span class="token number">0XBF</span><span class="token punctuation">,</span><span class="token number">0X3A</span><span class="token punctuation">,</span><span class="token number">0X6B</span><span class="token punctuation">,</span><span class="token number">0XFB</span><span class="token punctuation">,</span><span class="token number">0XB8</span><span class="token punctuation">,</span><span class="token number">0XC</span><span class="token punctuation">,</span><span class="token number">0X85</span><span class="token punctuation">,</span><span class="token number">0X35</span><span class="token punctuation">,</span><span class="token number">0X15C</span><span class="token punctuation">,</span><span class="token number">0XAD</span><span class="token punctuation">,</span><span class="token number">0XE6</span><span class="token punctuation">,</span><span class="token number">0X00</span><span class="token punctuation">,</span><span class="token number">0XE0</span><span class="token punctuation">,</span><span class="token number">0X8A</span><span class="token punctuation">,</span><span class="token number">0X1D</span><span class="token punctuation">,</span><span class="token number">0XBD</span><span class="token punctuation">,</span><span class="token number">0X146</span><span class="token punctuation">,</span><span class="token number">0XFFFFFFD2</span><span class="token punctuation">,</span><span class="token number">0X2B</span><span class="token punctuation">,</span><span class="token number">0X00</span><span class="token punctuation">,</span><span class="token number">0X15</span><span class="token punctuation">,</span><span class="token number">0X24</span><span class="token punctuation">,</span><span class="token number">0XC6</span><span class="token punctuation">,</span><span class="token number">0XAD</span><span class="token punctuation">,</span><span class="token number">0XA1</span><span class="token punctuation">,</span><span class="token number">0XC9</span><span class="token punctuation">,</span><span class="token number">0X7B</span><span class="token punctuation">,</span><span class="token number">0X12</span><span class="token punctuation">,</span><span class="token number">0X28</span><span class="token punctuation">,</span><span class="token number">0X00</span><span class="token punctuation">,</span><span class="token number">0X05</span><span class="token punctuation">,</span><span class="token number">0X00</span><span class="token punctuation">,</span><span class="token number">0X72</span><span class="token punctuation">,</span><span class="token number">0X3E</span><span class="token punctuation">,</span><span class="token number">0X10</span><span class="token punctuation">,</span><span class="token number">0XA1</span><span class="token punctuation">]</span>decode<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0xFFFFFFC3</span><span class="token punctuation">,</span><span class="token number">0xFFFFFF80</span><span class="token punctuation">,</span><span class="token number">0xFFFFFFD5</span><span class="token punctuation">,</span><span class="token number">0xFFFFFFF2</span><span class="token punctuation">,</span><span class="token number">0xFFFFFF9B</span><span class="token punctuation">,</span><span class="token number">0x30</span><span class="token punctuation">,</span><span class="token number">0x0b</span><span class="token punctuation">,</span><span class="token number">0xFFFFFFB4</span><span class="token punctuation">,</span><span class="token number">0x55</span><span class="token punctuation">,</span><span class="token number">0xFFFFFFDE</span><span class="token punctuation">,</span><span class="token number">0x22</span><span class="token punctuation">,</span><span class="token number">0xFFFFFF83</span><span class="token punctuation">,</span><span class="token number">0x2f</span><span class="token punctuation">,</span><span class="token number">0xFFFFFF97</span><span class="token punctuation">,</span><span class="token number">0xFFFFFFB8</span><span class="token punctuation">,</span><span class="token number">0x20</span><span class="token punctuation">,</span><span class="token number">0x1d</span><span class="token punctuation">,</span><span class="token number">0x74</span><span class="token punctuation">,</span><span class="token number">0xFFFFFFD1</span><span class="token punctuation">,</span><span class="token number">0x1</span><span class="token punctuation">,</span><span class="token number">0x73</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">0xFFFFFFB2</span><span class="token punctuation">,</span><span class="token number">0xFFFFFFC8</span><span class="token punctuation">,</span><span class="token number">0xFFFFFFC5</span><span class="token punctuation">,</span><span class="token number">0x74</span><span class="token punctuation">,</span><span class="token number">0xFFFFFFC0</span><span class="token punctuation">,</span><span class="token number">0x5B</span><span class="token punctuation">,</span><span class="token number">0xFFFFFFF7</span><span class="token punctuation">,</span><span class="token number">0xF</span><span class="token punctuation">,</span><span class="token number">0xFFFFFFD3</span><span class="token punctuation">,</span><span class="token number">0x1</span><span class="token punctuation">,</span><span class="token number">0x55</span><span class="token punctuation">,</span><span class="token number">0xFFFFFFB2</span><span class="token punctuation">,</span><span class="token number">0xFFFFFFA4</span><span class="token punctuation">,</span><span class="token number">0xFFFFFFAE</span><span class="token punctuation">,</span><span class="token number">0x7B</span><span class="token punctuation">,</span><span class="token number">0xFFFFFFAC</span><span class="token punctuation">,</span><span class="token number">0x5C</span><span class="token punctuation">,</span><span class="token number">0x56</span><span class="token punctuation">,</span><span class="token number">0xFFFFFFBC</span><span class="token punctuation">,</span><span class="token number">0x23</span><span class="token punctuation">]</span>flag<span class="token operator">=</span><span class="token string">""</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>xor<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>decode<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span><span class="token number">0x47</span><span class="token punctuation">)</span><span class="token operator">^</span>xor<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0x7f</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="StarGate"><a href="#StarGate" class="headerlink" title="StarGate"></a>StarGate</h1><p>这题比赛的时候没写出来，后面复现了下，还是挺有意思的。</p><p>首先这题与常规的re不同，没有给文件，给了个靶机，那就先nc一下</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220401180829.png"></p><p>上面好像是个base64编码的文件，先用网站的base64解密下看看</p><p>我这里直接用py写了个脚本交互下载文件，后面也会用到</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span><span class="token keyword">import</span> base64<span class="token keyword">import</span> sys<span class="token keyword">import</span> subprocessp<span class="token operator">=</span>remote<span class="token punctuation">(</span><span class="token string">'node4.buuoj.cn'</span><span class="token punctuation">,</span><span class="token number">26237</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">"Gate"</span><span class="token punctuation">)</span><span class="token comment">#将Wellcome to Star Gate接收</span>code<span class="token operator">=</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">"==end=="</span><span class="token punctuation">)</span><span class="token comment">#接收中间的base64</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"stargate"</span><span class="token punctuation">,</span><span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>code<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#code包含==end==，所以只编码到倒数第八个字符</span>p<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用IDA分析一下这个文件，ELF、无壳、64位的程序</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220401181120.png"></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220401181538.png"></p><p>会发现让我们输入一个password，然后进入一个函数</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220401181635.png"></p><p>进去之后，会让你继续输入一个password，再调用其他函数，有点套娃，并且把dword_4221C8这种全局变量由1变成了0</p><p>然后我在字符串中看到了cat flag，这个命令是用来获取远程主机上的flag，莫非是个pwn？？</p><p>对字符串进行交叉引用，找到了调用该命令的函数</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220401181929.png"></p><p>上面是个if(!xxxxx)的条件判断，大概有四五百个dword_xxxxx这种变量并且初始值都是1，并且我们需要将所有的1变成0，这样就可以获得flag了</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220401182154.png"></p><p>发现一个变量对应了多个函数，而一个函数又有可能会出现在多个函数里，并且也对应了多个变量</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220401182536.png"></p><p>需要注意的是如果这个变量已经是0的话, 你是不能走这条路的.</p><p>通过简单分析后，就知道这个类似于一个图。变量类似于是图中的边，而函数就是图中的点</p><p>这样子题目的意思是让我们以某种顺序来输入password，并且没有重复，最后将所有的变量变为0，出题人也提示了欧拉路径，其实我感觉像一个迷宫</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220401183825.png"></p><p>先生成一个asm文件，然后用py脚本把所有的password提取出来</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> ospoints <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>now<span class="token punctuation">,</span> rt <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span>flag <span class="token operator">=</span> <span class="token boolean">False</span>edges <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"stargate.asm"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f <span class="token punctuation">:</span>    tmp <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token string">'lea     rdi, aLegendHasItTha'</span> <span class="token keyword">in</span> tmp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token punctuation">:</span><span class="token comment">#起点</span>            <span class="token keyword">break</span>        <span class="token keyword">if</span> <span class="token string">'lea     rdi, aThere'</span> <span class="token keyword">in</span> tmp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token punctuation">:</span><span class="token comment">#终点</span>            flag <span class="token operator">=</span> <span class="token boolean">True</span>        <span class="token keyword">if</span> <span class="token string">'call    _strcmp'</span> <span class="token keyword">in</span> tmp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token punctuation">:</span><span class="token comment">#获取_strcmp上一行的password，也就是进入下一个星球的password</span>            s <span class="token operator">=</span> tmp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'"'</span><span class="token punctuation">)</span>            p <span class="token operator">=</span> tmp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>s<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span>            <span class="token keyword">if</span> p <span class="token keyword">not</span> <span class="token keyword">in</span> points <span class="token punctuation">:</span><span class="token comment">#如果之前没走过，就新加一个</span>                points<span class="token punctuation">.</span>append<span class="token punctuation">(</span>p<span class="token punctuation">)</span>            <span class="token keyword">if</span> now <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">:</span>                <span class="token keyword">continue</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>points<span class="token punctuation">[</span>now<span class="token punctuation">]</span><span class="token punctuation">,</span> p<span class="token punctuation">,</span> i<span class="token punctuation">)</span>            edges<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span>now<span class="token punctuation">,</span> points<span class="token punctuation">.</span>index<span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> <span class="token string">'lea     rdi, aNowYouIn'</span> <span class="token keyword">in</span> tmp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token punctuation">:</span>            s <span class="token operator">=</span> tmp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'se '</span><span class="token punctuation">)</span><span class="token comment">#获取"Now you in universe xxxxx中的password</span>            t <span class="token operator">=</span> tmp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>s<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">', '</span><span class="token punctuation">)</span>            p <span class="token operator">=</span> tmp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>s<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">:</span>s<span class="token operator">+</span>t<span class="token punctuation">]</span>            <span class="token keyword">if</span> p <span class="token keyword">not</span> <span class="token keyword">in</span> points <span class="token punctuation">:</span>                points<span class="token punctuation">.</span>append<span class="token punctuation">(</span>p<span class="token punctuation">)</span>            now <span class="token operator">=</span> points<span class="token punctuation">.</span>index<span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token comment">#now为p在点中的索引</span>            <span class="token keyword">if</span> flag <span class="token punctuation">:</span>                rt <span class="token operator">=</span> now<span class="token comment">#最后终点的index</span>                flag <span class="token operator">=</span> <span class="token boolean">False</span><span class="token comment">#后面还要继续遍历</span><span class="token keyword">print</span><span class="token punctuation">(</span>points<span class="token punctuation">)</span>ff <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"tt.in"</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">)</span>ff<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>points<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>edges<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>rt<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> edges <span class="token punctuation">:</span>    ff<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token comment">#以两个索引之间作为边，每个password就是索引，也是点</span>ff<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">".\dfs.exe"</span><span class="token punctuation">)</span><span class="token comment">#利用dfs跑欧拉</span>s <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token comment">#将跑完的路径给作为输入带回，用来以索引生成真正的password</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'tt.ans'</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f <span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">:</span>        <span class="token keyword">if</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> s<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">:</span><span class="token comment">#结束</span>            <span class="token keyword">continue</span>        <span class="token keyword">try</span> <span class="token punctuation">:</span>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>points<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token comment">#将index替换成password</span>        <span class="token keyword">except</span> <span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>edges<span class="token punctuation">)</span><span class="token operator">//</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们利用password来当作点，两点的索引组成一条边，剩下的就是找个脚本跑这个欧拉图就行了</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220401193839.png"></p><p>这个是将password变成了索引，一对为边</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;vector></span></span>using namespace std<span class="token punctuation">;</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> v<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>n<span class="token punctuation">,</span>m<span class="token punctuation">,</span>du<span class="token punctuation">[</span><span class="token number">5020</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sta<span class="token operator">=</span><span class="token number">0x3f3f3f</span><span class="token punctuation">,</span>mp<span class="token punctuation">[</span><span class="token number">2520</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2520</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ans<span class="token punctuation">[</span><span class="token number">5200</span><span class="token punctuation">]</span><span class="token punctuation">,</span>top<span class="token punctuation">;</span><span class="token keyword">inline</span> <span class="token keyword">int</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>f<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">char</span> c<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isdigit</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token operator">==</span><span class="token char">'-'</span><span class="token punctuation">)</span>f<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>c<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">isdigit</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>x<span class="token operator">=</span><span class="token punctuation">(</span>x<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>x<span class="token operator">&lt;&lt;</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>c<span class="token operator">^</span><span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span>c<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> x<span class="token operator">*</span>f<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> cnt1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>mp<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            mp<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">--</span><span class="token punctuation">;</span>            mp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token operator">--</span><span class="token punctuation">;</span>            cnt1 <span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token function">dfs</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    ans<span class="token punctuation">[</span><span class="token operator">++</span>top<span class="token punctuation">]</span><span class="token operator">=</span>x<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">dfs1</span><span class="token punctuation">(</span><span class="token keyword">int</span> p<span class="token punctuation">,</span> <span class="token keyword">int</span> t<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    v<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i <span class="token operator">++</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>mp<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            mp<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">--</span><span class="token punctuation">;</span>            cnt1 <span class="token operator">++</span><span class="token punctuation">;</span>            mp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token operator">--</span><span class="token punctuation">;</span>            <span class="token function">dfs1</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">freopen</span><span class="token punctuation">(</span><span class="token string">"tt.in"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span> <span class="token constant">stdin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">freopen</span><span class="token punctuation">(</span><span class="token string">"tt.out"</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">,</span> <span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> rt<span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>n<span class="token punctuation">,</span> <span class="token operator">&amp;</span>m<span class="token punctuation">,</span> <span class="token operator">&amp;</span>rt<span class="token punctuation">)</span><span class="token punctuation">;</span>    rt <span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>x<span class="token punctuation">,</span> <span class="token operator">&amp;</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        x <span class="token operator">++</span><span class="token punctuation">,</span> y <span class="token operator">++</span><span class="token punctuation">;</span>        mp<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        mp<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        du<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>        du<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">dfs</span><span class="token punctuation">(</span>rt<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i <span class="token operator">++</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">dfs1</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        bool flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i <span class="token operator">++</span> <span class="token punctuation">)</span> <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> j <span class="token operator">++</span> <span class="token punctuation">)</span> flag <span class="token operator">|=</span> mp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>flag<span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> top<span class="token punctuation">;</span> i <span class="token operator">++</span> <span class="token punctuation">)</span>         <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d "</span><span class="token punctuation">,</span> ans<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> rt<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n%d\n"</span><span class="token punctuation">,</span> cnt1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220401193950.png"></p><p>这是跑完欧拉后的结果，依次输入对应索引的password就是真正的路径，但是不知道为什么dfs后的值都+1了，懂得师傅可以评论告诉我一下谢谢</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220401194212.png"></p><p>替换成password，这么多肯定不是我们手动输入，必须还得使用交互式脚本来</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"when ready, press enter to continue."</span><span class="token punctuation">)</span>    ans <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span>r<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">'Password : '</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> ans<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>ans<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">try</span> <span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> <span class="token punctuation">:</span>        <span class="token keyword">break</span>r<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后可以把这个与前面的脚本结合一下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span><span class="token keyword">import</span> base64<span class="token keyword">import</span> sys<span class="token keyword">import</span> subprocessp<span class="token operator">=</span>remote<span class="token punctuation">(</span><span class="token string">'node4.buuoj.cn'</span><span class="token punctuation">,</span><span class="token number">26237</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">"Gate"</span><span class="token punctuation">)</span><span class="token comment">#将Wellcome to Star Gate接收</span>code<span class="token operator">=</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">"==end=="</span><span class="token punctuation">)</span><span class="token comment">#接收中间的base64</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"stargate"</span><span class="token punctuation">,</span><span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>code<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#code包含==end==，所以只编码到倒数第八个字符</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"when ready, press enter to continue."</span><span class="token punctuation">)</span>    ans <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">'Password : '</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> ans<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>ans<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">try</span> <span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> <span class="token punctuation">:</span>        <span class="token keyword">break</span> p<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>总体流程：</p><p>第一个py生成ELF-&gt;IDA生成ASM-&gt;第二个py生成边调用dfs, dfs结果输入回第二个py拿到点对应的password, 把password给第一个py和服务器交互, 最后拿到flag</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/master/QQ%E6%88%AA%E5%9B%BE20220401195436.png"></p><p>这题主要还是学习交互式脚本的写法，平时对于这种脚本的使用比较少，导致做题时没什么思路</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆向工程核心原理——SEH原理分析</title>
      <link href="//post/SEH.html"/>
      <url>//post/SEH.html</url>
      
        <content type="html"><![CDATA[<h1 id="SEH基本说明"><a href="#SEH基本说明" class="headerlink" title="SEH基本说明"></a>SEH基本说明</h1><p>SEH是Windows操作系统提供的异常处理机制，在程序源代码中使用try、except、finally关键词来具体实现。SEH与C++中的try、catch异常处理不同，SEH是一种从属于VC++开发工具和Windwos操作系统的异常处理机制。</p><h1 id="SEH练习1"><a href="#SEH练习1" class="headerlink" title="SEH练习1"></a>SEH练习1</h1><p>先简单介绍练习示例程序seh.exe，该程序故意触发了内存非法访问异常，然后通过SEH机制来处理该异常。并且使用PEB信息向程序中添加简单的反调试代码，使程序在正常运行与调试运行时表现出不同的行为动作。</p><h2 id="正常运行"><a href="#正常运行" class="headerlink" title="正常运行"></a>正常运行</h2><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/2022-03-18_14-02-48.png"></p><p>seh.exe程序非常简单，双击运行弹出“Hello:)”字符串，虽然程序表面上是正常运行的，但是内部已经发生了异常，由于使用了SEH机制处理，所以可以正常运行。</p><h2 id="调试运行"><a href="#调试运行" class="headerlink" title="调试运行"></a>调试运行</h2><p>用OD打开seh.exe</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/2022-03-18_14-08-02.png"></p><p>然后F9运行，程序由于发生非法访问异常会暂停调试</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/2022-03-18_14-08-54.png"></p><p>401019地址的mov dword ptr ds:[eax],1指令触发异常，当前的eax值为0，所以该指令实际含义是向内存地址为0处写入值1。但试图向未分配的内存地址0写入某个值，就会发生内存非法访问异常。</p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>内存地址0虽然属于seh.exe进程的用户内存区域，但是由于是未分配的空间，所以无法随意访问。利用OD的内存映射(view-memory菜单)，可以看到进程中内存地址0被标为未分配区域</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/2022-03-18_14-14-01.png"></p><p>我们查看OD的主窗口，当我F8单步下去时，这时候说执行不了的，下面还给了一句话</p><p><strong><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/2022-03-18_14-19-14.png"></strong></p><p>我们根据提示Shift+F9继续运行程序试试</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/2022-03-18_14-24-11.png"></p><p>这次程序检测到了调试器(内部有一段简单的调试器检测代码)，程序在两种情况下的异常处理方式是不同的</p><h1 id="OS异常处理方法"><a href="#OS异常处理方法" class="headerlink" title="OS异常处理方法"></a>OS异常处理方法</h1><p>通过前面的实验，我们知道同一程序在正常运行和调试运行时表现出的行为动作是不同的，这是由Windows OS异常处理方法的不同造成的。</p><h2 id="正常运行时的异常处理方法"><a href="#正常运行时的异常处理方法" class="headerlink" title="正常运行时的异常处理方法"></a>正常运行时的异常处理方法</h2><p>进程运行过程中若发生异常，OS会委托进程处理。若进程代码中存在具体的异常处理(如SEH异常处理器)代码，则能顺利处理相关异常，程序继续执行。如果进程内部没有具体实现SEH，那么相关异常就无法处理，OS就启动默认的异常处理机制，终止进程运行。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/2022-03-18_14-35-02.png"></p><h2 id="调试运行时的异常处理方法"><a href="#调试运行时的异常处理方法" class="headerlink" title="调试运行时的异常处理方法"></a>调试运行时的异常处理方法</h2><p>调试运行中发生异常时，处理方法与正常运行时不同。如果调试进程内部发生异常，OS会首先把异常抛给调试进程处理。调试器几乎拥有被调试者的所有权限，它不仅可以运行、终止被调试者，还拥有被调试进程的虚拟内存、寄存器的读写权限。所以调试过程中发生的所有异常错误都要先交给调试器管理。</p><h3 id="遇到异常时经常采用的几种处理方法："><a href="#遇到异常时经常采用的几种处理方法：" class="headerlink" title="遇到异常时经常采用的几种处理方法："></a>遇到异常时经常采用的几种处理方法：</h3><ol><li><p>直接修改异常：代码、寄存器、内存</p><p>被调试者发生异常时，调试器会在发生异常的代码处暂停，此时可以通过调试器直接修改问题的代码、内存、寄存器等，排除异常1后，调试器继续运行程序</p></li><li><p>将异常抛给被调试者</p><p>如果被调试者内部存在异常处理函数(SEH)能够处理异常，那么异常通知会发送给被调试者，由它自己处理，此时与程序正常运行时的异常处理方式一样。</p></li><li><p>OS默认的异常处理机制</p><p>如果调试者与被调试者都无法处理当前的异常，则OS的默认异常处理会处理它，终止被调试进程，同时结束调试。</p></li></ol><h1 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h1><pre class="line-numbers language-c" data-language="c"><code class="language-c">EXCEPTION_ACCESS_VIOLATION        <span class="token number">0xC0000005</span>     程序企图读写一个不可访问的地址时引发的异常。例如企图读取<span class="token number">0</span>地址处的内存。EXCEPTION_ARRAY_BOUNDS_EXCEEDED     <span class="token number">0xC000008C</span>     数组访问越界时引发的异常。EXCEPTION_BREAKPOINT                <span class="token number">0x80000003</span>     触发断点时引发的异常。EXCEPTION_DATATYPE_MISALIGNMENT     <span class="token number">0x80000002</span>     程序读取一个未经对齐的数据时引发的异常。EXCEPTION_FLT_DENORMAL_OPERAND      <span class="token number">0xC000008D</span>     如果浮点数的操作数是非正常的，则引发该异常。所谓非正常即它的值太小以至于不能用标准格式表示出来。EXCEPTION_FLT_DIVIDE_BY_ZERO        <span class="token number">0xC000008E</span>     浮点数除法的除数是<span class="token number">0</span>时引发该异常。EXCEPTION_FLT_INEXACT_RESULT        <span class="token number">0xC000008F</span>     浮点数操作的结果不能精确表示成小数时引发该异常。EXCEPTION_FLT_INVALID_OPERATION     <span class="token number">0xC0000090</span>     该异常表示不包括在这个表内的其它浮点数异常。EXCEPTION_FLT_OVERFLOW              <span class="token number">0xC0000091</span>     浮点数的指数超过所能表示的最大值时引发该异常。EXCEPTION_FLT_STACK_CHECK           <span class="token number">0xC0000092</span>     进行浮点数运算时栈发生溢出或下溢时引发该异常。EXCEPTION_FLT_UNDERFLOW             <span class="token number">0xC0000093</span>     浮点数的指数小于所能表示的最小值时引发该异常。EXCEPTION_ILLEGAL_INSTRUCTION       <span class="token number">0xC000001D</span>     程序企图执行一个无效的指令时引发该异常。EXCEPTION_IN_PAGE_ERROR             <span class="token number">0xC0000006</span>     程序要访问的内存页不在物理内存中时引发的异常。EXCEPTION_INT_DIVIDE_BY_ZERO        <span class="token number">0xC0000094</span>     整数除法的除数是<span class="token number">0</span>时引发该异常。EXCEPTION_INT_OVERFLOW              <span class="token number">0xC0000095</span>     整数操作的结果溢出时引发该异常。EXCEPTION_INVALID_DISPOSITION       <span class="token number">0xC0000026</span>     异常处理器返回一个无效的处理的时引发该异常。EXCEPTION_NONCONTINUABLE_EXCEPTION  <span class="token number">0xC0000025</span>     发生一个不可继续执行的异常时，如果程序继续执行，则会引发该异常。EXCEPTION_PRIV_INSTRUCTION          <span class="token number">0xC0000096</span>     程序企图执行一条当前CPU模式不允许的指令时引发该异常。EXCEPTION_SINGLE_STEP               <span class="token number">0x80000004</span>     标志寄存器的TF位为<span class="token number">1</span>时，每执行一条指令就会引发该异常。主要用于单步调试。EXCEPTION_STACK_OVERFLOW            <span class="token number">0xC00000FD</span>     栈溢出时引发该异常<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="SEH详细说明"><a href="#SEH详细说明" class="headerlink" title="SEH详细说明"></a>SEH详细说明</h1><h2 id="SEH链"><a href="#SEH链" class="headerlink" title="SEH链"></a>SEH链</h2><p>SEH是以链的方式存在。第一个异常处理器中若未处理相关异常，异常就会被传递到下个异常处理器中，直到得到处理。</p><h3 id="EXCEPTION-REGISTRATION-RECORD"><a href="#EXCEPTION-REGISTRATION-RECORD" class="headerlink" title="EXCEPTION_REGISTRATION_RECORD"></a>EXCEPTION_REGISTRATION_RECORD</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_EXCEPTION_REGISTRATION_RECORD</span><span class="token punctuation">&#123;</span>     PEXCEPTION_REGISTRATION_RECORD Next<span class="token punctuation">;</span>     PEXCEPTION_DISPOSITION Handler<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> EXCEPTION_REGISTRATION_RECORD<span class="token punctuation">,</span> <span class="token operator">*</span>PEXCEPTION_REGISTRATION_RECORD<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Next是指向下一个EXCEPTION_REGISTRATION_RECORD结构体的指针，Handler成员是异常处理函数(异常处理器)。若Next成员的值为FFFFFFFF，则表示它是链表的最后一个结点。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/749281_ZVFWN44W33SUD5W.jpg"></p><p>这张图里有3个SEH(异常处理器)，发生异常时，该异常会按照(A)—&gt;(B)—&gt;(C)的顺序依次传递，直到有异常处理器处理。</p><h2 id="异常处理函数的定义"><a href="#异常处理函数的定义" class="headerlink" title="异常处理函数的定义"></a>异常处理函数的定义</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">//此函数并未在MSDN上公开</span>EXCEPTION_DISPOSITION __cdecl <span class="token function">_except_handler</span><span class="token punctuation">(</span>EXCEPTION_RECODE <span class="token operator">*</span>pRecord<span class="token punctuation">,</span>    EXCEPTION_REGISTRATION_RECORD <span class="token operator">*</span>pFrame<span class="token punctuation">,</span><span class="token comment">//指向SHE链中当前_EXCEPTION_REGISTRATION结构的地址</span>    CONTEXT  <span class="token operator">*</span>pContext<span class="token punctuation">,</span>    PVOID pValue <span class="token comment">//用于内嵌异常的处理，读者可以暂时忽略它</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个异常处理函数由系统调用，是一个回调函数，系统调用它时会给出四个参数，且这4个参数中保存着与异常相关的信息。</p><h3 id="第一个参数EXCEPTION-RECORD"><a href="#第一个参数EXCEPTION-RECORD" class="headerlink" title="第一个参数EXCEPTION_RECORD"></a>第一个参数EXCEPTION_RECORD</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_EXCEPTION_RECORD</span> <span class="token punctuation">&#123;</span>    DWORD ExceptionCode<span class="token punctuation">;</span>   <span class="token comment">//指出异常类型</span>    DWORD ExceptionFlags<span class="token punctuation">;</span>    <span class="token keyword">struct</span> <span class="token class-name">_EXCEPTION_RECORD</span> <span class="token operator">*</span>ExceptionRecord<span class="token punctuation">;</span>    PVOID ExceptionAddress<span class="token punctuation">;</span>   <span class="token comment">//发生异常的代码地址</span>    DWORD NumberParameters<span class="token punctuation">;</span>    ULONG_PTR ExceptionInformation<span class="token punctuation">[</span>EXCEPTION_MAXIMUM_PARAMETERS<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> EXCEPTION_RECORD<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="第二个参数EXCEPTION-REGISTRATION-RECORD"><a href="#第二个参数EXCEPTION-REGISTRATION-RECORD" class="headerlink" title="第二个参数EXCEPTION_REGISTRATION_RECORD"></a>第二个参数EXCEPTION_REGISTRATION_RECORD</h3><p>指向异常帧结构的指针</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">ntdll<span class="token operator">!</span>_EXCEPTION_REGISTRATION_RECORD   <span class="token operator">+</span><span class="token number">0x000</span> Next             <span class="token operator">:</span> Ptr32 _EXCEPTION_REGISTRATION_RECORD   <span class="token operator">+</span><span class="token number">0x004</span> Handler          <span class="token operator">:</span> Ptr32 _EXCEPTION_DISPOSITION <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="第三个参数CONTEXT"><a href="#第三个参数CONTEXT" class="headerlink" title="第三个参数CONTEXT"></a>第三个参数CONTEXT</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_CONTEXT</span> <span class="token punctuation">&#123;</span>    DWORD ContextFlags<span class="token punctuation">;</span>    DWORD   Dr0<span class="token punctuation">;</span>    DWORD   Dr1<span class="token punctuation">;</span>    DWORD   Dr2<span class="token punctuation">;</span>    DWORD   Dr3<span class="token punctuation">;</span>    DWORD   Dr6<span class="token punctuation">;</span>    DWORD   Dr7<span class="token punctuation">;</span>    FLOATING_SAVE_AREA FloatSave<span class="token punctuation">;</span>    DWORD   SegGs<span class="token punctuation">;</span>    DWORD   SegFs<span class="token punctuation">;</span>    DWORD   SegEs<span class="token punctuation">;</span>    DWORD   SegDs<span class="token punctuation">;</span>    DWORD   Edi<span class="token punctuation">;</span>    DWORD   Esi<span class="token punctuation">;</span>    DWORD   Ebx<span class="token punctuation">;</span>    DWORD   Edx<span class="token punctuation">;</span>    DWORD   Ecx<span class="token punctuation">;</span>    DWORD   Eax<span class="token punctuation">;</span>    DWORD   Ebp<span class="token punctuation">;</span>    DWORD   Eip<span class="token punctuation">;</span>    DWORD   SegCs<span class="token punctuation">;</span>              <span class="token comment">// MUST BE SANITIZED</span>    DWORD   EFlags<span class="token punctuation">;</span>             <span class="token comment">// MUST BE SANITIZED</span>    DWORD   Esp<span class="token punctuation">;</span>    DWORD   SegSs<span class="token punctuation">;</span>    BYTE    ExtendedRegisters<span class="token punctuation">[</span>MAXIMUM_SUPPORTED_EXTENSION<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> CONTEXT<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>CONTEXT结构体用来备份CPU寄存器的值，因为多线程环境下需要这么做。每个线程内部都有一个CONTEXT结构体。CPU暂时离开当前线程去运行其他线程时，CPU寄存器的值就会保存到当前线程的CONTEXT结构体；CPU再次运行该线程时，会使用保存在CONTEXT结构体的值来覆盖CPU寄存器，然后从之前暂停的代码处继续执行。通过这种方式，OS可以在多线程下安全运行各线程。</p><p>异常发生的时候，执行异常代码的线程就会中断运行，转而运行SEH(异常处理函数)，此时OS会把线程的CONTEXT结构体的指针传递给异常处理函数的参数。这个结构体中有一个EIP，在异常处理函数中将参数传递过来的EIP设置为其他的地址，然后再返回异常处理函数，这样，之前暂停的线程就会执行新设置的EIP地址处的代码，这在反调试中经常使用。</p><h3 id="返回值EXCEPTION-DISPOSITION"><a href="#返回值EXCEPTION-DISPOSITION" class="headerlink" title="返回值EXCEPTION_DISPOSITION"></a>返回值EXCEPTION_DISPOSITION</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token keyword">enum</span> <span class="token class-name">_EXCEPTION_DISPOSITION</span><span class="token punctuation">&#123;</span>         ExceptionContinueExecution       <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">//回调函数处理了异常，可以从异常发生的指令处重新执行。</span>         ExceptionContinueSearch          <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//回调函数不能处理该异常，需要SEH链中的其他回调函数处理。</span>         ExceptionNestedException         <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">//回调函数在执行中又发生了新的异常，即发生了嵌套异常</span>         ExceptionCollidedUnwind          <span class="token operator">=</span> <span class="token number">3</span>  <span class="token comment">//发生了嵌套的展开操作</span><span class="token punctuation">&#125;</span> EXCEPTION_DISPOSITION<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="TEB-NtTib-ExceptionList"><a href="#TEB-NtTib-ExceptionList" class="headerlink" title="TEB.NtTib.ExceptionList"></a>TEB.NtTib.ExceptionList</h2><p>通过TEB结构体的NtTib成员可以很容易访问进程的SEH链</p><p>TEB.NtTib.ExceptionList&#x3D;FS:[0]</p><h2 id="SEH安装方法"><a href="#SEH安装方法" class="headerlink" title="SEH安装方法"></a>SEH安装方法</h2><p>在C语言中使用try、except、finally关键词很容易向代码中添加SEH，在汇编语言中添加SEH的方法更加简单</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">PUSH MyHandler<span class="token punctuation">;</span>PUSH DWORD PTR FS<span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>MOV DWORD PTR FS<span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ESP<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="SEH练习2"><a href="#SEH练习2" class="headerlink" title="SEH练习2"></a>SEH练习2</h1><h2 id="查看SEH链"><a href="#查看SEH链" class="headerlink" title="查看SEH链"></a>查看SEH链</h2><p>用OD打开seh.exe程序，运行到0x401000地址处</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/2022-03-18_21-46-09.png"></p><p>圈出来的三条指令就是SEH安装方法的汇编指令，异常函数处理的地址为0x40105A</p><h2 id="通过OD查找SEH链"><a href="#通过OD查找SEH链" class="headerlink" title="通过OD查找SEH链"></a>通过OD查找SEH链</h2><p>在OD中通过View-SEH Chain可以查看SEH链</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/2022-03-18_21-58-34.png"></p><h2 id="发生异常"><a href="#发生异常" class="headerlink" title="发生异常"></a>发生异常</h2><p>当发生异常时，OS会把控制器交给调试器，此时并没有执行40105A处的代码，我们在40105A处下断点，然后shift+F12运行，此时会将异常派送给被调试进程自己处理</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/2022-03-18_22-03-49.png"></p><p>这个就是异常处理函数，我们可以分析一下</p><h2 id="查看异常处理器参数"><a href="#查看异常处理器参数" class="headerlink" title="查看异常处理器参数"></a>查看异常处理器参数</h2><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/2022-03-18_22-05-50.png"></p><p>第一个参数，ESP+4,指向EXCEPTION_RECODE结构体的指针pRecord(12FAC0),前面已经说过该结构体第一个成员是异常类型，第四个成员是异常发生的地址。异常类型为C0000005，发生异常的代码地址为401019</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/2022-03-18_22-08-21.png"></p><p>第二个参数，ESP+8，是指向EXCEPTION_REGISTRATION_RECORD的指针pFrame，其值为12FF3C，这是SEH链的起始地址</p><p>第三个参数，ESP+C,是指向CONTEXT结构体的指针pContext(12FADC)，查看指针所指的地址空间</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/2022-03-18_22-13-31.png"></p><p>这里特别注意偏移为B8的位置，这是成员EIP，存放着发生异常的代码地址</p><p>最后一个参数，ESP+10供系统内部使用，可以省略。</p><h2 id="调试异常处理器"><a href="#调试异常处理器" class="headerlink" title="调试异常处理器"></a>调试异常处理器</h2><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220319143655.png"></p><pre class="line-numbers language-none"><code class="language-none">MOV ESI,DWORD PTR SS:[ESP+C];ESP+C是异常处理器的第三个参数pContext,此时esi的地址就是pContextMOV EAX,DWORD PTR FS:[30]此时eax存放着PEB的结构体地址CMP BYTE PTR DS:[EAX+2],1读取EAX+2地址中的一个字节，然后与1比较，而EAX+2是PEB中偏移为2的成员，也就是BeingDebuggedJNZ SHORT 00401076如果两者不一样就跳转，而此时BeingDebugged&#x3D;1，所以不跳转，继续向下执行MOV DWORD PTR SS:[ESI+B8],00401023由于没有跳转，现在执行该语句，由于 ESI的值是篇ConText，所以B8处的EIP被改为00401023，此时发生异常的线程就会执行401023处的代码XOR EAX,RAXRETN最后两句将返回值EAX置0，然后返回，返回0代表了EXCEPTION_CONTINUE_EXECUTION,异常得到处理，相关线程可以继续运行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220319144627.png"></p><p>可以看到401023是实现弹出Debugger Detected:(的代码</p><p>401039处的代码是实现弹出Hello:(的代码</p><h2 id="删除SEH"><a href="#删除SEH" class="headerlink" title="删除SEH"></a>删除SEH</h2><p>在程序终止前删除已经注册的SEH</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220319145311.png"></p><h1 id="设置OD选项"><a href="#设置OD选项" class="headerlink" title="设置OD选项"></a>设置OD选项</h1><p>OllyDbg调试器中提供了调试选项，调试中的程序发生异常时，调试器不会停止，自动将异常派送给被调试者，看上去与正常运行一样。</p><p>在OD的菜单栏中选择我Options—&gt;Debugging options菜单，打开Degbugging options菜单，然后再选择异常选项</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220319150059.png"></p><p>灵活运用这些选项，可以使我们在调试程序时，跳过异常，使调试过程不会暂停，被调试者会自己通过SEH处理</p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆向工程核心原理——TLS回调函数</title>
      <link href="//post/TLS%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0.html"/>
      <url>//post/TLS%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><p>我们先运行HelloTls.exe文件</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220315141954.png"></p><p>然后我们使用OD调试这个程序</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220315142048.png"></p><p>发现已经和之前打开弹出的内容不同了，这是因为程序运行EP代码之前先调用了TLS回调函数，而这个函数中存在反调试代码，使程序在被调试时弹出”Debugger Detected!”。</p><h1 id="TLS原理分析"><a href="#TLS原理分析" class="headerlink" title="TLS原理分析"></a>TLS原理分析</h1><p>TLS是各线程的独立的数据存储空间。使用TLS技术可以在线程内部独立使用或修改进程的全局数据或静态数据，就像对待自身的局部变量一样。</p><h2 id="IMAGE-DATA-DIRECTORY-9"><a href="#IMAGE-DATA-DIRECTORY-9" class="headerlink" title="IMAGE_DATA_DIRECTORY[9]"></a>IMAGE_DATA_DIRECTORY[9]</h2><p>如果在程序中使用了TLS功能，PE文件的数据目录表第十项就会设置TLS表，RVA为9310</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220315152330.png"></p><h2 id="IMAGE-TLS-DIRECTORY"><a href="#IMAGE-TLS-DIRECTORY" class="headerlink" title="IMAGE_TLS_DIRECTORY"></a>IMAGE_TLS_DIRECTORY</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_IMAGE_TLS_DIRECTORY32</span> <span class="token punctuation">&#123;</span>    DWORD   StartAddressOfRawData<span class="token punctuation">;</span>    DWORD   EndAddressOfRawData<span class="token punctuation">;</span>    PDWORD  AddressOfIndex<span class="token punctuation">;</span>    PIMAGE_TLS_CALLBACK <span class="token operator">*</span>AddressOfCallBacks<span class="token punctuation">;</span>    DWORD   SizeOfZeroFill<span class="token punctuation">;</span>    DWORD   Characteristics<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> IMAGE_TLS_DIRECTORY32<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>IMAGE_TLS_DIRECTORY有两种版本，分别为32位版本和64位版本</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220315154305.png"></p><p>这里面比较重要的是AddressOfCallbacks,这个值指向含有TLS回调函数地址(VA)的数组，这就意味着可以向同一程序注册多个TLS回调函数</p><h2 id="回调函数地址数组"><a href="#回调函数地址数组" class="headerlink" title="回调函数地址数组"></a>回调函数地址数组</h2><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220315161115.png"></p><p>该数组存储的就是TLS回调函数的地址。进程启动运行时，也就是EP代码执行前系统会逐一调用存储在该数组中的函数。</p><h1 id="TLS回调函数"><a href="#TLS回调函数" class="headerlink" title="TLS回调函数"></a>TLS回调函数</h1><p>TLS回调函数是指，每当创建&#x2F;终止进程的线程时会自动调用执行的函数，而创建进程的主线程也会自动调用回调函数，且会在EP代码之前执行，反调试技术利用的就是这个特征。</p><h2 id="IMAGE-TLS-CALLBACK"><a href="#IMAGE-TLS-CALLBACK" class="headerlink" title="IMAGE_TLS_CALLBACK"></a>IMAGE_TLS_CALLBACK</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token function">VOID</span><span class="token punctuation">(</span>NTAPI <span class="token operator">*</span>PIMAGE_TLS_CALLBACK<span class="token punctuation">)</span> <span class="token punctuation">(</span>    PVOID DllHandle<span class="token punctuation">,</span>    DWORD Reason<span class="token punctuation">,</span>    PVOID Reserved    <span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>仔细观察函数定义，我们发现这个函数与DllMain()函数的定义类似。</p><p>DllHandle为模块句柄，即加载地址</p><p>Reason为调用TLS回调函数的原因</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">DLL_PROCESS_ATTACH</span>   <span class="token expression"><span class="token number">1</span>    </span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">DLL_THREAD_ATTACH</span>    <span class="token expression"><span class="token number">2</span>    </span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">DLL_THREAD_DETACH</span>    <span class="token expression"><span class="token number">3</span>    </span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">DLL_PROCESS_DETACH</span>   <span class="token expression"><span class="token number">0</span>    </span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="练习-TlsTest-exe"><a href="#练习-TlsTest-exe" class="headerlink" title="练习-TlsTest.exe"></a>练习-TlsTest.exe</h1><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">_CRT_SECURE_NO_WARNINGS</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;windows.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression"><span class="token function">comment</span><span class="token punctuation">(</span>linker<span class="token punctuation">,</span> </span><span class="token string">"/INCLUDE:__tls_used"</span><span class="token expression"><span class="token punctuation">)</span></span></span><span class="token keyword">void</span> <span class="token function">print_console</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span> szMsg<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    HANDLE hStdout <span class="token operator">=</span> <span class="token function">GetStdHandle</span><span class="token punctuation">(</span>STD_OUT1PUT_HANDLE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">WriteConsoleA</span><span class="token punctuation">(</span>hStdout<span class="token punctuation">,</span> szMsg<span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span>szMsg<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> NTAPI <span class="token function">TLS_CALLBACK1</span><span class="token punctuation">(</span>PVOID DllHandle<span class="token punctuation">,</span> DWORD Reason<span class="token punctuation">,</span> PVOID Reserved<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">char</span> szMsg<span class="token punctuation">[</span><span class="token number">80</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">wsprintfA</span><span class="token punctuation">(</span>szMsg<span class="token punctuation">,</span> <span class="token string">"TLS_CALLBACK1() : DllHandle = %X, Reason = %d\n"</span><span class="token punctuation">,</span> DllHandle<span class="token punctuation">,</span> Reason<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">print_console</span><span class="token punctuation">(</span>szMsg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> NTAPI <span class="token function">TLS_CALLBACK2</span><span class="token punctuation">(</span>PVOID DllHandle<span class="token punctuation">,</span> DWORD Reason<span class="token punctuation">,</span> PVOID Reserved<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">char</span> szMsg<span class="token punctuation">[</span><span class="token number">80</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">wsprintfA</span><span class="token punctuation">(</span>szMsg<span class="token punctuation">,</span> <span class="token string">"TLS_CALLBACK2() : DllHandle = %X, Reason = %d\n"</span><span class="token punctuation">,</span> DllHandle<span class="token punctuation">,</span> Reason<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">print_console</span><span class="token punctuation">(</span>szMsg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression"><span class="token function">data_seg</span><span class="token punctuation">(</span></span><span class="token string">".CRT$XLX"</span><span class="token expression"><span class="token punctuation">)</span></span></span>PIMAGE_TLS_CALLBACK pTLS_CALLBACKs<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> TLS_CALLBACK1<span class="token punctuation">,</span> TLS_CALLBACK2<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression"><span class="token function">data_seg</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span></span>DWORD WINAPI <span class="token function">ThreadProc</span><span class="token punctuation">(</span>LPVOID lParam<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">print_console</span><span class="token punctuation">(</span><span class="token string">"ThreadProc() start\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">print_console</span><span class="token punctuation">(</span><span class="token string">"ThreadProc() end\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    HANDLE hThread <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>    <span class="token function">print_console</span><span class="token punctuation">(</span><span class="token string">"main() start\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    hThread <span class="token operator">=</span> <span class="token function">CreateThread</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> ThreadProc<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">WaitForSingleObject</span><span class="token punctuation">(</span>hThread<span class="token punctuation">,</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">CloseHandle</span><span class="token punctuation">(</span>hThread<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">print_console</span><span class="token punctuation">(</span><span class="token string">"main() end\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这份代码里，先注册了2个TLS回调函数(TLS_CALLBACK1、TLS_CALLBACK2)。它们的操作就是把DllHandle和Reason打印到控制台，然后退出。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220315163815.png"></p><h3 id="DLL-PROCESS-ATTACH"><a href="#DLL-PROCESS-ATTACH" class="headerlink" title="DLL_PROCESS_ATTACH"></a>DLL_PROCESS_ATTACH</h3><p>进程的主线程调用main()函数前，已经注册的TLS回调函数TLS_CALLBACK1、TLS_CALLBACK2会先被执行调用，此时Reason为1</p><h3 id="DLL-THREAD-ATTACH"><a href="#DLL-THREAD-ATTACH" class="headerlink" title="DLL_THREAD_ATTACH"></a>DLL_THREAD_ATTACH</h3><p>所有TLS回调函数完成调用后，main()函数开始执行，创建用户线程(ThreadProc)前，TLS回调函数会被再次调用执行，此时Reason为2</p><h3 id="DLL-THREAD-DETACH"><a href="#DLL-THREAD-DETACH" class="headerlink" title="DLL_THREAD_DETACH"></a>DLL_THREAD_DETACH</h3><p>TLS回调函数全部执行完后，ThreadProc开始执行，在执行完后，Reason为3，此时TLS回调函数被调用执行</p><h3 id="DLL-PROCESS-DETACH"><a href="#DLL-PROCESS-DETACH" class="headerlink" title="DLL_PROCESS_DETACH"></a>DLL_PROCESS_DETACH</h3><p>main()主线程也会终止，此时Reason为0，TLS回调函数最后一次被调用执行。</p><h1 id="调试TLS回调函数"><a href="#调试TLS回调函数" class="headerlink" title="调试TLS回调函数"></a>调试TLS回调函数</h1><p>如果直接使用调试器打开带有TLS回调函数的程序，则无法调试TLS回调函数，因为TLS回调函数会在EP代码之前执行，所以我们在调试代码之前需要对OD的设置进行一些修改</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220315165125.png"></p><p>此时再调试带有TLS的程序时，会自动在ntdll.dll模块内部的“System Startup Breakpoint”处暂停，调试器暂停的位置是系统启动断点。然后根据前面的IMAGE_TLS_DIRECTORY获取TLS回调函数的地址，在回调函数的起始地址设置好断点，这样就可以进行TLS回调函数的调试了。</p><p>前面我们知道回调函数的首地址是00401000，所以我们在这个地方下个断点，然后F9运行到这。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220315165720.png"></p><p>代码逻辑比较清晰，通过IsDebuggerPresent的API来进行反调试，我们通过修改flags中的Z位置1，就可以绕过反调试了</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/ss.png"></p><h1 id="手工添加TLS回调函数"><a href="#手工添加TLS回调函数" class="headerlink" title="手工添加TLS回调函数"></a>手工添加TLS回调函数</h1><h2 id="设计规划"><a href="#设计规划" class="headerlink" title="设计规划"></a>设计规划</h2><p>首先要确定IMAGE_TLS_DIRECTORY结构体与TLS回调函数放到文件的哪个位置。向PE文件添加代码或者数据时。有如下3种方法来查找合适位置：</p><ol><li><p>添加到节区末尾的空白区域</p></li><li><p>增加最后一个节区的大小</p></li><li><p>在最后添加新节区</p></li></ol><p>我们采用第二种方法，增加最后一个节区的大小。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220315193828.png"></p><p>Pointer to Raw Data&#x3D;9000</p><p>Size of Raw Data&#x3D;600</p><p>所以PE头中定义的文件整体大小为9600</p><p>我们用010editor打开hello.exe，然后在尾部插入200h个字节</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220315194329.png"></p><h2 id="编辑PE文件头"><a href="#编辑PE文件头" class="headerlink" title="编辑PE文件头"></a>编辑PE文件头</h2><p>将.rcrs节区头中的Size of Raw Data&#x3D;800，Characteristics&#x3D;E0000060</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220315194747.png"></p><p>在原有属性的基础上新增加了IMAGE_SCN_CNT_CODE|IMAGE_SCN_MEM_EXECUTE|IMAGE_SCN_MEM_WRITE属性</p><h2 id="IMAGEE-DATA-DIRECTORY-9"><a href="#IMAGEE-DATA-DIRECTORY-9" class="headerlink" title="IMAGEE_DATA_DIRECTORY[9]"></a>IMAGEE_DATA_DIRECTORY[9]</h2><p>接下来要设置TLS表的值</p><p>我们的TLS表放在9600的位置，大小为24个字节(0x18)，9600是文件偏移，转化成RVA就是1 E600</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220315203328.png"></p><h2 id="设置IMAGE-TLS-DIRECTORY结构体"><a href="#设置IMAGE-TLS-DIRECTORY结构体" class="headerlink" title="设置IMAGE_TLS_DIRECTORY结构体"></a>设置IMAGE_TLS_DIRECTORY结构体</h2><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220315205559.png"></p><p>我们在9600位置开始填入数据，大小为0x18个字节，把从9618开始后面0x18字节，0x18&#x2F;4&#x3D;6个地址，刚好赋给IMAGE_TLS_DIRECTORY,在9630位置设置函数地址，存放在Address of Callbacks指向的回调函数数组中，其中C20C是机器码，对应汇编就是 RETN 0C,也就是说这个函数只进行了平衡堆栈的操作，TLS有三个参数，所以retn 0xc</p><h2 id="编写TLS回调函数"><a href="#编写TLS回调函数" class="headerlink" title="编写TLS回调函数"></a>编写TLS回调函数</h2><p>可以利用OD直接写汇编，最终将程序保存下来就可以了</p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆向工程核心原理——全局API钩取</title>
      <link href="//post/%E5%85%A8%E5%B1%80API%E9%92%A9%E5%8F%96-IE%E9%93%BE%E6%8E%A5%E6%8E%A7%E5%88%B6.html"/>
      <url>//post/%E5%85%A8%E5%B1%80API%E9%92%A9%E5%8F%96-IE%E9%93%BE%E6%8E%A5%E6%8E%A7%E5%88%B6.html</url>
      
        <content type="html"><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>钩取IE进程的API，当它在连接到特定网站的过程中，将其连接到其他网站，类似于拦截恶意网站功能</p><h1 id="目标API"><a href="#目标API" class="headerlink" title="目标API"></a>目标API</h1><p>API钩取的核心就是选择目标API，我们首先猜测一下，可能会钩取套接字库(ws2_32.dll)、微软提供的网络访问的相关库(wininet.dll、winhttp.dll)就可以了。</p><h2 id="查看IE加载了哪些DLL"><a href="#查看IE加载了哪些DLL" class="headerlink" title="查看IE加载了哪些DLL"></a>查看IE加载了哪些DLL</h2><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220311093748.png"></p><p>在Wininet.dll中有个API(InternetConnect())用来连接某个网络</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">HINTERNET <span class="token function">InternetConnectA</span><span class="token punctuation">(</span>  <span class="token punctuation">[</span>in<span class="token punctuation">]</span> HINTERNET     hInternet<span class="token punctuation">,</span>  <span class="token punctuation">[</span>in<span class="token punctuation">]</span> LPCSTR        lpszServerName<span class="token punctuation">,</span><span class="token comment">//要连接的URL</span>  <span class="token punctuation">[</span>in<span class="token punctuation">]</span> INTERNET_PORT nServerPort<span class="token punctuation">,</span>  <span class="token punctuation">[</span>in<span class="token punctuation">]</span> LPCSTR        lpszUserName<span class="token punctuation">,</span>  <span class="token punctuation">[</span>in<span class="token punctuation">]</span> LPCSTR        lpszPassword<span class="token punctuation">,</span>  <span class="token punctuation">[</span>in<span class="token punctuation">]</span> DWORD         dwService<span class="token punctuation">,</span>  <span class="token punctuation">[</span>in<span class="token punctuation">]</span> DWORD         dwFlags<span class="token punctuation">,</span>  <span class="token punctuation">[</span>in<span class="token punctuation">]</span> DWORD_PTR     dwContext<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="验证：调试IE进程"><a href="#验证：调试IE进程" class="headerlink" title="验证：调试IE进程"></a>验证：调试IE进程</h2><p>我们用OD开启一个IE浏览器，在InternetConnect下断点，然后在浏览器输入<a href="http://www.baidu.com/">www.baidu.com</a></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220311100505.png"></p><p>程序会在InternetConnect断下来，连接地址就是我们输入的网站，现在我们将“<a href="http://www.baidu.com”改成“www.sohu.cocm”试试/">www.baidu.com”改成“www.sohu.cocm”试试</a></p><p>这时候我们F9运行还是会在这断下来，因为一个网站是由多个链接地址组成，需要将断点删除后再运行</p><h1 id="IE进程结构"><a href="#IE进程结构" class="headerlink" title="IE进程结构"></a>IE进程结构</h1><p>我们先打开多个选项卡，用PChunter查看</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220311102720.png"></p><p>PID为2628的iexplore.exe进程与其他几个iexplore.exe进程形成了父子关系，每个选项卡是一个单独的进程，所以当其中一个发生错误时，不会影响到其他的选项卡或者父进程。</p><p>由于创建新的选项卡就会创建新的进程，我们就需要钩取相关的进程API，达到全局钩取API的目的，否则新创建的选项卡在连接网站时无法钩取。</p><h1 id="ntdll-ZwResumeThread"><a href="#ntdll-ZwResumeThread" class="headerlink" title="ntdll!ZwResumeThread()"></a>ntdll!ZwResumeThread()</h1><p>在创建进程的API中最具有代表性的就是kernel32.CreateProcess()API,现在调试一下利用这个API编写的程序</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;Windows.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;tchar.h></span></span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>STARTUPINFO si<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>PROCESS_INFORMATION pi<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>TCAHR szCmd<span class="token punctuation">[</span>MAX_PATH<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>si<span class="token punctuation">.</span>cb<span class="token operator">=</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>STARTUPINFO<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">_tcscpy</span><span class="token punctuation">(</span>szCmd<span class="token punctuation">,</span>L<span class="token string">"notepad.exe"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">CreateProcess</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span>szCmd<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">,</span>FALSE<span class="token punctuation">,</span>NORMAK_PRIORITY_CLASS<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>si<span class="token punctuation">,</span><span class="token operator">&amp;</span>pi<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>pi<span class="token punctuation">.</span>hProcess<span class="token operator">!=</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token function">CloseHandle</span><span class="token punctuation">(</span>pi<span class="token punctuation">.</span>hProcess<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220311143935.png"></p><p>我们先跟踪到kernel32.CreateProcessW(),然后F7跟进内部</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220311144107.png"></p><p>我们看到在内部又调用了kernel32!CreateProcessInternalW(),这里连续的PUSH和CreateProcessW是相同的参数</p><p>kernel32!CreateProcessInternalW()比较大，我们往下面拉，就能看到ntdll!ZwCreateUserProcess()</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220311145912.png"></p><p>此时的栈空间和原来的区别很大</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220311151103.png"></p><p>在执行完这个API后，我们的子进程就会被挂起，然后暂停运行，notepad.exe进程已经生成，但是其EP代码尚未运行。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220311151630.png"></p><p>ntdll!ZwResumeThread()函数就是用来恢复运行线程的。这个线程即是子进程的主线程，所以当执行完后，子进程的EP代码才会执行。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220311151812.png"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>综上所述，CreateProcessW()API的调用流程整理如下：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">kernel32<span class="token operator">!</span>CreateProcessWkernel32<span class="token operator">!</span><span class="token function">CreateProcessInternalW</span><span class="token punctuation">(</span><span class="token punctuation">)</span>ntdll<span class="token operator">!</span><span class="token function">ZwCreateUserProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span>ntdll<span class="token operator">!</span><span class="token function">ZwResumeThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>创建子进程的过程中最后调用的API是ntdll!ZwResumeThread()，所以钩取该API。</p><p><strong>注意</strong></p><p>ntdll!ZwResumeThread()是尚未公开的API，函数定义如下：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">NTSTATUS NtResumeThread<span class="token punctuation">&#123;</span>IN  HANDLE ThreadHandle<span class="token punctuation">,</span>OUTPULONG SuspendCount OPTIONAL<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆向工程核心原理——IAT_HOOK</title>
      <link href="//post/%E8%AE%A1%E7%AE%97%E5%99%A8%E6%98%BE%E7%A4%BA%E4%B8%AD%E6%96%87%E6%95%B0%E5%AD%97.html"/>
      <url>//post/%E8%AE%A1%E7%AE%97%E5%99%A8%E6%98%BE%E7%A4%BA%E4%B8%AD%E6%96%87%E6%95%B0%E5%AD%97.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>API hook中有一种是通过注入DLL文件来钩取API的，DLL注入目标进程后，修改IAT来更改进程中调用的特定API的功能。</p><p>这一节我们以Windows下的计算器为例。向计算器进程中插入用户的DLL文件，钩取IAT的user32.SetWindowTextW()API地址。</p><h1 id="选定目标API"><a href="#选定目标API" class="headerlink" title="选定目标API"></a>选定目标API</h1><p>我们在选择使用的API钩取技术后，接下来重要的一步就是定目标API，也就是我们要钩取的API。由于我们没有丰富的开发经验，所以大部分情况下我们是不知道要钩取哪个API，在操作系统中，某项功能最终都是由某个或者某些API提供的，我们可以通过检索的方法，推测+验证来确认需要钩取的API。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220307200122.png"></p><p>我们发现有两个API比较引人注目，分别是SetWindowTextW()、SetDlgItemTextW(),他们负责向计算器的文本框中显示文本。由于SetDlgItemTextW其实内部又调用了SetWindowTextW，所以我们就假设钩取SetWindowTextW这一个API就够了</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">BOOL <span class="token function">SetWindowTextW</span><span class="token punctuation">(</span>  <span class="token punctuation">[</span>in<span class="token punctuation">]</span>           HWND    hWnd<span class="token punctuation">,</span>  <span class="token punctuation">[</span>in<span class="token punctuation">,</span> optional<span class="token punctuation">]</span> LPCWSTR lpString<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>我们注意到第二个参数是一个字符串指针，我们将这个指针指向的位置的数字改为中文，应该就能实现目的，现在进行验证</p><h1 id="OllyDbg验证"><a href="#OllyDbg验证" class="headerlink" title="OllyDbg验证"></a>OllyDbg验证</h1><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220307210700.png"></p><p>我们先给API下个断点，这样子在程序运行并且显示字符时就会断下来</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220307211000.png"></p><p>程序运行时，我们发现会给个初始值0。此时我们随便输入一个数字</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220307211206.png"></p><p>程序断了下来，查看字符串指针，缓冲区也是7，我们将这个值改为中文7试试，注意中文7对应的Unicode为4e03，由于x86是小端存储，我们需要改为03 4e ，F9运行，修改成功</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220307211358.png"></p><h1 id="IAT钩取原理"><a href="#IAT钩取原理" class="headerlink" title="IAT钩取原理"></a>IAT钩取原理</h1><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220307214400.png"></p><p>这是正常的调用user32.SetWindowTextW()，地址1001110存储的是user32.SetWindowTextW()的地址，当call [1001110]，其实就是call 77D0960E,程序调用SetWindowTextW函数，执行完后正常返回。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220307215122.png"></p><p>hookiat.dll中提供了mySetWindowTextW()的钩取函数，在1002628首先执行的call指令与正常执行是一样的，只不过这次先进去mySetWindowTextW函数，也就是说在保持代码不变的前提下，将IAT中保存的API起始地址改成了用户函数的起始地址。执行完call指令后，程序进入mySetWindowTextW函数内部，经过一些操作后，调用真正的SetWindowTextW，1000B6B8存放着user32.SetWindowTextW的起始地址，执行完毕后，通过ret指令又回到hookiat中执行，再经过ret指令，返回到calc原来代码段，这就是整个hook iat的过程。</p><h1 id="练习实例"><a href="#练习实例" class="headerlink" title="练习实例"></a>练习实例</h1><h2 id="DLLMain"><a href="#DLLMain" class="headerlink" title="DLLMain()"></a>DLLMain()</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c">BOOL WINAPI <span class="token function">DllMain</span><span class="token punctuation">(</span>HINSTANCE hinstDLL<span class="token punctuation">,</span> DWORD fdwReason<span class="token punctuation">,</span> LPVOID lpvReserved<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">switch</span><span class="token punctuation">(</span> fdwReason <span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">case</span> DLL_PROCESS_ATTACH <span class="token operator">:</span>             <span class="token comment">// 保存原始API的地址</span>           g_pOrgFunc <span class="token operator">=</span> <span class="token function">GetProcAddress</span><span class="token punctuation">(</span><span class="token function">GetModuleHandle</span><span class="token punctuation">(</span>L<span class="token string">"user32.dll"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                         <span class="token string">"SetWindowTextW"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// # hook</span>            <span class="token comment">//  用hookiat.MySetWindowTextW钩取user32.SetWindowTextW</span><span class="token function">hook_iat</span><span class="token punctuation">(</span><span class="token string">"user32.dll"</span><span class="token punctuation">,</span> g_pOrgFunc<span class="token punctuation">,</span> <span class="token punctuation">(</span>PROC<span class="token punctuation">)</span>MySetWindowTextW<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> DLL_PROCESS_DETACH <span class="token operator">:</span>            <span class="token comment">// # unhook</span>            <span class="token comment">//  将calc.exe恢复原值</span>            <span class="token function">hook_iat</span><span class="token punctuation">(</span><span class="token string">"user32.dll"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>PROC<span class="token punctuation">)</span>MySetWindowTextW<span class="token punctuation">,</span> g_pOrgFunc<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> TRUE<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过g_pOrgFunc保存SetWindowTextW的地址，这个会用在后面脱钩的过程中，另外由于已经加载了user32.dll,所以可以直接调用GetProcAddress，否则需要先调用LoadLibrary。</p><p>在DLL加载时，通过hook_iat函数，钩取IAT，将user32.SetWindowTextW的地址更换成hookiat.MySetWindowTextW地址。</p><p>在DLL卸载时，触发hook_iat函数，钩取IAT脱钩，将hookiat.MySetWindowTextW的地址更换成user32.SetWindowTextW地址。</p><h2 id="MySetWindowTextW"><a href="#MySetWindowTextW" class="headerlink" title="MySetWindowTextW()"></a>MySetWindowTextW()</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c">BOOL WINAPI <span class="token function">MySetWindowTextW</span><span class="token punctuation">(</span>HWND hWnd<span class="token punctuation">,</span> LPWSTR lpString<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">wchar_t</span><span class="token operator">*</span> pNum <span class="token operator">=</span> L<span class="token string">"零一二三四五六七八九十"</span><span class="token punctuation">;</span>    <span class="token class-name">wchar_t</span> temp<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> nLen <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> nIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    nLen <span class="token operator">=</span> <span class="token function">wcslen</span><span class="token punctuation">(</span>lpString<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nLen<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token comment">// 将阿拉伯数字转换成中文数字</span>        <span class="token comment">//   lpString是宽字节版本字符串</span>        <span class="token keyword">if</span><span class="token punctuation">(</span> L<span class="token char">'0'</span> <span class="token operator">&lt;=</span> lpString<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> lpString<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> L<span class="token char">'9'</span> <span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> lpString<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            nIndex <span class="token operator">=</span> <span class="token function">_wtoi</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>            lpString<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> pNum<span class="token punctuation">[</span>nIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 调用user32.SetWindowTextW()API</span>    <span class="token comment">// 修改lpString缓冲区的内容</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>PFSETWINDOWTEXTW<span class="token punctuation">)</span>g_pOrgFunc<span class="token punctuation">)</span><span class="token punctuation">(</span>hWnd<span class="token punctuation">,</span> lpString<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>计算器的IAT被钩取后，每当代码中调用user32.SetWindowTextW()函数时，都会先调用hookiat. MySetWindowTextW函数。g_pOrgFunc存放着原始API，指向user32.SetWindowTextW()</p><h2 id="hook-iat"><a href="#hook-iat" class="headerlink" title="hook_iat()"></a>hook_iat()</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c">BOOL <span class="token function">hook_iat</span><span class="token punctuation">(</span>LPCSTR szDllName<span class="token punctuation">,</span> PROC pfnOrg<span class="token punctuation">,</span> PROC pfnNew<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>HMODULE hMod<span class="token punctuation">;</span>LPCSTR szLibName<span class="token punctuation">;</span>PIMAGE_IMPORT_DESCRIPTOR pImportDesc<span class="token punctuation">;</span> PIMAGE_THUNK_DATA pThunk<span class="token punctuation">;</span>DWORD dwOldProtect<span class="token punctuation">,</span> dwRVA<span class="token punctuation">;</span>PBYTE pAddr<span class="token punctuation">;</span>    <span class="token comment">//读取PE文件头信息</span>hMod <span class="token operator">=</span> <span class="token function">GetModuleHandle</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//hMod=ImageBase</span>pAddr <span class="token operator">=</span> <span class="token punctuation">(</span>PBYTE<span class="token punctuation">)</span>hMod<span class="token punctuation">;</span> <span class="token comment">//pAddr=ImageBase</span>pAddr <span class="token operator">+=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>DWORD<span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>pAddr<span class="token punctuation">[</span><span class="token number">0x3C</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//PE标识</span>dwRVA <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>DWORD<span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>pAddr<span class="token punctuation">[</span><span class="token number">0x80</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//dwRVA=RVA of IID</span>pImportDesc <span class="token operator">=</span> <span class="token punctuation">(</span>PIMAGE_IMPORT_DESCRIPTOR<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span>DWORD<span class="token punctuation">)</span>hMod<span class="token operator">+</span>dwRVA<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token punctuation">;</span> pImportDesc<span class="token operator">-></span>Name<span class="token punctuation">;</span> pImportDesc<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// dllname的rva</span>szLibName <span class="token operator">=</span> <span class="token punctuation">(</span>LPCSTR<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span>DWORD<span class="token punctuation">)</span>hMod <span class="token operator">+</span> pImportDesc<span class="token operator">-></span>Name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//比较 pImportDesc->Name与“user32.dll”是否一样</span><span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token operator">!</span><span class="token function">_stricmp</span><span class="token punctuation">(</span>szLibName<span class="token punctuation">,</span> szDllName<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// pThunk = IMAGE_IMPORT_DESCRIPTOR.FirstThunk</span>            <span class="token comment">// pThunk是导入地址表(IAT)的rva</span>pThunk <span class="token operator">=</span> <span class="token punctuation">(</span>PIMAGE_THUNK_DATA<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span>DWORD<span class="token punctuation">)</span>hMod <span class="token operator">+</span> pImportDesc<span class="token operator">-></span>FirstThunk<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// pThunk->u1.Function = VA to API</span><span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token punctuation">;</span> pThunk<span class="token operator">-></span>u1<span class="token punctuation">.</span>Function<span class="token punctuation">;</span> pThunk<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span> pThunk<span class="token operator">-></span>u1<span class="token punctuation">.</span>Function <span class="token operator">==</span> <span class="token punctuation">(</span>DWORD<span class="token punctuation">)</span>pfnOrg <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token comment">// 更改内存属性为E/R/W</span><span class="token function">VirtualProtect</span><span class="token punctuation">(</span><span class="token punctuation">(</span>LPVOID<span class="token punctuation">)</span><span class="token operator">&amp;</span>pThunk<span class="token operator">-></span>u1<span class="token punctuation">.</span>Function<span class="token punctuation">,</span>                                    <span class="token number">4</span><span class="token punctuation">,</span>                                    PAGE_EXECUTE_READWRITE<span class="token punctuation">,</span>                                    <span class="token operator">&amp;</span>dwOldProtect<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment">// 修改IAT</span>                    pThunk<span class="token operator">-></span>u1<span class="token punctuation">.</span>Function <span class="token operator">=</span> <span class="token punctuation">(</span>DWORD<span class="token punctuation">)</span>pfnNew<span class="token punctuation">;</span>                    <span class="token comment">// 恢复内存属性</span>                    <span class="token function">VirtualProtect</span><span class="token punctuation">(</span><span class="token punctuation">(</span>LPVOID<span class="token punctuation">)</span><span class="token operator">&amp;</span>pThunk<span class="token operator">-></span>u1<span class="token punctuation">.</span>Function<span class="token punctuation">,</span>                                    <span class="token number">4</span><span class="token punctuation">,</span>                                    dwOldProtect<span class="token punctuation">,</span>                                    <span class="token operator">&amp;</span>dwOldProtect<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> TRUE<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> FALSE<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="调试被注入的DLL文件"><a href="#调试被注入的DLL文件" class="headerlink" title="调试被注入的DLL文件"></a>调试被注入的DLL文件</h1><p>由于Ollydbg1.0在调试Dll的时候会出现一些bug，所以我们使用Ollydbg2.0</p><p>先将calc.exe附加到Ollydbg上，然后F9运行。设置在加载新DLL时暂停</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220307233019.png"></p><p>然后注入我们的DLL，od就会停在我们新加载的DLL的入口点，再把刚才设置的pause on new module取消掉</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220307233219.png"></p><p>我们可以通过单步跟或者查找DllMain中使用的字符串来找到DllMain()函数，我们知道DllMain中使用了“user32.dll”和”SetWindowTextW“字符串</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220307233855.png"></p><p>可以结合之前的C语言代码进行调试</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>IAT钩取主要就是对IAT进行修改，将IAT中原本存放SetWindowTextW的地方设置成我们自己的函数，当我们的函数执行完后再跳回到真正的SetWindowText执行接下来的指令。</p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆向工程核心原理——通过修改PE加载DLL</title>
      <link href="//post/%E9%80%9A%E8%BF%87%E4%BF%AE%E6%94%B9PE%E5%8A%A0%E8%BD%BDDLL.html"/>
      <url>//post/%E9%80%9A%E8%BF%87%E4%BF%AE%E6%94%B9PE%E5%8A%A0%E8%BD%BDDLL.html</url>
      
        <content type="html"><![CDATA[<h1 id="通过修改PE加载DLL"><a href="#通过修改PE加载DLL" class="headerlink" title="通过修改PE加载DLL"></a>通过修改PE加载DLL</h1><h2 id="修改思路"><a href="#修改思路" class="headerlink" title="修改思路"></a>修改思路</h2><p>PE文件中导入的DLL信息以结构体列表的形式存储在IDT中，所以我们把要注入的DLL(myhack3.dll)添加到列表尾部就行了，在这之前我们还需要确认一下IDT中是否有足够的空间。</p><h2 id="查看IDT是否有足够的空间"><a href="#查看IDT是否有足够的空间" class="headerlink" title="查看IDT是否有足够的空间"></a>查看IDT是否有足够的空间</h2><p>首先，使用PEVIEW查看TextView.exe的IDT地址，存放在IMAGE_OPTIONAL_HEADER的导入表位置，是一个RVA</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220228145643.png"></p><p>以RVA视角查看，发现IDT存在于data节</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220228145949.png"></p><p>IDT中是由IMAGE_IMPORT_DESCRIPTOR结构体组成的数组，每个大小为0x14个字节，整个IDT的大小为0x14*5&#x3D;0x64字节。</p><h3 id="IID结构体定义"><a href="#IID结构体定义" class="headerlink" title="IID结构体定义"></a>IID结构体定义</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_IMAGE_IMPORT_DESCRIPTOR</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">union</span> <span class="token punctuation">&#123;</span>         DWORD   Characteristics<span class="token punctuation">;</span>                    DWORD   OriginalFirstThunk<span class="token punctuation">;</span>       <span class="token comment">//RVA 指向IMAGE_THUNK_DATA结构数组</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>     DWORD   TimeDateStamp<span class="token punctuation">;</span>               <span class="token comment">//时间戳</span>     DWORD   ForwarderChain<span class="token punctuation">;</span>                   DWORD   Name<span class="token punctuation">;</span><span class="token comment">//RVA,指向dll名字，该名字以0结尾</span>     DWORD   FirstThunk<span class="token punctuation">;</span>                 <span class="token comment">//RVA,指向IMAGE_THUNK_DATA结构数组</span> <span class="token punctuation">&#125;</span> IMAGE_IMPORT_DESCRIPTOR<span class="token punctuation">;</span> <span class="token keyword">typedef</span> IMAGE_IMPORT_DESCRIPTOR UNALIGNED <span class="token operator">*</span>PIMAGE_IMPORT_DESCRIPTOR<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们查看一下文件偏移0x76CC，通过010Editor查看</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220228150518.png"></p><p>IDT的文件偏移为76CC-772F，大小为0x64字节，共有5个IID结构体，并且最后一个为NULL，我们从图中发现IDT尾部存在数据，所以我们没用足够的空间来添加myhack3.dll的IID结构体</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220228150710.png"></p><h2 id="移动IDT"><a href="#移动IDT" class="headerlink" title="移动IDT"></a>移动IDT</h2><p>如遇到空间不够，我们需要将整个IDT移动到其他更广阔的位置，然后再添加新的IID。</p><p>我们可以采用下面三种方法:</p><p>1.查找文件中的空白区域</p><p>2.增加文件最后一个节区的大小</p><p>3.在文件末尾添加新节区</p><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>我们发现rdata尾部存在大片空白区域，这种空白区域被称为Null-Padding区域</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220228204234.png"></p><p>那我们就把原IDT表移动到RVA:8C60-8DFF中合适的位置</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220228204804.png"></p><p>我们查看rdata节区头，rdata节区在文件中的大小为2E00,在内存中为2C56，剩余未被使用的大小为1AA(2E00-2C56),所以我们创建是没有什么问题的。</p><p><strong>注意</strong></p><p>在PE尾部有些部分填充NULL，但不意味着这些部分都是空白可用区域，它们可能是程序使用的区域，也有可能不会加载到内存中，在移动IDT之前我们需要通过节区头判断。</p><h4 id="1-修改导入表的RVA值"><a href="#1-修改导入表的RVA值" class="headerlink" title="1.修改导入表的RVA值"></a>1.修改导入表的RVA值</h4><p>IMAGE_OPTIONAL_HEADER的导入表结构体中用来指出IDT的位置和大小</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220228205829.png"></p><p>RVA为84CC,我们改成新的IDT的RVA-8C80,size在原有的基础上+0x14，修改为0x78</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220228210214.png"></p><h4 id="2-删除绑定导入表"><a href="#2-删除绑定导入表" class="headerlink" title="2.删除绑定导入表"></a>2.删除绑定导入表</h4><p>如果我们正常导入myhack3.dll，需要向绑定导入表添加信息，但幸运的是，这个绑定注入表是个可选项，我们直接删除，这样比较方便。如果存在，但是内部记录信息错误，可能会在程序运行时引发错误。</p><h4 id="3-创建新的IDT"><a href="#3-创建新的IDT" class="headerlink" title="3.创建新的IDT"></a>3.创建新的IDT</h4><p>首先把原来的IDT(RAW:76CC-772F)复制到新的地址(7E80)上，然后在后面添加一个IID结构用来描述myhack3.dll</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_IMAGE_IMPORT_DESCRIPTOR</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">union</span> <span class="token punctuation">&#123;</span>         DWORD   Characteristics<span class="token punctuation">;</span>                    DWORD   OriginalFirstThunk<span class="token punctuation">;</span>       <span class="token comment">//00008D00 RVA to INT</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>     DWORD   TimeDateStamp<span class="token punctuation">;</span>               <span class="token comment">//0</span>     DWORD   ForwarderChain<span class="token punctuation">;</span>              <span class="token comment">//0</span>     DWORD   Name<span class="token punctuation">;</span><span class="token comment">//00008D10 RVA to DLL NAME</span>     DWORD   FirstThunk<span class="token punctuation">;</span>                 <span class="token comment">//00008D20 RVA to IAT</span> <span class="token punctuation">&#125;</span> IMAGE_IMPORT_DESCRIPTOR<span class="token punctuation">;</span> <span class="token keyword">typedef</span> IMAGE_IMPORT_DESCRIPTOR UNALIGNED <span class="token operator">*</span>PIMAGE_IMPORT_DESCRIPTOR<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220228212014.png"></p><h4 id="4-设置Name、INT、IAT"><a href="#4-设置Name、INT、IAT" class="headerlink" title="4.设置Name、INT、IAT"></a>4.设置Name、INT、IAT</h4><p>我们添加了IID的成员指向了其他的数据结构的RVA值，因此我们需要对这些数据进行修复，才能保证程序正常执行，</p><table><thead><tr><th></th><th>RVA</th><th>RAW</th></tr></thead><tbody><tr><td>INT</td><td>8D00</td><td>7F00</td></tr><tr><td>NAME</td><td>8D10</td><td>7F10</td></tr><tr><td>IAT</td><td>8D20</td><td>7F20</td></tr></tbody></table><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220228220925.png"></p><p>0x7040是RAW，对应的RVA是8D30，在运行前,INT和IAT都指向函数名，所以RAW为7F00和7F20的地方填写30 8D 00 00 ,而7F10则是DLL的名字。</p><h4 id="5-修改IAT节区的属性值"><a href="#5-修改IAT节区的属性值" class="headerlink" title="5.修改IAT节区的属性值"></a>5.修改IAT节区的属性值</h4><p>由于PE加载到内存时，PE装载器会修改IAT，写入函数的实际地址，所以rdata节区需要有可写属性，只有这样，PE装载器才有正常进行写入操作。</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220228215906.png"></p><p>我们需要添加IMAGE_SCN_MEM_WRITE(80000000)属性，按位or运算后，属性值变为C0000040</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220228220158.png"></p><h4 id="6-检测验证"><a href="#6-检测验证" class="headerlink" title="6.检测验证"></a>6.检测验证</h4><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220228221220.png"></p><p>已经注入成功了。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结:"></a>总结:</h1><p>通过修改PE加载DLL，其实就是通过将dll添加到IDT中，利用程序加载时会自动加载dll，将myhack3.dll加载到程序中。</p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆向工程核心原理——DLL注入</title>
      <link href="//post/DLL%E6%B3%A8%E5%85%A5.html"/>
      <url>//post/DLL%E6%B3%A8%E5%85%A5.html</url>
      
        <content type="html"><![CDATA[<h1 id="DLL注入"><a href="#DLL注入" class="headerlink" title="DLL注入"></a>DLL注入</h1><p>DLL注入是指向运行中的其他进程强制插入特点的DLL文件。DLL注入命令其他进程自行调用LoadLibrary()API,加载用户指定的DLL文件，此时该DLL的DllMain()函数就会被调用执行。</p><h2 id="DLL注入的实现方法"><a href="#DLL注入的实现方法" class="headerlink" title="DLL注入的实现方法"></a>DLL注入的实现方法</h2><ol><li>创建远程线程(CreateRemoteThread() API)</li><li>使用注册表(AppInit_DLLs值)</li><li>消息钩取(SetWindowsHookEx()API)</li></ol><h3 id="CreateRemoteThread"><a href="#CreateRemoteThread" class="headerlink" title="CreateRemoteThread()"></a>CreateRemoteThread()</h3><p>首先看一下myhack.dll源代码</p><h4 id="myhack-dll"><a href="#myhack-dll" class="headerlink" title="myhack.dll"></a>myhack.dll</h4><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"pch.h"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;Windows.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;tchar.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression"><span class="token function">comment</span><span class="token punctuation">(</span>lib<span class="token punctuation">,</span></span><span class="token string">"urlmon.lib"</span><span class="token expression"><span class="token punctuation">)</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Urlmon.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">DEF_URL</span> <span class="token expression"><span class="token punctuation">(</span>L</span><span class="token string">"http://www.naver.com/index.html"</span><span class="token expression"><span class="token punctuation">)</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">DEF_FILE_NAME</span> <span class="token expression"><span class="token punctuation">(</span>L</span><span class="token string">"index.html"</span><span class="token expression"><span class="token punctuation">)</span></span></span>HMODULE g_hMod <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>DWORD WINAPI <span class="token function">ThreadProc</span><span class="token punctuation">(</span>LPVOID lParam<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">//第三个参数填需要下载文件的地址</span>    <span class="token function">URLDownloadToFile</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span> DEF_URL<span class="token punctuation">,</span> L<span class="token string">"C:\\Users\\rkvir\\Desktop\\hook\\index.html"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>BOOL APIENTRY <span class="token function">DllMain</span><span class="token punctuation">(</span> HMODULE hModule<span class="token punctuation">,</span>                       DWORD  ul_reason_for_call<span class="token punctuation">,</span>                       LPVOID lpReserved                     <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    HANDLE hThread <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>    g_hMod <span class="token operator">=</span> hModule<span class="token punctuation">;</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>ul_reason_for_call<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> DLL_PROCESS_ATTACH<span class="token operator">:</span>        <span class="token function">OutputDebugString</span><span class="token punctuation">(</span>L<span class="token string">"myhack.dll Injection!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hThread <span class="token operator">=</span> <span class="token function">CreateThread</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> ThreadProc<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">CloseHandle</span><span class="token punctuation">(</span>hThread<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> DLL_THREAD_ATTACH<span class="token operator">:</span>    <span class="token keyword">case</span> DLL_THREAD_DETACH<span class="token operator">:</span>    <span class="token keyword">case</span> DLL_PROCESS_DETACH<span class="token operator">:</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> TRUE<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们可以看到该DLL被加载时，先输出一个字符串myhack.dll Injection!，然后创建线程调用函数，通过URLDownloadToFile()API下载指定网站的文件。</p><h4 id="InjectDll-exe"><a href="#InjectDll-exe" class="headerlink" title="InjectDll.exe"></a>InjectDll.exe</h4><p>当我们有了实现功能的DLL文件，现在还需要一个能够将DLL注入到进程中的工具</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;Windows.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;tchar.h></span></span>BOOL <span class="token function">InjectDll</span><span class="token punctuation">(</span>DWORD dwPid<span class="token punctuation">,</span> LPCTSTR szDllPath<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>HANDLE hProcess <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> hThread <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>HMODULE hMod <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>LPVOID pRemoteBuf <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>DWORD dwBufSize <span class="token operator">=</span> <span class="token punctuation">(</span>DWORD<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">_tcslen</span><span class="token punctuation">(</span>szDllPath<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>TCHAR<span class="token punctuation">)</span><span class="token punctuation">;</span>LPTHREAD_START_ROUTINE pThreadProc<span class="token punctuation">;</span><span class="token comment">//1.使用dwPid获取 目标进程(notepad.exe)句柄</span>hProcess <span class="token operator">=</span> <span class="token function">OpenProcess</span><span class="token punctuation">(</span>PROCESS_ALL_ACCESS<span class="token punctuation">,</span> FALSE<span class="token punctuation">,</span> dwPid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hProcess<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">_tprintf</span><span class="token punctuation">(</span>L<span class="token string">"OpenProcess(%d)v failed!!! [%d]\n"</span><span class="token punctuation">,</span> dwPid<span class="token punctuation">,</span> <span class="token function">GetLastError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> FALSE<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//2.在目标进程(notepad.exe)中分配szDllName大小的内存,dll文件的路径</span>pRemoteBuf <span class="token operator">=</span> <span class="token function">VirtualAllocEx</span><span class="token punctuation">(</span>hProcess<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> dwBufSize<span class="token punctuation">,</span> MEM_COMMIT<span class="token punctuation">,</span> PAGE_READWRITE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//3.将myhack.dll路径写入分配的内存</span><span class="token function">WriteProcessMemory</span><span class="token punctuation">(</span>hProcess<span class="token punctuation">,</span> pRemoteBuf<span class="token punctuation">,</span> <span class="token punctuation">(</span>LPVOID<span class="token punctuation">)</span>szDllPath<span class="token punctuation">,</span> dwBufSize<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//4.获取LoadLibraryW()API的地址</span>hMod <span class="token operator">=</span> <span class="token function">GetModuleHandle</span><span class="token punctuation">(</span>L<span class="token string">"kernel32.dll"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>pThreadProc <span class="token operator">=</span> <span class="token punctuation">(</span>LPTHREAD_START_ROUTINE<span class="token punctuation">)</span><span class="token function">GetProcAddress</span><span class="token punctuation">(</span>hMod<span class="token punctuation">,</span> <span class="token string">"LoadLibraryW"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//5.在notepad.exe进程中运行线程</span><span class="token comment">//pThreadProc为notepa.exe进程内存中的LoadLibraryW地址</span><span class="token comment">//pRemoteBuf为写入到notepa.exe进程内存中的myhack.dll字符串地址</span>hThread <span class="token operator">=</span> <span class="token function">CreateRemoteThread</span><span class="token punctuation">(</span>hProcess<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> pThreadProc<span class="token punctuation">,</span> pRemoteBuf<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">WaitForSingleObject</span><span class="token punctuation">(</span>hThread<span class="token punctuation">,</span> INFINITE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">CloseHandle</span><span class="token punctuation">(</span>hThread<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">CloseHandle</span><span class="token punctuation">(</span>hProcess<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> TRUE<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">_tmain</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> TCHAR<span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>argc<span class="token operator">!=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//检查输入程序的参数是否为3个</span><span class="token function">_tprintf</span><span class="token punctuation">(</span>L<span class="token string">"USAGE: %s Pid Dll_Path \n"</span><span class="token punctuation">,</span> argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">InjectDll</span><span class="token punctuation">(</span><span class="token punctuation">(</span>DWORD<span class="token punctuation">)</span><span class="token function">_tstol</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">_tprintf</span><span class="token punctuation">(</span>L<span class="token string">"InjectDll(\"%s\") Success!!!\n"</span><span class="token punctuation">,</span> argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token function">_tprintf</span><span class="token punctuation">(</span>L<span class="token string">"InjectDll(\"%s\") Failed!!!\n"</span><span class="token punctuation">,</span> argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其实这里面最主要的就是CreateRemoteThread，通过这个API，我们可以在notepad.exe进程中创建一个实现DLL加载的LoadLibrary线程.CreateRemoteThread的第四个参数原本是指向线程函数地址，我们指向LoadLibrary，同时第五个参数就是LoadLibrary的参数，我们传入需要加载的DLL的路径。</p><h3 id="AppInit-DLLS"><a href="#AppInit-DLLS" class="headerlink" title="AppInit_DLLS"></a>AppInit_DLLS</h3><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220226145406.png"></p><p>将要注入的DLL的路径字符串写入AppInit_DLLs项目，然后将LoadAppInit_DLLs的项目置为1，就可以实现注入</p><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>User32.dll被加载到进程中时，会读取AppInit_DLLs注册表项，若有值，则调用LoadLibrary()API加载用户DLL。严格意义上说，dll只会加载到加载User32.dll的进程。</p><h4 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h4><p>我们实现注入myhack2.dll</p><p>1.首先修改AppInit_DLLs的值</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220226150523.png"></p><p>2.将LoadAppInit_DLLs的值修改为1</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220226150707.png"></p><p>3.重启系统，使修改生效</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20220226151927.png"></p><p>已经注入进去了，只要加载user32.dll的进程都会被注入，但是只有进程为notepad.exe才会进行操作</p><h3 id="SetWindowsHookEx"><a href="#SetWindowsHookEx" class="headerlink" title="SetWindowsHookEx()"></a>SetWindowsHookEx()</h3><p>这个API安装好消息钩子后，由OS将指定的DLL强制注入到相应的进程</p><h1 id="DLL卸载"><a href="#DLL卸载" class="headerlink" title="DLL卸载"></a>DLL卸载</h1><p>利用了FreeLibrary()API,仅适用于卸载自己强制注入的DLL文件，和通过CreateRemoteThread原理一样，这里只是把第四个参数改为FreeLibrary的地址，第五个参数为DLL加载地址。</p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows内核基础知识-段选择子与段描述符</title>
      <link href="//post/%E6%AE%B5%E4%B8%8E%E9%A1%B5%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.html"/>
      <url>//post/%E6%AE%B5%E4%B8%8E%E9%A1%B5%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.html</url>
      
        <content type="html"><![CDATA[<h1 id="CPU的3个模式："><a href="#CPU的3个模式：" class="headerlink" title="CPU的3个模式："></a>CPU的3个模式：</h1><h2 id="1、实模式："><a href="#1、实模式：" class="headerlink" title="1、实模式："></a>1、实模式：</h2><p>DOS系统下的CPU用的就是实模式，里面用的地址就是真实的物理地址。现在的系统已经没有使用实模式的了，只是在启动的瞬间是实模式，然后进入保护模式。</p><h2 id="2、保护模式："><a href="#2、保护模式：" class="headerlink" title="2、保护模式："></a>2、保护模式：</h2><p>保护模式中的地址是假的，如果要从保护模式到实模式的地址，无论是低2G还是高2G都要经过转换。除了CR3寄存器存储的是物理地址，其他的寄存器全是线性地址。</p><h2 id="3、虚拟8086模式："><a href="#3、虚拟8086模式：" class="headerlink" title="3、虚拟8086模式："></a>3、虚拟8086模式：</h2><p>如果在保护模式下，想运行实模式的代码，也是可以运行的，就是虚拟8086模式。虚拟8086模式仍然是保护模式，而不是实模式。</p><h1 id="保护模式"><a href="#保护模式" class="headerlink" title="保护模式"></a>保护模式</h1><h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p>我们学习保护模式，肯定要知道保护模式有啥用，它保护的是资源，也就是寄存器，它与段和页都有很大的联系，我们接下来的学习任务都是学习段和页。</p><h2 id="段寄存器"><a href="#段寄存器" class="headerlink" title="段寄存器"></a>段寄存器</h2><p>ES 堆栈段 CS 代码段 SS 堆栈段 DS 堆栈段</p><p>FS 标志段寄存器 GS 全局段寄存器 LDTR TR</p><h2 id="段"><a href="#段" class="headerlink" title="段"></a>段</h2><h3 id="段是具有属性的"><a href="#段是具有属性的" class="headerlink" title="段是具有属性的"></a>段是具有属性的</h3><p>CS 代码段，可读可执行，不可以写</p><p>DS 数据段，可读也可写，不可执行</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20211004220220.png"></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;Windows.h></span></span><span class="token keyword">int</span> val <span class="token operator">=</span> <span class="token number">0x10</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>_asm<span class="token punctuation">&#123;</span>mov ax<span class="token punctuation">,</span> cs<span class="token punctuation">;</span>mov ds<span class="token punctuation">,</span> ax<span class="token punctuation">;</span>mov ebx<span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">;</span>mov dword ptr<span class="token punctuation">[</span>val<span class="token punctuation">]</span><span class="token punctuation">,</span> ebx<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由于ds数据段是存放数据的，但是我们现在给ds寄存器赋值了cs寄存器的属性，那么就会导致ds现在不可以写入，也就是会赋值失败，下图就是报了访问异常的错误</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20211004220514.png"></p><h3 id="探究段的基址base和长度limit"><a href="#探究段的基址base和长度limit" class="headerlink" title="探究段的基址base和长度limit"></a>探究段的基址base和长度limit</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;Windows.h></span></span><span class="token keyword">int</span> val <span class="token operator">=</span> <span class="token number">0x10</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>_asm<span class="token punctuation">&#123;</span>mov eax<span class="token punctuation">,</span> <span class="token number">0x1</span><span class="token punctuation">;</span>mov dword ptr ds<span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> eax<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221225221730.png"></p><p>当我们尝试写入ds:[0]会触发异常，但是我们改成下面的代码</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;Windows.h></span></span><span class="token keyword">int</span> val <span class="token operator">=</span> <span class="token number">0x10</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>_asm<span class="token punctuation">&#123;</span>mov eax<span class="token punctuation">,</span> <span class="token number">0x1</span><span class="token punctuation">;</span>mov dword ptr fs<span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> eax<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这串代码和前面的区别在于由ds改为了fs，说明我们写入fs的0位置是没有问题的，这个就是与段的基址base有关</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20211014224631.png"></p><p>我们可以发现除了fs，其他的段base都是从0开始的，而fs之所以可以正常访问，是因为fs指向TEB表，我们写入数据，相当于改了TEB表的便宜为0的地址上的数据。另外如果我们想得到fs的base，不能直接 lea eax,dword ptr fs:[0] ，这个会使eax&#x3D;0，因为lea实际上取的是[]之间的东西</p><p>通过Windbg可以查看一下TEB结构体</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20211014230258.png"></p><p>在偏移0x18的地方存放着指向自己的首地址，直接mov eax,dword ptr fs:[0x18]</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;Windows.h></span></span><span class="token keyword">int</span> val <span class="token operator">=</span> <span class="token number">0x10</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>_asm<span class="token punctuation">&#123;</span>xor eax<span class="token punctuation">,</span> eax<span class="token punctuation">;</span>mov eax<span class="token punctuation">,</span> dword ptr fs <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0x18</span><span class="token punctuation">]</span><span class="token punctuation">;</span>mov val<span class="token punctuation">,</span> eax<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%X"</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221225222207.png"></p><h3 id="保护模式寻址方式"><a href="#保护模式寻址方式" class="headerlink" title="保护模式寻址方式"></a><strong>保护模式寻址方式</strong></h3><p>段.base+offset（逻辑地址）&#x3D;线性地址,取值最大长度limit</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20211014232121.png"></p><h2 id="段选择子"><a href="#段选择子" class="headerlink" title="段选择子"></a>段选择子</h2><p>保护模式下的段寄存器其实由16位的段选择子和64位的段描述符寄存器构成，我们OD看到的是段选择子</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/1073465203.png"></p><p><strong>段选择子</strong>：存储段描述符的索引，也就是我们前面在OD里面看到的类似0x1B,0x23这些</p><p><strong>段描述符寄存器</strong>： 存储段描述符，里面包含一些段的属性，段的base，段的limit等</p><p>在16位汇编中，段寄存器中放段基址，IP中放偏移。CS:IP</p><p>在32位汇编中，段寄存器中放段选择子，我们需要根据下图对段选择子进行拆分</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/3348667541.png"></p><h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><p>CS:1B 二进制为: 0001 1011 ，按图片拆分得到：00011 0 11 </p><p>Index:3</p><p>Ti:0 &#x2F;&#x2F;在windows中LDT表没有用，所以Ti一直为0</p><p>RPL:3 也就是说明我们现在是在R3层</p><h3 id="如何查GDT表"><a href="#如何查GDT表" class="headerlink" title="如何查GDT表"></a><strong>如何查GDT表</strong></h3><p>GDT表的地址存放在gdtr寄存器中，GDT表的大小存放在gdtl中</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221225225523.png"></p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/QQ%E6%88%AA%E5%9B%BE20221225225548.png"></p><p>我们用 dq 80b95000 （dq表示四字，即64位 ）</p><p>从0开始，索引为3，所以我们找到：</p><p>CS段描述符为：00cffb00&#96;0000ffff</p><h2 id="段描述符"><a href="#段描述符" class="headerlink" title="段描述符"></a>段描述符</h2><p>我们已经通过索引找到了段描述符，现在我们开始分析和拆解段描述符</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/3994720798.png"></p><p>分为高32位和低32位，根据上表拆解CS的段描述符：</p><p>我们把CS的段描述符转换成二进制</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">0000 0000 1100 1111 1111 1011 0000 0000 //高32位0000 0000 0000 0000 1111 1111 1111 1111 //低32位Base：0000 0000 0000 0000 0000 0000 0000 0000（十六进制00000000）Limit：1111 1111 1111 1111 1111(十六进制fffff）TYPE:1011（十六进制B）S:1DPL:11P:1AVL:0D/B:1G:1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同理也可以拆解其他的段描述符，这里可以用C语言去实现</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">_CRT_SECURE_NO_WARNINGS</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token keyword">struct</span> <span class="token class-name">low_word</span> <span class="token punctuation">&#123;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> limit_0_15 <span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> base_0_15 <span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">struct</span> <span class="token class-name">high_word</span> <span class="token punctuation">&#123;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> base_16_23 <span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> type <span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> s <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> DPL <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> p <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> limit_16_19 <span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> avl <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> l <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> d_b <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> g <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> base_24_31 <span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">seg_des</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">high_word</span><span class="token operator">*</span> ph<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">low_word</span><span class="token operator">*</span> pl<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> seg_base<span class="token punctuation">;</span>seg_base <span class="token operator">=</span> <span class="token punctuation">(</span>ph<span class="token operator">-></span>base_24_31 <span class="token operator">&lt;&lt;</span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>ph<span class="token operator">-></span>base_16_23 <span class="token operator">&lt;&lt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>pl<span class="token operator">-></span>base_0_15<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//段基址 </span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"seg_base=0x%08x\n"</span><span class="token punctuation">,</span> seg_base<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> seg_limit<span class="token punctuation">;</span>seg_limit <span class="token operator">=</span> <span class="token punctuation">(</span>ph<span class="token operator">-></span>limit_16_19 <span class="token operator">&lt;&lt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>pl<span class="token operator">-></span>limit_0_15<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"seg_limit=0x%x\n"</span><span class="token punctuation">,</span> seg_limit<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Type=0x%x\n"</span><span class="token punctuation">,</span> ph<span class="token operator">-></span>type<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"S=%x\n"</span><span class="token punctuation">,</span> ph<span class="token operator">-></span>s<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"DPL=%x\n"</span><span class="token punctuation">,</span> ph<span class="token operator">-></span>DPL<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"P=%x\n"</span><span class="token punctuation">,</span> ph<span class="token operator">-></span>p<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"AVL=%x\n"</span><span class="token punctuation">,</span> ph<span class="token operator">-></span>avl<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"DEF=%x\n"</span><span class="token punctuation">,</span> ph<span class="token operator">-></span>l<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"D/B=%x\n"</span><span class="token punctuation">,</span> ph<span class="token operator">-></span>d_b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"G=%x\n"</span><span class="token punctuation">,</span> ph<span class="token operator">-></span>g<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"please input the segment descriptor\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">struct</span> <span class="token class-name">high_word</span><span class="token operator">*</span> high<span class="token punctuation">;</span><span class="token keyword">struct</span> <span class="token class-name">low_word</span><span class="token operator">*</span> low<span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> l_word <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> h_word <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//请求用户输入描述符，先是低32位，再是高32位</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"low:\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%x"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>l_word<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"high:\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%x"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>h_word<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"-----------------------\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>high <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">high_word</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>h_word<span class="token punctuation">;</span>low <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">low_word</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>l_word<span class="token punctuation">;</span><span class="token function">seg_des</span><span class="token punctuation">(</span>high<span class="token punctuation">,</span> low<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"------------------------\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Type位"><a href="#Type位" class="headerlink" title="Type位"></a>Type位</h3><p>有四位，通过值在表中进行索引</p><p><img src="https://raw.githubusercontent.com/Whitebird0/tuchuang/main/20201128125007604.png"></p><h3 id="G位"><a href="#G位" class="headerlink" title="G位"></a><strong>G位</strong></h3><p>颗粒度</p><p>G &#x3D; 1 Limit单位为页</p><p>G &#x3D; 0 Limit单位为字节</p><p>页分为两种</p><p>大页：4MB</p><p>小页：4KB&#x3D;4096B&#x3D;0x1000Byte（我们使用）</p><p>所以Limit&#x3D;Limit*0x1000，既ffffff*0x1000&#x3D;ffffff000</p><p>因为我们从第0页开始，所以ffffff000+0x1000</p><p>又因为地址从0开始，所以还得ffffff000+0x1000-1&#x3D;ffffffff</p><p>所以最后base为00000000，limit为ffffffff</p>]]></content>
      
      
      <categories>
          
          <category> Windows内核 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows内核 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
